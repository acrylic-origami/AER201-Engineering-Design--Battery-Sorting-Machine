22 feb [wed]
------------
I'm having problems with getting my pins to read input. The problem is that the pins are multiplexed with other functions and there are tons of registers that I need to modify. This makes it impossible to have a simple interface for setting pins and reading values, since I would have to consider the option that maybe I might want to use these special functions. I think for the io pin I'll just turn of the special functions and care only about making the pins digital input

I just solved a problem with the ide, for some reason the buttons for uploading the code were grey, so I couldn't click on them. it turns out that in the project protperties the picit3 option for programming the microcontroller wasn't selected, but the simulator option was.

21 feb [sun]
------------
I forgot that I should document problems as I work. So anyway first problem of the day was I was getting the variable redefined error when I compiled my project. Through a bit of googling, it turns out that when I want to include c files in my main.c file, I must include their header files and not the c file. The header file declares the interface of the module. So the peculiar problem had to do with me not knowing the C language thouroughly.

Second problem, I'm getting some timing issues. When I send multiple instructions to the lcd it doesn't do the last instruction. I think it has to do with timing of signals, like the lcd needs more time to process the first command before processing the second one. So I looked up the timing diagram for the lcd module and found that the after you set the enable pin to send data you have to hold it for at least 500us (microseconds). This seemed to make it work better, but I the text still came out as gibberish on the screen which told me there was another issue. To solve it I added a 1ms delay after an instruction was sent to let lcd process it, and now everything seems to work well.

18 feb [sat]
------------

(A/D module)
-analog to digital converter
-13 analog inputs for pic18F4620
-converts analog to 10bit digital number
-the voltage reference can be programmed
-4 registers in common:
	- ADRESH - contain high bits of conversion result
	- ADRESL - contain low bits of conversion result
	- ADCON0 - control operation of A/D module
	- ADCON1 - configures functions of port pins (A and E)
1 extra register for pic18
	- ADCON2 - configures the A/D clodk source, acquisition time and justification

(Operation steps)
1.configure the A/D module
2.configure interrupt (optional)
3.wait the required acquisition time
4.start conversion
5.wait for conversion to finish
6.read A/D result from registers