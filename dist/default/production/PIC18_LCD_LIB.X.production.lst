

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Feb 21 21:34:47 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.40
    21                           ; Generated 01/12/2016 GMT
    22                           ; 
    23                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4620 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	smallconst
    56  001000                     __psmallconst:
    57                           	opt stack 0
    58  001000  00                 	db	0
    59  001001  31                 	db	49
    60  001002  32                 	db	50
    61  001003  33                 	db	51
    62  001004  41                 	db	65
    63  001005  34                 	db	52
    64  001006  35                 	db	53
    65  001007  36                 	db	54
    66  001008  42                 	db	66
    67  001009  37                 	db	55
    68  00100A  38                 	db	56
    69  00100B  39                 	db	57
    70  00100C  43                 	db	67
    71  00100D  2A                 	db	42
    72  00100E  30                 	db	48
    73  00100F  23                 	db	35
    74  001010  44                 	db	68
    75  001011  00                 	db	0
    76  001012                     __end_of_keys:
    77                           	opt stack 0
    78  0000                     _ADCON0	set	4034
    79  0000                     _ADCON1	set	4033
    80  0000                     _LATB	set	3978
    81  0000                     _LATD	set	3980
    82  0000                     _LATDbits	set	3980
    83  0000                     _PORTA	set	3968
    84  0000                     _PORTB	set	3969
    85  0000                     _PORTBbits	set	3969
    86  0000                     _PORTC	set	3970
    87  0000                     _PORTD	set	3971
    88  0000                     _TRISA	set	3986
    89  0000                     _TRISB	set	3987
    90  0000                     _TRISC	set	3988
    91  0000                     _TRISD	set	3989
    92  001012                     STR_3:
    93  001012  0A                 	db	10
    94  001013  00                 	db	0
    95  001014                     STR_2:
    96  001014  30                 	db	48	;'0'
    97  001015  00                 	db	0
    98  001016                     STR_1:
    99  001016  31                 	db	49	;'1'
   100  001017  00                 	db	0
   101                           
   102                           ; #config settings
   103  001018  00                 	db	0	; dummy byte at the end
   104  0000                     
   105                           	psect	cinit
   106  00127C                     __pcinit:
   107                           	opt stack 0
   108  00127C                     start_initialization:
   109                           	opt stack 0
   110  00127C                     __initialization:
   111                           	opt stack 0
   112  00127C                     end_of_initialization:
   113                           	opt stack 0
   114  00127C                     __end_of__initialization:
   115                           	opt stack 0
   116  00127C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   117  00127E  6EF8               	movwf	tblptru,c
   118  001280  0100               	movlb	0
   119  001282  EF63  F008         	goto	_main	;jump to C main() function
   120                           tblptru	equ	0xFF8
   121                           
   122                           	psect	cstackCOMRAM
   123  000001                     __pcstackCOMRAM:
   124                           	opt stack 0
   125  000001                     lcdNibble@temp:
   126                           	opt stack 0
   127  000001                     pinMode@port:
   128                           	opt stack 0
   129                           
   130                           ; 2 bytes @ 0x0
   131  000001                     	ds	1
   132  000002                     lcdNibble@data:
   133                           	opt stack 0
   134                           
   135                           ; 1 bytes @ 0x1
   136  000002                     	ds	1
   137  000003                     ??_lcdInst:
   138  000003                     pinMode@pin:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x2
   142  000003                     	ds	1
   143  000004                     lcdInst@data:
   144                           	opt stack 0
   145                           
   146                           ; 1 bytes @ 0x3
   147  000004                     	ds	1
   148  000005                     ??_initLCD:
   149  000005                     putch@data:
   150                           	opt stack 0
   151  000005                     pinMode@type:
   152                           	opt stack 0
   153                           
   154                           ; 2 bytes @ 0x4
   155  000005                     	ds	1
   156  000006                     ?_printf:
   157                           	opt stack 0
   158  000006                     printf@f:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x5
   162  000006                     	ds	1
   163  000007                     ??_pinMode:
   164                           
   165                           ; 1 bytes @ 0x6
   166  000007                     	ds	1
   167  000008                     printf@ap:
   168                           	opt stack 0
   169                           
   170                           ; 2 bytes @ 0x7
   171  000008                     	ds	2
   172  00000A                     printf@c:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0x9
   176  00000A                     	ds	1
   177  00000B                     printb@n:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0xA
   181  00000B                     	ds	2
   182  00000D                     ??_printb:
   183                           
   184                           ; 1 bytes @ 0xC
   185  00000D                     	ds	2
   186  00000F                     printb@a:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0xE
   190  00000F                     	ds	2
   191  000011                     ??_main:
   192                           
   193                           ; 1 bytes @ 0x10
   194  000011                     	ds	2
   195                           tblptru	equ	0xFF8
   196                           
   197 ;;
   198 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   199 ;;
   200 ;; *************** function _main *****************
   201 ;; Defined at:
   202 ;;		line 28 in file "main.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;		None
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   220 ;;Total ram usage:        2 bytes
   221 ;; Hardware stack levels required when called:    6
   222 ;; This function calls:
   223 ;;		_initLCD
   224 ;;		_pinMode
   225 ;;		_printb
   226 ;;		_printf
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           	psect	text0
   233  0010C6                     __ptext0:
   234                           	opt stack 0
   235  0010C6                     _main:
   236                           	opt stack 25
   237                           
   238                           ;main.c: 30: initLCD();
   239                           
   240                           ;incstack = 0
   241  0010C6  ECE2  F008         	call	_initLCD	;wreg free
   242                           
   243                           ;main.c: 31: TRISA=0;
   244  0010CA  0E00               	movlw	0
   245  0010CC  6E92               	movwf	3986,c	;volatile
   246                           
   247                           ;main.c: 32: printb(TRISB);
   248  0010CE  CF93 F00B          	movff	3987,printb@n	;volatile
   249  0010D2  6A0C               	clrf	printb@n+1,c
   250  0010D4  ECBC  F008         	call	_printb	;wreg free
   251                           
   252                           ;main.c: 33: pinMode(1,1,1);
   253  0010D8  0E00               	movlw	0
   254  0010DA  6E02               	movwf	pinMode@port+1,c
   255  0010DC  0E01               	movlw	1
   256  0010DE  6E01               	movwf	pinMode@port,c
   257  0010E0  0E00               	movlw	0
   258  0010E2  6E04               	movwf	pinMode@pin+1,c
   259  0010E4  0E01               	movlw	1
   260  0010E6  6E03               	movwf	pinMode@pin,c
   261  0010E8  0E00               	movlw	0
   262  0010EA  6E06               	movwf	pinMode@type+1,c
   263  0010EC  0E01               	movlw	1
   264  0010EE  6E05               	movwf	pinMode@type,c
   265  0010F0  EC0D  F008         	call	_pinMode	;wreg free
   266                           
   267                           ;main.c: 34: printf("\n");
   268  0010F4  0E12               	movlw	low STR_3
   269  0010F6  6E06               	movwf	printf@f,c
   270  0010F8  0E10               	movlw	high STR_3
   271  0010FA  6E07               	movwf	printf@f+1,c
   272  0010FC  EC07  F009         	call	_printf	;wreg free
   273                           
   274                           ;main.c: 35: printb(TRISB);
   275  001100  CF93 F00B          	movff	3987,printb@n	;volatile
   276  001104  6A0C               	clrf	printb@n+1,c
   277  001106  ECBC  F008         	call	_printb	;wreg free
   278  00110A                     l993:
   279                           
   280                           ;main.c: 37: _delay((unsigned long)((1000)*(8000000/4000.0)));
   281  00110A  0E0B               	movlw	11
   282  00110C  6E12               	movwf	(??_main+1)& (0+255),c
   283  00110E  0E26               	movlw	38
   284  001110  6E11               	movwf	??_main& (0+255),c
   285  001112  0E5E               	movlw	94
   286  001114                     u247:
   287  001114  2EE8               	decfsz	wreg,f,c
   288  001116  D7FE               	bra	u247
   289  001118  2E11               	decfsz	??_main& (0+255),f,c
   290  00111A  D7FC               	bra	u247
   291  00111C  2E12               	decfsz	(??_main+1)& (0+255),f,c
   292  00111E  D7FA               	bra	u247
   293  001120  D7F4               	goto	l993
   294  001122                     __end_of_main:
   295                           	opt stack 0
   296                           tblptru	equ	0xFF8
   297                           wreg	equ	0xFE8
   298                           
   299 ;; *************** function _printb *****************
   300 ;; Defined at:
   301 ;;		line 21 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;  n               2   10[COMRAM] int 
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  a               2   14[COMRAM] int 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;Total ram usage:        6 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    5
   322 ;; This function calls:
   323 ;;		_printf
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text1
   330  001178                     __ptext1:
   331                           	opt stack 0
   332  001178                     _printb:
   333                           	opt stack 25
   334                           
   335                           ;main.c: 22: for(int a = 1<<8; a > 0; a>>=1){
   336                           
   337                           ;incstack = 0
   338  001178  0E01               	movlw	1
   339  00117A  6E10               	movwf	printb@a+1,c
   340  00117C  0E00               	movlw	0
   341  00117E  6E0F               	movwf	printb@a,c
   342  001180                     l931:
   343  001180  BE10               	btfsc	printb@a+1,7,c
   344  001182  0012               	return	
   345  001184  5010               	movf	printb@a+1,w,c
   346  001186  E103               	bnz	l935
   347  001188  040F               	decf	printb@a,w,c
   348  00118A  A0D8               	btfss	status,0,c
   349  00118C  0012               	return	
   350  00118E                     l935:
   351                           
   352                           ;main.c: 23: if(n & a)printf("1");
   353  00118E  500F               	movf	printb@a,w,c
   354  001190  140B               	andwf	printb@n,w,c
   355  001192  6E0D               	movwf	??_printb& (0+255),c
   356  001194  5010               	movf	printb@a+1,w,c
   357  001196  140C               	andwf	printb@n+1,w,c
   358  001198  6E0E               	movwf	(??_printb+1)& (0+255),c
   359  00119A  500D               	movf	??_printb,w,c
   360  00119C  100E               	iorwf	??_printb+1,w,c
   361  00119E  B4D8               	btfsc	status,2,c
   362  0011A0  D007               	goto	l939
   363  0011A2  0E16               	movlw	low STR_1
   364  0011A4  6E06               	movwf	printf@f,c
   365  0011A6  0E10               	movlw	high STR_1
   366  0011A8  6E07               	movwf	printf@f+1,c
   367  0011AA  EC07  F009         	call	_printf	;wreg free
   368  0011AE  D006               	goto	l941
   369  0011B0                     l939:
   370                           
   371                           ;main.c: 24: else printf("0");
   372  0011B0  0E14               	movlw	low STR_2
   373  0011B2  6E06               	movwf	printf@f,c
   374  0011B4  0E10               	movlw	high STR_2
   375  0011B6  6E07               	movwf	printf@f+1,c
   376  0011B8  EC07  F009         	call	_printf	;wreg free
   377  0011BC                     l941:
   378  0011BC  3410               	rlcf	printb@a+1,w,c
   379  0011BE  3210               	rrcf	printb@a+1,f,c
   380  0011C0  320F               	rrcf	printb@a,f,c
   381  0011C2  D7DE               	goto	l931
   382  0011C4                     __end_of_printb:
   383                           	opt stack 0
   384                           tblptru	equ	0xFF8
   385                           wreg	equ	0xFE8
   386                           status	equ	0xFD8
   387                           
   388 ;; *************** function _printf *****************
   389 ;; Defined at:
   390 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;  f               2    5[COMRAM] PTR const unsigned char 
   393 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  tmpval          4    0        struct .
   396 ;;  cp              3    0        PTR const unsigned char 
   397 ;;  ap              2    7[COMRAM] PTR void [1]
   398 ;;		 -> ?_printf(2), 
   399 ;;  len             2    0        unsigned int 
   400 ;;  val             2    0        unsigned int 
   401 ;;  c               1    9[COMRAM] char 
   402 ;;  flag            1    0        unsigned char 
   403 ;;  prec            1    0        char 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2    5[COMRAM] int 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;Total ram usage:        5 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; Hardware stack levels required when called:    4
   420 ;; This function calls:
   421 ;;		_putch
   422 ;; This function is called by:
   423 ;;		_printb
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text2
   429  00120E                     __ptext2:
   430                           	opt stack 0
   431  00120E                     _printf:
   432                           	opt stack 26
   433                           
   434                           ;doprnt.c: 466: va_list ap;
   435                           ;doprnt.c: 499: signed char c;
   436                           ;doprnt.c: 506: signed char prec;
   437                           ;doprnt.c: 508: unsigned char flag;
   438                           ;doprnt.c: 523: union {
   439                           ;doprnt.c: 524: unsigned long vd;
   440                           ;doprnt.c: 525: double integ;
   441                           ;doprnt.c: 526: } tmpval;
   442                           ;doprnt.c: 528: unsigned int val;
   443                           ;doprnt.c: 529: unsigned len;
   444                           ;doprnt.c: 530: const char * cp;
   445                           ;doprnt.c: 533: *ap = __va_start();
   446                           
   447                           ;incstack = 0
   448  00120E  0E08               	movlw	low (?_printf+2)
   449  001210  6E08               	movwf	printf@ap,c
   450  001212  0E00               	movlw	high (?_printf+2)
   451  001214  6E09               	movwf	printf@ap+1,c
   452                           
   453                           ;doprnt.c: 536: while(c = *f++) {
   454  001216  D003               	goto	l927
   455  001218                     l925:
   456                           
   457                           ;doprnt.c: 540: {
   458                           ;doprnt.c: 541: (putch(c) );
   459  001218  500A               	movf	printf@c,w,c
   460  00121A  EC1C  F009         	call	_putch
   461  00121E                     l927:
   462  00121E  C006  FFF6         	movff	printf@f,tblptrl
   463  001222  C007  FFF7         	movff	printf@f+1,tblptrh
   464  001226  4A06               	infsnz	printf@f,f,c
   465  001228  2A07               	incf	printf@f+1,f,c
   466  00122A                     	if	0	;tblptru may be non-zero
   467  00122A                     	endif
   468  00122A                     	if	0	;tblptru may be non-zero
   469  00122A                     	endif
   470  00122A  0008               	tblrd		*
   471  00122C  CFF5 F00A          	movff	tablat,printf@c
   472  001230  500A               	movf	printf@c,w,c
   473  001232  B4D8               	btfsc	status,2,c
   474  001234  0012               	return	
   475  001236  D7F0               	goto	l925
   476  001238                     __end_of_printf:
   477                           	opt stack 0
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           wreg	equ	0xFE8
   483                           status	equ	0xFD8
   484                           
   485 ;; *************** function _putch *****************
   486 ;; Defined at:
   487 ;;		line 37 in file "lcd.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;  data            1    wreg     unsigned char 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  data            1    4[COMRAM] unsigned char 
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, status,2, status,0, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;Total ram usage:        1 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; Hardware stack levels required when called:    3
   508 ;; This function calls:
   509 ;;		_lcdNewline
   510 ;;		_lcdNibble
   511 ;; This function is called by:
   512 ;;		_printf
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text3
   517  001238                     __ptext3:
   518                           	opt stack 0
   519  001238                     _putch:
   520                           	opt stack 26
   521                           
   522                           ;incstack = 0
   523                           ;putch@data stored from wreg
   524  001238  6E05               	movwf	putch@data,c
   525                           
   526                           ;lcd.c: 38: if(data == '\n')lcdNewline();
   527  00123A  0E0A               	movlw	10
   528  00123C  1805               	xorwf	putch@data,w,c
   529  00123E  A4D8               	btfss	status,2,c
   530  001240  D003               	goto	l48
   531  001242  EC43  F009         	call	_lcdNewline	;wreg free
   532  001246  0012               	return	
   533  001248                     l48:
   534                           
   535                           ;lcd.c: 39: else
   536                           ;lcd.c: 40: {
   537                           ;lcd.c: 41: LATDbits.LATD2 = 1;
   538  001248  848C               	bsf	3980,2,c	;volatile
   539                           
   540                           ;lcd.c: 42: _delay((unsigned long)((140)*(8000000/4000000.0)));
   541  00124A  0E5D               	movlw	93
   542  00124C                     u257:
   543  00124C  2EE8               	decfsz	wreg,f,c
   544  00124E  D7FE               	bra	u257
   545  001250  F000               	nop	
   546                           
   547                           ;lcd.c: 43: lcdNibble(data);
   548  001252  5005               	movf	putch@data,w,c
   549  001254  EC91  F008         	call	_lcdNibble
   550  001258  0012               	return	
   551  00125A                     __end_of_putch:
   552                           	opt stack 0
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           wreg	equ	0xFE8
   558                           status	equ	0xFD8
   559                           
   560 ;; *************** function _lcdNewline *****************
   561 ;; Defined at:
   562 ;;		line 76 in file "lcd.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    2
   583 ;; This function calls:
   584 ;;		_lcdInst
   585 ;; This function is called by:
   586 ;;		_putch
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text4
   591  001286                     __ptext4:
   592                           	opt stack 0
   593  001286                     _lcdNewline:
   594                           	opt stack 26
   595                           
   596                           ;lcd.c: 77: lcdInst(0b11000000);
   597                           
   598                           ;incstack = 0
   599  001286  0EC0               	movlw	192
   600  001288  EC2D  F009         	call	_lcdInst
   601  00128C  0012               	return		;funcret
   602  00128E                     __end_of_lcdNewline:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           wreg	equ	0xFE8
   609                           status	equ	0xFD8
   610                           
   611 ;; *************** function _pinMode *****************
   612 ;; Defined at:
   613 ;;		line 13 in file "iopin.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  port            2    0[COMRAM] int 
   616 ;;  pin             2    2[COMRAM] int 
   617 ;;  type            2    4[COMRAM] int 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   629 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;Total ram usage:        9 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text5
   643  00101A                     __ptext5:
   644                           	opt stack 0
   645  00101A                     _pinMode:
   646                           	opt stack 30
   647                           
   648                           ;iopin.c: 14: pin = 1 << pin;
   649                           
   650                           ;incstack = 0
   651  00101A  C003  F007         	movff	pinMode@pin,??_pinMode
   652  00101E  0E01               	movlw	1
   653  001020  6E08               	movwf	(??_pinMode+1)& (0+255),c
   654  001022  0E00               	movlw	0
   655  001024  6E09               	movwf	(??_pinMode+2)& (0+255),c
   656  001026  2A07               	incf	??_pinMode,f,c
   657  001028  D003               	goto	u184
   658  00102A                     u185:
   659  00102A  90D8               	bcf	status,0,c
   660  00102C  3608               	rlcf	??_pinMode+1,f,c
   661  00102E  3609               	rlcf	??_pinMode+2,f,c
   662  001030                     u184:
   663  001030  2E07               	decfsz	??_pinMode,f,c
   664  001032  D7FB               	goto	u185
   665  001034  C008  F003         	movff	??_pinMode+1,pinMode@pin
   666  001038  C009  F004         	movff	??_pinMode+2,pinMode@pin+1
   667                           
   668                           ;iopin.c: 15: if(type == 1){
   669  00103C  0405               	decf	pinMode@type,w,c
   670  00103E  1006               	iorwf	pinMode@type+1,w,c
   671  001040  A4D8               	btfss	status,2,c
   672  001042  D02B               	goto	l975
   673                           
   674                           ;iopin.c: 16: pin ^= 0xff;
   675  001044  0EFF               	movlw	255
   676  001046  1A03               	xorwf	pinMode@pin,f,c
   677                           
   678                           ;iopin.c: 17: }
   679                           ;iopin.c: 19: switch(port){
   680  001048  D028               	goto	l975
   681  00104A                     l949:
   682  00104A  5005               	movf	pinMode@type,w,c
   683  00104C  1006               	iorwf	pinMode@type+1,w,c
   684  00104E  A4D8               	btfss	status,2,c
   685  001050  D003               	goto	l953
   686  001052  5003               	movf	pinMode@pin,w,c
   687  001054  1292               	iorwf	3986,f,c	;volatile
   688  001056  0012               	return	
   689  001058                     l953:
   690                           
   691                           ;iopin.c: 21: else TRISA &= pin;
   692  001058  5003               	movf	pinMode@pin,w,c
   693  00105A  1692               	andwf	3986,f,c	;volatile
   694                           
   695                           ;iopin.c: 22: break;
   696  00105C  0012               	return	
   697  00105E                     l955:
   698  00105E  5005               	movf	pinMode@type,w,c
   699  001060  1006               	iorwf	pinMode@type+1,w,c
   700  001062  A4D8               	btfss	status,2,c
   701  001064  D003               	goto	l959
   702  001066  5003               	movf	pinMode@pin,w,c
   703  001068  1293               	iorwf	3987,f,c	;volatile
   704  00106A  0012               	return	
   705  00106C                     l959:
   706                           
   707                           ;iopin.c: 25: else TRISB &= pin;
   708  00106C  5003               	movf	pinMode@pin,w,c
   709  00106E  1693               	andwf	3987,f,c	;volatile
   710                           
   711                           ;iopin.c: 26: break;
   712  001070  0012               	return	
   713  001072                     l961:
   714  001072  5005               	movf	pinMode@type,w,c
   715  001074  1006               	iorwf	pinMode@type+1,w,c
   716  001076  A4D8               	btfss	status,2,c
   717  001078  D003               	goto	l965
   718  00107A  5003               	movf	pinMode@pin,w,c
   719  00107C  1294               	iorwf	3988,f,c	;volatile
   720  00107E  0012               	return	
   721  001080                     l965:
   722                           
   723                           ;iopin.c: 29: else TRISC &= pin;
   724  001080  5003               	movf	pinMode@pin,w,c
   725  001082  1694               	andwf	3988,f,c	;volatile
   726                           
   727                           ;iopin.c: 30: break;
   728  001084  0012               	return	
   729  001086                     l967:
   730  001086  5005               	movf	pinMode@type,w,c
   731  001088  1006               	iorwf	pinMode@type+1,w,c
   732  00108A  A4D8               	btfss	status,2,c
   733  00108C  D003               	goto	l971
   734  00108E  5003               	movf	pinMode@pin,w,c
   735  001090  1295               	iorwf	3989,f,c	;volatile
   736  001092  0012               	return	
   737  001094                     l971:
   738                           
   739                           ;iopin.c: 33: else TRISD &= pin;
   740  001094  5003               	movf	pinMode@pin,w,c
   741  001096  1695               	andwf	3989,f,c	;volatile
   742                           
   743                           ;iopin.c: 35: }
   744                           
   745                           ;iopin.c: 34: break;
   746  001098  0012               	return	
   747  00109A                     l975:
   748  00109A  C001  F007         	movff	pinMode@port,??_pinMode
   749  00109E  C002  F008         	movff	pinMode@port+1,??_pinMode+1
   750                           
   751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   752                           ; Switch size 1, requested type "space"
   753                           ; Number of cases is 1, Range of values is 0 to 0
   754                           ; switch strategies available:
   755                           ; Name         Instructions Cycles
   756                           ; simple_byte            4     3 (average)
   757                           ;	Chosen strategy is simple_byte
   758  0010A2  5008               	movf	??_pinMode+1,w,c
   759  0010A4  0A00               	xorlw	0	; case 0
   760  0010A6  A4D8               	btfss	status,2,c
   761  0010A8  0012               	return	
   762                           
   763                           ; Switch size 1, requested type "space"
   764                           ; Number of cases is 4, Range of values is 0 to 3
   765                           ; switch strategies available:
   766                           ; Name         Instructions Cycles
   767                           ; simple_byte           13     7 (average)
   768                           ;	Chosen strategy is simple_byte
   769  0010AA  5007               	movf	??_pinMode,w,c
   770  0010AC  0A00               	xorlw	0	; case 0
   771  0010AE  B4D8               	btfsc	status,2,c
   772  0010B0  D7CC               	goto	l949
   773  0010B2  0A01               	xorlw	1	; case 1
   774  0010B4  B4D8               	btfsc	status,2,c
   775  0010B6  D7D3               	goto	l955
   776  0010B8  0A03               	xorlw	3	; case 2
   777  0010BA  B4D8               	btfsc	status,2,c
   778  0010BC  D7DA               	goto	l961
   779  0010BE  0A01               	xorlw	1	; case 3
   780  0010C0  A4D8               	btfss	status,2,c
   781  0010C2  0012               	return	
   782  0010C4  D7E0               	goto	l967
   783  0010C6                     __end_of_pinMode:
   784                           	opt stack 0
   785                           tblptru	equ	0xFF8
   786                           tblptrh	equ	0xFF7
   787                           tblptrl	equ	0xFF6
   788                           tablat	equ	0xFF5
   789                           wreg	equ	0xFE8
   790                           status	equ	0xFD8
   791                           
   792 ;; *************** function _initLCD *****************
   793 ;; Defined at:
   794 ;;		line 15 in file "lcd.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;Total ram usage:        1 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    2
   815 ;; This function calls:
   816 ;;		_lcdInst
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text6
   823  0011C4                     __ptext6:
   824                           	opt stack 0
   825  0011C4                     _initLCD:
   826                           	opt stack 28
   827                           
   828                           ;lcd.c: 17: TRISD = 0x00;
   829                           
   830                           ;incstack = 0
   831  0011C4  0E00               	movlw	0
   832  0011C6  6E95               	movwf	3989,c	;volatile
   833                           
   834                           ;lcd.c: 19: _delay((unsigned long)((15)*(8000000/4000.0)));
   835  0011C8  0E27               	movlw	39
   836  0011CA  6E05               	movwf	??_initLCD& (0+255),c
   837  0011CC  0EF5               	movlw	245
   838  0011CE                     u267:
   839  0011CE  2EE8               	decfsz	wreg,f,c
   840  0011D0  D7FE               	bra	u267
   841  0011D2  2E05               	decfsz	??_initLCD& (0+255),f,c
   842  0011D4  D7FC               	bra	u267
   843  0011D6  F000               	nop	
   844                           
   845                           ;lcd.c: 20: lcdInst(0b00110011);
   846  0011D8  0E33               	movlw	51
   847  0011DA  EC2D  F009         	call	_lcdInst
   848                           
   849                           ;lcd.c: 21: lcdInst(0b00110010);
   850  0011DE  0E32               	movlw	50
   851  0011E0  EC2D  F009         	call	_lcdInst
   852                           
   853                           ;lcd.c: 22: lcdInst(0b00101000);
   854  0011E4  0E28               	movlw	40
   855  0011E6  EC2D  F009         	call	_lcdInst
   856                           
   857                           ;lcd.c: 23: lcdInst(0b00001111);
   858  0011EA  0E0F               	movlw	15
   859  0011EC  EC2D  F009         	call	_lcdInst
   860                           
   861                           ;lcd.c: 24: lcdInst(0b00000110);
   862  0011F0  0E06               	movlw	6
   863  0011F2  EC2D  F009         	call	_lcdInst
   864                           
   865                           ;lcd.c: 25: lcdInst(0b00000001);
   866  0011F6  0E01               	movlw	1
   867  0011F8  EC2D  F009         	call	_lcdInst
   868                           
   869                           ;lcd.c: 26: _delay((unsigned long)((15)*(8000000/4000.0)));
   870  0011FC  0E27               	movlw	39
   871  0011FE  6E05               	movwf	??_initLCD& (0+255),c
   872  001200  0EF5               	movlw	245
   873  001202                     u277:
   874  001202  2EE8               	decfsz	wreg,f,c
   875  001204  D7FE               	bra	u277
   876  001206  2E05               	decfsz	??_initLCD& (0+255),f,c
   877  001208  D7FC               	bra	u277
   878  00120A  F000               	nop	
   879  00120C  0012               	return		;funcret
   880  00120E                     __end_of_initLCD:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           wreg	equ	0xFE8
   887                           status	equ	0xFD8
   888                           
   889 ;; *************** function _lcdInst *****************
   890 ;; Defined at:
   891 ;;		line 29 in file "lcd.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  data            1    wreg     unsigned char 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  data            1    3[COMRAM] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;Total ram usage:        2 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    1
   912 ;; This function calls:
   913 ;;		_lcdNibble
   914 ;; This function is called by:
   915 ;;		_initLCD
   916 ;;		_lcdNewline
   917 ;;		_lcdClear
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text7
   922  00125A                     __ptext7:
   923                           	opt stack 0
   924  00125A                     _lcdInst:
   925                           	opt stack 26
   926                           
   927                           ;incstack = 0
   928                           ;lcdInst@data stored from wreg
   929  00125A  6E04               	movwf	lcdInst@data,c
   930                           
   931                           ;lcd.c: 30: LATDbits.LATD2 = 0;
   932  00125C  948C               	bcf	3980,2,c	;volatile
   933                           
   934                           ;lcd.c: 31: _delay((unsigned long)((140)*(8000000/4000000.0)));
   935  00125E  0E5D               	movlw	93
   936  001260                     u287:
   937  001260  2EE8               	decfsz	wreg,f,c
   938  001262  D7FE               	bra	u287
   939  001264  F000               	nop	
   940                           
   941                           ;lcd.c: 32: lcdNibble(data);
   942  001266  5004               	movf	lcdInst@data,w,c
   943  001268  EC91  F008         	call	_lcdNibble
   944                           
   945                           ;lcd.c: 33: _delay((unsigned long)((1000)*(8000000/4000000.0)));
   946  00126C  0E03               	movlw	3
   947  00126E  6E03               	movwf	??_lcdInst& (0+255),c
   948  001270  0E98               	movlw	152
   949  001272                     u297:
   950  001272  2EE8               	decfsz	wreg,f,c
   951  001274  D7FE               	bra	u297
   952  001276  2E03               	decfsz	??_lcdInst& (0+255),f,c
   953  001278  D7FC               	bra	u297
   954  00127A  0012               	return		;funcret
   955  00127C                     __end_of_lcdInst:
   956                           	opt stack 0
   957                           tblptru	equ	0xFF8
   958                           tblptrh	equ	0xFF7
   959                           tblptrl	equ	0xFF6
   960                           tablat	equ	0xFF5
   961                           wreg	equ	0xFE8
   962                           status	equ	0xFD8
   963                           
   964 ;; *************** function _lcdNibble *****************
   965 ;; Defined at:
   966 ;;		line 48 in file "lcd.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  data            1    wreg     unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  data            1    1[COMRAM] unsigned char 
   971 ;;  temp            1    0[COMRAM] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;Total ram usage:        2 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_lcdInst
   991 ;;		_putch
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text8
   996  001122                     __ptext8:
   997                           	opt stack 0
   998  001122                     _lcdNibble:
   999                           	opt stack 28
  1000                           
  1001                           ;incstack = 0
  1002                           ;lcdNibble@data stored from wreg
  1003  001122  6E02               	movwf	lcdNibble@data,c
  1004                           
  1005                           ;lcd.c: 50: char temp = data & 0xF0;
  1006  001124  5002               	movf	lcdNibble@data,w,c
  1007  001126  0BF0               	andlw	240
  1008  001128  6E01               	movwf	lcdNibble@temp,c
  1009                           
  1010                           ;lcd.c: 51: LATD = LATD & 0x0F;
  1011  00112A  508C               	movf	3980,w,c	;volatile
  1012  00112C  0B0F               	andlw	15
  1013  00112E  6E8C               	movwf	3980,c	;volatile
  1014                           
  1015                           ;lcd.c: 52: LATD = temp | LATD;
  1016  001130  5001               	movf	lcdNibble@temp,w,c
  1017  001132  108C               	iorwf	3980,w,c	;volatile
  1018  001134  6E8C               	movwf	3980,c	;volatile
  1019                           
  1020                           ;lcd.c: 54: LATDbits.LATD3 = 0;
  1021  001136  968C               	bcf	3980,3,c	;volatile
  1022                           
  1023                           ;lcd.c: 55: _delay((unsigned long)((600)*(8000000/4000000.0)));
  1024  001138  0EF0               	movlw	240
  1025  00113A                     u307:
  1026  00113A  D000               	nop2	
  1027  00113C  2EE8               	decfsz	wreg,f,c
  1028  00113E  D7FD               	bra	u307
  1029                           
  1030                           ;lcd.c: 56: LATDbits.LATD3 = 1;
  1031  001140  868C               	bsf	3980,3,c	;volatile
  1032                           
  1033                           ;lcd.c: 57: _delay((unsigned long)((600)*(8000000/4000000.0)));
  1034  001142  0EF0               	movlw	240
  1035  001144                     u317:
  1036  001144  D000               	nop2	
  1037  001146  2EE8               	decfsz	wreg,f,c
  1038  001148  D7FD               	bra	u317
  1039                           
  1040                           ;lcd.c: 60: data = data << 4;
  1041  00114A  3802               	swapf	lcdNibble@data,w,c
  1042  00114C  0BF0               	andlw	240
  1043  00114E  6E02               	movwf	lcdNibble@data,c
  1044                           
  1045                           ;lcd.c: 62: temp = data & 0xF0;
  1046  001150  5002               	movf	lcdNibble@data,w,c
  1047  001152  0BF0               	andlw	240
  1048  001154  6E01               	movwf	lcdNibble@temp,c
  1049                           
  1050                           ;lcd.c: 63: LATD = LATD & 0x0F;
  1051  001156  508C               	movf	3980,w,c	;volatile
  1052  001158  0B0F               	andlw	15
  1053  00115A  6E8C               	movwf	3980,c	;volatile
  1054                           
  1055                           ;lcd.c: 64: LATD = temp | LATD;
  1056  00115C  5001               	movf	lcdNibble@temp,w,c
  1057  00115E  108C               	iorwf	3980,w,c	;volatile
  1058  001160  6E8C               	movwf	3980,c	;volatile
  1059                           
  1060                           ;lcd.c: 66: LATDbits.LATD3 = 0;
  1061  001162  968C               	bcf	3980,3,c	;volatile
  1062                           
  1063                           ;lcd.c: 67: _delay((unsigned long)((600)*(8000000/4000000.0)));
  1064  001164  0EF0               	movlw	240
  1065  001166                     u327:
  1066  001166  D000               	nop2	
  1067  001168  2EE8               	decfsz	wreg,f,c
  1068  00116A  D7FD               	bra	u327
  1069                           
  1070                           ;lcd.c: 68: LATDbits.LATD3 = 1;
  1071  00116C  868C               	bsf	3980,3,c	;volatile
  1072                           
  1073                           ;lcd.c: 69: _delay((unsigned long)((600)*(8000000/4000000.0)));
  1074  00116E  0EF0               	movlw	240
  1075  001170                     u337:
  1076  001170  D000               	nop2	
  1077  001172  2EE8               	decfsz	wreg,f,c
  1078  001174  D7FD               	bra	u337
  1079  001176  0012               	return		;funcret
  1080  001178                     __end_of_lcdNibble:
  1081                           	opt stack 0
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           wreg	equ	0xFE8
  1087                           status	equ	0xFD8
  1088                           tblptru	equ	0xFF8
  1089                           tblptrh	equ	0xFF7
  1090                           tblptrl	equ	0xFF6
  1091                           tablat	equ	0xFF5
  1092                           wreg	equ	0xFE8
  1093                           status	equ	0xFD8
  1094                           
  1095                           	psect	rparam
  1096  0000                     tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           wreg	equ	0xFE8
  1101                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    17
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      18
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printb
    _printb->_printf
    _printf->_putch
    _lcdNewline->_lcdInst
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1698
                                             16 COMRAM     2     2      0
                            _initLCD
                            _pinMode
                             _printb
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printb                                               6     4      2     651
                                             10 COMRAM     6     4      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     433
                                              5 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     195
                                              4 COMRAM     1     1      0
                         _lcdNewline
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNewline                                           0     0      0      90
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _pinMode                                              9     3      6     524
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              4 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (4) _lcdInst                                              2     2      0      90
                                              2 COMRAM     2     2      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _lcdInst
       _lcdNibble
   _pinMode
   _printb
     _printf
       _putch
         _lcdNewline
           _lcdInst
             _lcdNibble
         _lcdNibble
   _printf
     _putch
       _lcdNewline
         _lcdInst
           _lcdNibble
       _lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     12      12       1       14.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Feb 21 21:34:47 2017

                     l48 1248              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l931 1180                      l925 1218  
                    l941 11BC                      l927 121E                      l935 118E  
                    l961 1072                      l953 1058                      l971 1094  
                    l955 105E                      l939 11B0                      l965 1080  
                    l949 104A                      l967 1086                      l959 106C  
                    l975 109A                      l993 110A             __CFG_CPB$OFF 000000  
                    u307 113A                      u317 1144                      u327 1166  
                    u247 1114                      u184 1030                      u337 1170  
                    u185 102A                      u257 124C             __CFG_CPD$OFF 000000  
                    u267 11CE                      u277 1202                      u287 1260  
                    u297 1272                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     STR_1 1016                     STR_2 1014  
                   STR_3 1012                     _LATB 000F8A                     _LATD 000F8C  
                   _main 10C6                     _keys 1001                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000          __end_of_lcdInst 127C  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_initLCD 120E  
         __CFG_EBTRB$OFF 000000          __end_of_pinMode 10C6                    _putch 1238  
                  tablat 000FF5                    status 000FD8           __CFG_PBADEN$ON 000000  
        __initialization 127C             __end_of_main 1122             __end_of_keys 1012  
                 ??_main 0011            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   ?_putch 0001           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                   _printb 1178                ??_lcdInst 0003  
                 _printf 120E                ??_initLCD 0005                ??_pinMode 0007  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 127C  
          ___rparam_used 000001              pinMode@port 0001              pinMode@type 0005  
         __pcstackCOMRAM 0001            __end_of_putch 125A       __size_of_lcdNibble 0056  
                ??_putch 0005               _lcdNewline 1286                  ?_printb 000B  
                ?_printf 0006        __end_of_lcdNibble 1178                  __Hparam 0000  
                __Lparam 0000             __psmallconst 1000                  __pcinit 127C  
                __ramtop 1000                  _lcdInst 125A                  __ptext0 10C6  
                __ptext1 1178                  __ptext2 120E                  __ptext3 1238  
                __ptext4 1286                  __ptext5 101A                  __ptext6 11C4  
                __ptext7 125A                  __ptext8 1122          __size_of_printb 004C  
        __size_of_printf 002A                  _initLCD 11C4                  _pinMode 101A  
   end_of_initialization 127C            __Lmediumconst 0000                  printb@a 000F  
                printb@n 000B                  printf@c 000A                  printf@f 0006  
            ?_lcdNewline 0001                _PORTBbits 000F81           __end_of_printb 11C4  
         __end_of_printf 1238      start_initialization 127C      __size_of_lcdNewline 0008  
       __CFG_LPT1OSC$OFF 000000                 ??_printb 000D                 ??_printf 0008  
             pinMode@pin 0003        __CFG_CCP2MX$PORTC 000000                _lcdNibble 1122  
               ?_lcdInst 0001                 ?_initLCD 0001              __smallconst 1000  
               ?_pinMode 0001           __size_of_putch 0022                 _LATDbits 000F8C  
       __CFG_WDTPS$32768 000000               ?_lcdNibble 0001             ??_lcdNewline 0005  
          lcdNibble@data 0002            lcdNibble@temp 0001       __end_of_lcdNewline 128E  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of_lcdInst 0022         __size_of_initLCD 004A         __size_of_pinMode 00AC  
          __size_of_main 005C              ??_lcdNibble 0001                putch@data 0005  
               printf@ap 0008              lcdInst@data 0004  
