

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Mar 11 00:06:52 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 1.40
    33                           ; Generated 01/12/2016 GMT
    34                           ; 
    35                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4620 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  0018F8                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _angle
    72  0018F8  F159               	dw	61785
    73  0018FA  0000               	dw	0
    74                           
    75                           	psect	smallconst
    76  001000                     __psmallconst:
    77                           	opt stack 0
    78  001000  00                 	db	0
    79  001001  31                 	db	49
    80  001002  32                 	db	50
    81  001003  33                 	db	51
    82  001004  41                 	db	65
    83  001005  34                 	db	52
    84  001006  35                 	db	53
    85  001007  36                 	db	54
    86  001008  42                 	db	66
    87  001009  37                 	db	55
    88  00100A  38                 	db	56
    89  00100B  39                 	db	57
    90  00100C  43                 	db	67
    91  00100D  2A                 	db	42
    92  00100E  30                 	db	48
    93  00100F  23                 	db	35
    94  001010  44                 	db	68
    95  001011  00                 	db	0
    96  001012                     __end_of_keys:
    97                           	opt stack 0
    98  001012  0001               	dw	1
    99  001014  0010               	dw	16
   100  001016  0100               	dw	256
   101  001018  1000               	dw	4096
   102  00101A                     __end_of_hexpowers:
   103                           	opt stack 0
   104  00101A                     _happynewyear:
   105                           	opt stack 0
   106  00101A  45                 	db	69
   107  00101B  59                 	db	89
   108  00101C  23                 	db	35
   109  00101D  07                 	db	7
   110  00101E  31                 	db	49
   111  00101F  12                 	db	18
   112  001020  16                 	db	22
   113  001021                     __end_of_happynewyear:
   114                           	opt stack 0
   115  0000                     _ADCON0	set	4034
   116  0000                     _ADCON1	set	4033
   117  0000                     _ADCON2	set	4032
   118  0000                     _ADRESH	set	4036
   119  0000                     _ADRESL	set	4035
   120  0000                     _EEADR	set	4009
   121  0000                     _EEADRH	set	4010
   122  0000                     _EECON1	set	4006
   123  0000                     _EECON2	set	4007
   124  0000                     _EEDATA	set	4008
   125  0000                     _INTCONbits	set	4082
   126  0000                     _LATA	set	3977
   127  0000                     _LATB	set	3978
   128  0000                     _LATC	set	3979
   129  0000                     _LATD	set	3980
   130  0000                     _LATDbits	set	3980
   131  0000                     _LATE	set	3981
   132  0000                     _PORTA	set	3968
   133  0000                     _PORTB	set	3969
   134  0000                     _PORTBbits	set	3969
   135  0000                     _PORTC	set	3970
   136  0000                     _PORTD	set	3971
   137  0000                     _SSPADD	set	4040
   138  0000                     _SSPBUF	set	4041
   139  0000                     _SSPCON1	set	4038
   140  0000                     _SSPCON2	set	4037
   141  0000                     _SSPSTAT	set	4039
   142  0000                     _T0CON	set	4053
   143  0000                     _T1CON	set	4045
   144  0000                     _T3CON	set	4017
   145  0000                     _TMR0H	set	4055
   146  0000                     _TMR0L	set	4054
   147  0000                     _TMR1H	set	4047
   148  0000                     _TMR1L	set	4046
   149  0000                     _TMR3H	set	4019
   150  0000                     _TMR3L	set	4018
   151  0000                     _TRISA	set	3986
   152  0000                     _TRISB	set	3987
   153  0000                     _TRISC	set	3988
   154  0000                     _TRISD	set	3989
   155  0000                     _TRISE	set	3990
   156  0000                     _ACKDT	set	32301
   157  0000                     _ACKEN	set	32300
   158  0000                     _EEIF	set	32012
   159  0000                     _INT1IF	set	32640
   160  0000                     _PEIE	set	32662
   161  0000                     _PEN	set	32298
   162  0000                     _RCEN	set	32299
   163  0000                     _RSEN	set	32297
   164  0000                     _SEN	set	32296
   165  0000                     _TMR0IE	set	32661
   166  0000                     _TMR0IF	set	32658
   167  0000                     _TMR1IE	set	31976
   168  0000                     _TMR1IF	set	31984
   169  0000                     _TMR2IF	set	31985
   170  0000                     _TMR3IE	set	32001
   171  0000                     _TMR3IF	set	32009
   172  0000                     _TRISC3	set	31907
   173  0000                     _TRISC4	set	31908
   174  001021  30                 	db	48	;'0'
   175  001022  31                 	db	49	;'1'
   176  001023  32                 	db	50	;'2'
   177  001024  33                 	db	51	;'3'
   178  001025  34                 	db	52	;'4'
   179  001026  35                 	db	53	;'5'
   180  001027  36                 	db	54	;'6'
   181  001028  37                 	db	55	;'7'
   182  001029  38                 	db	56	;'8'
   183  00102A  39                 	db	57	;'9'
   184  00102B  61                 	db	97	;'a'
   185  00102C  62                 	db	98	;'b'
   186  00102D  63                 	db	99	;'c'
   187  00102E  64                 	db	100	;'d'
   188  00102F  65                 	db	101	;'e'
   189  001030  66                 	db	102	;'f'
   190  001031  00                 	db	0
   191  001032  5B                 	db	91	;'['
   192  001033  25                 	db	37
   193  001034  78                 	db	120	;'x'
   194  001035  20                 	db	32
   195  001036  25                 	db	37
   196  001037  78                 	db	120	;'x'
   197  001038  5D                 	db	93	;']'
   198  001039  0A                 	db	10
   199  00103A  00                 	db	0
   200  00103B  74                 	db	116	;'t'
   201  00103C  31                 	db	49	;'1'
   202  00103D  3A                 	db	58	;':'
   203  00103E  20                 	db	32
   204  00103F  25                 	db	37
   205  001040  78                 	db	120	;'x'
   206  001041  20                 	db	32
   207  001042  00                 	db	0
   208                           
   209                           ; #config settings
   210  001043  00                 	db	0	; dummy byte at the end
   211  0000                     
   212                           	psect	cinit
   213  001830                     __pcinit:
   214                           	opt stack 0
   215  001830                     start_initialization:
   216                           	opt stack 0
   217  001830                     __initialization:
   218                           	opt stack 0
   219                           
   220                           ; Initialize objects allocated to COMRAM (4 bytes)
   221                           ; load TBLPTR registers with __pidataCOMRAM
   222  001830  0EF8               	movlw	low __pidataCOMRAM
   223  001832  6EF6               	movwf	tblptrl,c
   224  001834  0E18               	movlw	high __pidataCOMRAM
   225  001836  6EF7               	movwf	tblptrh,c
   226  001838  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   227  00183A  6EF8               	movwf	tblptru,c
   228  00183C  EE00  F054         	lfsr	0,__pdataCOMRAM
   229  001840  EE10 F004          	lfsr	1,4
   230  001844                     copy_data0:
   231  001844  0009               	tblrd		*+
   232  001846  CFF5 FFEE          	movff	tablat,postinc0
   233  00184A  50E5               	movf	postdec1,w,c
   234  00184C  50E1               	movf	fsr1l,w,c
   235  00184E  E1FA               	bnz	copy_data0
   236                           
   237                           ; Clear objects allocated to COMRAM (36 bytes)
   238  001850  EE00  F030         	lfsr	0,__pbssCOMRAM
   239  001854  0E24               	movlw	36
   240  001856                     clear_0:
   241  001856  6AEE               	clrf	postinc0,c
   242  001858  06E8               	decf	wreg,f,c
   243  00185A  E1FD               	bnz	clear_0
   244  00185C                     end_of_initialization:
   245                           	opt stack 0
   246  00185C                     __end_of__initialization:
   247                           	opt stack 0
   248  00185C  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   249  00185E  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   250  001860  0E00               	movlw	low (__Lmediumconst shr (0+16))
   251  001862  6EF8               	movwf	tblptru,c
   252  001864  0100               	movlb	0
   253  001866  EF1A  F00B         	goto	_main	;jump to C main() function
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           postdec1	equ	0xFE5
   261                           fsr1l	equ	0xFE1
   262                           
   263                           	psect	bssCOMRAM
   264  000030                     __pbssCOMRAM:
   265                           	opt stack 0
   266  000030                     _pulse:
   267                           	opt stack 0
   268  000030                     	ds	16
   269  000040                     _pin:
   270                           	opt stack 0
   271  000040                     	ds	8
   272  000048                     _port:
   273                           	opt stack 0
   274  000048                     	ds	8
   275  000050                     _count:
   276                           	opt stack 0
   277  000050                     	ds	2
   278  000052                     _time:
   279                           	opt stack 0
   280  000052                     	ds	2
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	dataCOMRAM
   291  000054                     __pdataCOMRAM:
   292                           	opt stack 0
   293  000054                     _angle:
   294                           	opt stack 0
   295  000054                     	ds	4
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           postdec1	equ	0xFE5
   303                           fsr1l	equ	0xFE1
   304                           
   305                           	psect	cstackBANK0
   306  000080                     __pcstackBANK0:
   307                           	opt stack 0
   308  000080                     initServo@timer:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x0
   312  000080                     	ds	2
   313  000082                     initServo@po:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x2
   317  000082                     	ds	2
   318  000084                     initServo@pi:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x4
   322  000084                     	ds	2
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	cstackCOMRAM
   333  000001                     __pcstackCOMRAM:
   334                           	opt stack 0
   335  000001                     ?_digitalRead:
   336                           	opt stack 0
   337  000001                     digitalRead@port:
   338                           	opt stack 0
   339  000001                     setAngle@timer:
   340                           	opt stack 0
   341  000001                     i2digitalWrite@port:
   342                           	opt stack 0
   343  000001                     i2startTimer@timer:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0x0
   347  000001                     	ds	2
   348  000003                     digitalRead@pin:
   349                           	opt stack 0
   350  000003                     i2digitalWrite@pin:
   351                           	opt stack 0
   352  000003                     setAngle@angle:
   353                           	opt stack 0
   354  000003                     i2startTimer@val:
   355                           	opt stack 0
   356                           
   357                           ; 4 bytes @ 0x2
   358  000003                     	ds	2
   359  000005                     ??_digitalRead:
   360  000005                     i2digitalWrite@val:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x4
   364  000005                     	ds	2
   365  000007                     ??_setAngle:
   366  000007                     ??i2_digitalWrite:
   367  000007                     ??i2_startTimer:
   368                           
   369                           ; 1 bytes @ 0x6
   370  000007                     	ds	3
   371  00000A                     ??_servoInterruptService:
   372                           
   373                           ; 1 bytes @ 0x9
   374  00000A                     	ds	2
   375  00000C                     servoInterruptService@flags:
   376                           	opt stack 0
   377                           
   378                           ; 8 bytes @ 0xB
   379  00000C                     	ds	8
   380  000014                     servoInterruptService@i:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x13
   384  000014                     	ds	2
   385  000016                     ??_service:
   386                           
   387                           ; 1 bytes @ 0x15
   388  000016                     	ds	14
   389  000024                     service@key:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x23
   393  000024                     	ds	1
   394  000025                     lcdNibble@temp:
   395                           	opt stack 0
   396  000025                     digitalWrite@port:
   397                           	opt stack 0
   398  000025                     initTimer@timer:
   399                           	opt stack 0
   400  000025                     startTimer@timer:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x24
   404  000025                     	ds	1
   405  000026                     lcdNibble@data:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x25
   409  000026                     	ds	1
   410  000027                     ??_lcdInst:
   411  000027                     ??_initTimer:
   412  000027                     digitalWrite@pin:
   413                           	opt stack 0
   414  000027                     startTimer@val:
   415                           	opt stack 0
   416                           
   417                           ; 4 bytes @ 0x26
   418  000027                     	ds	1
   419  000028                     lcdInst@data:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x27
   423  000028                     	ds	1
   424  000029                     ??_initLCD:
   425  000029                     digitalWrite@val:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x28
   429  000029                     	ds	2
   430  00002B                     ??_digitalWrite:
   431  00002B                     ??_startTimer:
   432                           
   433                           ; 1 bytes @ 0x2A
   434  00002B                     	ds	3
   435  00002E                     ??_initServo:
   436                           
   437                           ; 1 bytes @ 0x2D
   438  00002E                     	ds	2
   439  000030                     tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           ; 1 bytes @ 0x2F
   449 ;;
   450 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   451 ;;
   452 ;; *************** function _main *****************
   453 ;; Defined at:
   454 ;;		line 59 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels required when called:    6
   474 ;; This function calls:
   475 ;;		_initLCD
   476 ;;		_initServo
   477 ;;		_pinSetup
   478 ;; This function is called by:
   479 ;;		Startup code after reset
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text0
   484  001634                     __ptext0:
   485                           	opt stack 0
   486  001634                     _main:
   487                           	opt stack 25
   488                           
   489                           ;main.c: 60: pinSetup();
   490                           
   491                           ;incstack = 0
   492  001634  EC35  F00C         	call	_pinSetup	;wreg free
   493                           
   494                           ;main.c: 61: initLCD();
   495  001638  ECF5  F00B         	call	_initLCD	;wreg free
   496                           
   497                           ;main.c: 62: (INTCONbits.GIE = 1);
   498  00163C  8EF2               	bsf	intcon,7,c	;volatile
   499                           
   500                           ;main.c: 64: initServo(3,2,0);
   501  00163E  0E00               	movlw	0
   502  001640  0100               	movlb	0	; () banked
   503  001642  6F81               	movwf	(initServo@timer+1)& (0+255),b
   504  001644  0E03               	movlw	3
   505  001646  6F80               	movwf	initServo@timer& (0+255),b
   506  001648  0E00               	movlw	0
   507  00164A  0100               	movlb	0	; () banked
   508  00164C  6F83               	movwf	(initServo@po+1)& (0+255),b
   509  00164E  0E02               	movlw	2
   510  001650  6F82               	movwf	initServo@po& (0+255),b
   511  001652  0E00               	movlw	0
   512  001654  0100               	movlb	0	; () banked
   513  001656  6F85               	movwf	(initServo@pi+1)& (0+255),b
   514  001658  0E00               	movlw	0
   515  00165A  6F84               	movwf	initServo@pi& (0+255),b
   516  00165C  ECBA  F009         	call	_initServo	;wreg free
   517                           
   518                           ;main.c: 65: initServo(1,2,1);
   519  001660  0E00               	movlw	0
   520  001662  0100               	movlb	0	; () banked
   521  001664  6F81               	movwf	(initServo@timer+1)& (0+255),b
   522  001666  0E01               	movlw	1
   523  001668  6F80               	movwf	initServo@timer& (0+255),b
   524  00166A  0E00               	movlw	0
   525  00166C  0100               	movlb	0	; () banked
   526  00166E  6F83               	movwf	(initServo@po+1)& (0+255),b
   527  001670  0E02               	movlw	2
   528  001672  6F82               	movwf	initServo@po& (0+255),b
   529  001674  0E00               	movlw	0
   530  001676  0100               	movlb	0	; () banked
   531  001678  6F85               	movwf	(initServo@pi+1)& (0+255),b
   532  00167A  0E01               	movlw	1
   533  00167C  6F84               	movwf	initServo@pi& (0+255),b
   534  00167E  ECBA  F009         	call	_initServo	;wreg free
   535                           
   536                           ;main.c: 66: initServo(0,3,1);
   537  001682  0E00               	movlw	0
   538  001684  0100               	movlb	0	; () banked
   539  001686  6F81               	movwf	(initServo@timer+1)& (0+255),b
   540  001688  0E00               	movlw	0
   541  00168A  6F80               	movwf	initServo@timer& (0+255),b
   542  00168C  0E00               	movlw	0
   543  00168E  0100               	movlb	0	; () banked
   544  001690  6F83               	movwf	(initServo@po+1)& (0+255),b
   545  001692  0E03               	movlw	3
   546  001694  6F82               	movwf	initServo@po& (0+255),b
   547  001696  0E00               	movlw	0
   548  001698  0100               	movlb	0	; () banked
   549  00169A  6F85               	movwf	(initServo@pi+1)& (0+255),b
   550  00169C  0E01               	movlw	1
   551  00169E  6F84               	movwf	initServo@pi& (0+255),b
   552  0016A0  ECBA  F009         	call	_initServo	;wreg free
   553  0016A4                     l48:
   554  0016A4  D7FF               	goto	l48
   555  0016A6                     __end_of_main:
   556                           	opt stack 0
   557                           tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           intcon	equ	0xFF2
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           postdec1	equ	0xFE5
   565                           fsr1l	equ	0xFE1
   566                           
   567 ;; *************** function _pinSetup *****************
   568 ;; Defined at:
   569 ;;		line 25 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;Total ram usage:        0 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    3
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text1
   598  00186A                     __ptext1:
   599                           	opt stack 0
   600  00186A                     _pinSetup:
   601                           	opt stack 27
   602                           
   603                           ;main.c: 31: TRISA = 0xFF;
   604                           
   605                           ;incstack = 0
   606  00186A  6892               	setf	3986,c	;volatile
   607                           
   608                           ;main.c: 32: TRISB = 0xFF;
   609  00186C  6893               	setf	3987,c	;volatile
   610                           
   611                           ;main.c: 33: TRISC = 0x00;
   612  00186E  0E00               	movlw	0
   613  001870  6E94               	movwf	3988,c	;volatile
   614                           
   615                           ;main.c: 34: TRISD = 0x00;
   616  001872  0E00               	movlw	0
   617  001874  6E95               	movwf	3989,c	;volatile
   618                           
   619                           ;main.c: 35: TRISE = 0x00;
   620  001876  0E00               	movlw	0
   621  001878  6E96               	movwf	3990,c	;volatile
   622                           
   623                           ;main.c: 37: LATA = 0x00;
   624  00187A  0E00               	movlw	0
   625  00187C  6E89               	movwf	3977,c	;volatile
   626                           
   627                           ;main.c: 38: LATB = 0x00;
   628  00187E  0E00               	movlw	0
   629  001880  6E8A               	movwf	3978,c	;volatile
   630                           
   631                           ;main.c: 39: LATC = 0x00;
   632  001882  0E00               	movlw	0
   633  001884  6E8B               	movwf	3979,c	;volatile
   634                           
   635                           ;main.c: 40: LATD = 0x00;
   636  001886  0E00               	movlw	0
   637  001888  6E8C               	movwf	3980,c	;volatile
   638                           
   639                           ;main.c: 41: LATE = 0x00;
   640  00188A  0E00               	movlw	0
   641  00188C  6E8D               	movwf	3981,c	;volatile
   642                           
   643                           ;main.c: 43: ADCON0 = 0x00;
   644  00188E  0E00               	movlw	0
   645  001890  6EC2               	movwf	4034,c	;volatile
   646                           
   647                           ;main.c: 44: ADCON1 |= 0x0A;
   648  001892  0E0A               	movlw	10
   649  001894  12C1               	iorwf	4033,f,c	;volatile
   650                           
   651                           ;main.c: 48: ADCON2 = 0;
   652  001896  0E00               	movlw	0
   653  001898  6EC0               	movwf	4032,c	;volatile
   654                           
   655                           ;main.c: 49: ADCON2 |= 0b010;
   656  00189A  82C0               	bsf	4032,1,c	;volatile
   657                           
   658                           ;main.c: 50: ADCON2 |= 0b110<<3;
   659  00189C  0E30               	movlw	48
   660  00189E  12C0               	iorwf	4032,f,c	;volatile
   661                           
   662                           ;main.c: 51: ADCON2 |= 1<<7;
   663  0018A0  8EC0               	bsf	4032,7,c	;volatile
   664  0018A2  0012               	return		;funcret
   665  0018A4                     __end_of_pinSetup:
   666                           	opt stack 0
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           intcon	equ	0xFF2
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           postdec1	equ	0xFE5
   675                           fsr1l	equ	0xFE1
   676                           
   677 ;; *************** function _initServo *****************
   678 ;; Defined at:
   679 ;;		line 16 in file "servo.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  timer           2    0[BANK0 ] int 
   682 ;;  po              2    2[BANK0 ] int 
   683 ;;  pi              2    4[BANK0 ] int 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   695 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;Total ram usage:        8 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    4
   702 ;; This function calls:
   703 ;;		_digitalWrite
   704 ;;		_initTimer
   705 ;;		_startTimer
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text2
   712  001374                     __ptext2:
   713                           	opt stack 0
   714  001374                     _initServo:
   715                           	opt stack 26
   716                           
   717                           ;servo.c: 17: port[timer] = po;
   718                           
   719                           ;incstack = 0
   720  001374  90D8               	bcf	status,0,c
   721  001376  0100               	movlb	0	; () banked
   722  001378  3580               	rlcf	initServo@timer& (0+255),w,b
   723  00137A  6ED9               	movwf	fsr2l,c
   724  00137C  0100               	movlb	0	; () banked
   725  00137E  3581               	rlcf	(initServo@timer+1)& (0+255),w,b
   726  001380  6EDA               	movwf	fsr2h,c
   727  001382  0E48               	movlw	low _port
   728  001384  26D9               	addwf	fsr2l,f,c
   729  001386  0E00               	movlw	high _port
   730  001388  22DA               	addwfc	fsr2h,f,c
   731  00138A  C082  FFDE         	movff	initServo@po,postinc2
   732  00138E  C083  FFDD         	movff	initServo@po+1,postdec2
   733                           
   734                           ;servo.c: 18: pin[timer] = pi;
   735  001392  90D8               	bcf	status,0,c
   736  001394  0100               	movlb	0	; () banked
   737  001396  3580               	rlcf	initServo@timer& (0+255),w,b
   738  001398  6ED9               	movwf	fsr2l,c
   739  00139A  0100               	movlb	0	; () banked
   740  00139C  3581               	rlcf	(initServo@timer+1)& (0+255),w,b
   741  00139E  6EDA               	movwf	fsr2h,c
   742  0013A0  0E40               	movlw	low _pin
   743  0013A2  26D9               	addwf	fsr2l,f,c
   744  0013A4  0E00               	movlw	high _pin
   745  0013A6  22DA               	addwfc	fsr2h,f,c
   746  0013A8  C084  FFDE         	movff	initServo@pi,postinc2
   747  0013AC  C085  FFDD         	movff	initServo@pi+1,postdec2
   748                           
   749                           ; BSR set to: 0
   750                           ;servo.c: 19: pulse[timer] = 61785;
   751  0013B0  0E30               	movlw	low _pulse
   752  0013B2  6E2E               	movwf	??_initServo& (0+255),c
   753  0013B4  0E00               	movlw	high _pulse
   754  0013B6  6E2F               	movwf	(??_initServo+1)& (0+255),c
   755  0013B8  90D8               	bcf	status,0,c
   756  0013BA  0100               	movlb	0	; () banked
   757  0013BC  3580               	rlcf	initServo@timer& (0+255),w,b
   758  0013BE  6ED9               	movwf	fsr2l,c
   759  0013C0  0100               	movlb	0	; () banked
   760  0013C2  3581               	rlcf	(initServo@timer+1)& (0+255),w,b
   761  0013C4  6EDA               	movwf	fsr2h,c
   762  0013C6  90D8               	bcf	status,0,c
   763  0013C8  36D9               	rlcf	fsr2l,f,c
   764  0013CA  36DA               	rlcf	fsr2h,f,c
   765  0013CC  502E               	movf	??_initServo,w,c
   766  0013CE  26D9               	addwf	fsr2l,f,c
   767  0013D0  502F               	movf	??_initServo+1,w,c
   768  0013D2  22DA               	addwfc	fsr2h,f,c
   769  0013D4  0E59               	movlw	89
   770  0013D6  6EDE               	movwf	postinc2,c
   771  0013D8  0EF1               	movlw	241
   772  0013DA  6EDE               	movwf	postinc2,c
   773  0013DC  0E00               	movlw	0
   774  0013DE  6EDE               	movwf	postinc2,c
   775  0013E0  0E00               	movlw	0
   776  0013E2  6EDD               	movwf	postdec2,c
   777                           
   778                           ; BSR set to: 0
   779                           ;servo.c: 21: initTimer(timer);
   780  0013E4  C080  F025         	movff	initServo@timer,initTimer@timer
   781  0013E8  C081  F026         	movff	initServo@timer+1,initTimer@timer+1
   782  0013EC  ECD2  F00B         	call	_initTimer	;wreg free
   783                           
   784                           ;servo.c: 22: startTimer(timer,61785);
   785  0013F0  C080  F025         	movff	initServo@timer,startTimer@timer
   786  0013F4  C081  F026         	movff	initServo@timer+1,startTimer@timer+1
   787  0013F8  0E59               	movlw	89
   788  0013FA  6E27               	movwf	startTimer@val,c
   789  0013FC  0EF1               	movlw	241
   790  0013FE  6E28               	movwf	startTimer@val+1,c
   791  001400  0E00               	movlw	0
   792  001402  6E29               	movwf	startTimer@val+2,c
   793  001404  0E00               	movlw	0
   794  001406  6E2A               	movwf	startTimer@val+3,c
   795  001408  EC86  F00B         	call	_startTimer	;wreg free
   796                           
   797                           ;servo.c: 23: digitalWrite(po,pi,1);
   798  00140C  C082  F025         	movff	initServo@po,digitalWrite@port
   799  001410  C083  F026         	movff	initServo@po+1,digitalWrite@port+1
   800  001414  C084  F027         	movff	initServo@pi,digitalWrite@pin
   801  001418  C085  F028         	movff	initServo@pi+1,digitalWrite@pin+1
   802  00141C  0E00               	movlw	0
   803  00141E  6E2A               	movwf	digitalWrite@val+1,c
   804  001420  0E01               	movlw	1
   805  001422  6E29               	movwf	digitalWrite@val,c
   806  001424  EC6E  F00A         	call	_digitalWrite	;wreg free
   807  001428  0012               	return		;funcret
   808  00142A                     __end_of_initServo:
   809                           	opt stack 0
   810                           tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           tblptrl	equ	0xFF6
   813                           tablat	equ	0xFF5
   814                           intcon	equ	0xFF2
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           postdec1	equ	0xFE5
   818                           fsr1l	equ	0xFE1
   819                           postinc2	equ	0xFDE
   820                           postdec2	equ	0xFDD
   821                           fsr2h	equ	0xFDA
   822                           fsr2l	equ	0xFD9
   823                           status	equ	0xFD8
   824                           
   825 ;; *************** function _startTimer *****************
   826 ;; Defined at:
   827 ;;		line 75 in file "timer.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  timer           2   36[COMRAM] int 
   830 ;;  val             4   38[COMRAM] long 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   842 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;Total ram usage:        8 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    3
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_initServo
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text3
   857  00170C                     __ptext3:
   858                           	opt stack 0
   859  00170C                     _startTimer:
   860                           	opt stack 26
   861                           
   862                           ;timer.c: 76: switch(timer){
   863                           
   864                           ;incstack = 0
   865  00170C  D012               	goto	l1746
   866  00170E                     l296:
   867                           
   868                           ;timer.c: 78: TMR0H = val>>8;
   869  00170E  C028  FFD7         	movff	startTimer@val+1,4055	;volatile
   870                           
   871                           ;timer.c: 79: TMR0L = val;
   872  001712  C027  FFD6         	movff	startTimer@val,4054	;volatile
   873                           
   874                           ;timer.c: 80: T0CON |= 1<<7;
   875  001716  8ED5               	bsf	4053,7,c	;volatile
   876                           
   877                           ;timer.c: 81: break;
   878  001718  0012               	return	
   879  00171A                     l298:
   880                           
   881                           ;timer.c: 83: TMR1H = val>>8;
   882  00171A  C028  FFCF         	movff	startTimer@val+1,4047	;volatile
   883                           
   884                           ;timer.c: 84: TMR1L = val;
   885  00171E  C027  FFCE         	movff	startTimer@val,4046	;volatile
   886                           
   887                           ;timer.c: 85: T1CON |= 1<<0;
   888  001722  80CD               	bsf	4045,0,c	;volatile
   889                           
   890                           ;timer.c: 86: break;
   891  001724  0012               	return	
   892  001726                     l299:
   893                           
   894                           ;timer.c: 88: TMR3H = val>>8;
   895  001726  C028  FFB3         	movff	startTimer@val+1,4019	;volatile
   896                           
   897                           ;timer.c: 89: TMR3L = val;
   898  00172A  C027  FFB2         	movff	startTimer@val,4018	;volatile
   899                           
   900                           ;timer.c: 90: T3CON |= 1<<0;
   901  00172E  80B1               	bsf	4017,0,c	;volatile
   902                           
   903                           ;timer.c: 91: }
   904  001730  0012               	return	
   905  001732                     l1746:
   906  001732  C025  F02B         	movff	startTimer@timer,??_startTimer
   907  001736  C026  F02C         	movff	startTimer@timer+1,??_startTimer+1
   908                           
   909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   910                           ; Switch size 1, requested type "space"
   911                           ; Number of cases is 1, Range of values is 0 to 0
   912                           ; switch strategies available:
   913                           ; Name         Instructions Cycles
   914                           ; simple_byte            4     3 (average)
   915                           ;	Chosen strategy is simple_byte
   916  00173A  502C               	movf	??_startTimer+1,w,c
   917  00173C  0A00               	xorlw	0	; case 0
   918  00173E  A4D8               	btfss	status,2,c
   919  001740  0012               	return	
   920                           
   921                           ; Switch size 1, requested type "space"
   922                           ; Number of cases is 3, Range of values is 0 to 3
   923                           ; switch strategies available:
   924                           ; Name         Instructions Cycles
   925                           ; simple_byte           10     6 (average)
   926                           ;	Chosen strategy is simple_byte
   927  001742  502B               	movf	??_startTimer,w,c
   928  001744  0A00               	xorlw	0	; case 0
   929  001746  B4D8               	btfsc	status,2,c
   930  001748  D7E2               	goto	l296
   931  00174A  0A01               	xorlw	1	; case 1
   932  00174C  B4D8               	btfsc	status,2,c
   933  00174E  D7E5               	goto	l298
   934  001750  0A02               	xorlw	2	; case 3
   935  001752  A4D8               	btfss	status,2,c
   936  001754  0012               	return	
   937  001756  D7E7               	goto	l299
   938  001758                     __end_of_startTimer:
   939                           	opt stack 0
   940                           tblptru	equ	0xFF8
   941                           tblptrh	equ	0xFF7
   942                           tblptrl	equ	0xFF6
   943                           tablat	equ	0xFF5
   944                           intcon	equ	0xFF2
   945                           postinc0	equ	0xFEE
   946                           wreg	equ	0xFE8
   947                           postdec1	equ	0xFE5
   948                           fsr1l	equ	0xFE1
   949                           postinc2	equ	0xFDE
   950                           postdec2	equ	0xFDD
   951                           fsr2h	equ	0xFDA
   952                           fsr2l	equ	0xFD9
   953                           status	equ	0xFD8
   954                           
   955 ;; *************** function _initTimer *****************
   956 ;; Defined at:
   957 ;;		line 52 in file "timer.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  timer           2   36[COMRAM] int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;Total ram usage:        4 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    3
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_initServo
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text4
   986  0017A4                     __ptext4:
   987                           	opt stack 0
   988  0017A4                     _initTimer:
   989                           	opt stack 26
   990                           
   991                           ;timer.c: 53: switch(timer){
   992                           
   993                           ;incstack = 0
   994  0017A4  D00D               	goto	l1732
   995  0017A6                     l1716:
   996                           
   997                           ;timer.c: 55: T0CON = 0;
   998  0017A6  0E00               	movlw	0
   999  0017A8  6ED5               	movwf	4053,c	;volatile
  1000                           
  1001                           ;timer.c: 56: T0CON |= 1<<3;
  1002  0017AA  86D5               	bsf	4053,3,c	;volatile
  1003                           
  1004                           ;timer.c: 58: TMR0IE = 1;
  1005  0017AC  8AF2               	bsf	intcon,5,c	;volatile
  1006                           
  1007                           ;timer.c: 59: break;
  1008  0017AE  D01A               	goto	l289
  1009  0017B0                     l1722:
  1010                           
  1011                           ;timer.c: 61: T1CON = 0;
  1012  0017B0  0E00               	movlw	0
  1013  0017B2  6ECD               	movwf	4045,c	;volatile
  1014                           
  1015                           ;timer.c: 63: TMR1IE = 1;
  1016  0017B4  809D               	bsf	3997,0,c	;volatile
  1017                           
  1018                           ;timer.c: 64: break;
  1019  0017B6  D016               	goto	l289
  1020  0017B8                     l1726:
  1021                           
  1022                           ;timer.c: 66: T3CON = 0;
  1023  0017B8  0E00               	movlw	0
  1024  0017BA  6EB1               	movwf	4017,c	;volatile
  1025                           
  1026                           ;timer.c: 67: TMR3IE = 1;
  1027  0017BC  82A0               	bsf	4000,1,c	;volatile
  1028                           
  1029                           ;timer.c: 69: }
  1030                           
  1031                           ;timer.c: 68: break;
  1032  0017BE  D012               	goto	l289
  1033  0017C0                     l1732:
  1034  0017C0  C025  F027         	movff	initTimer@timer,??_initTimer
  1035  0017C4  C026  F028         	movff	initTimer@timer+1,??_initTimer+1
  1036                           
  1037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1038                           ; Switch size 1, requested type "space"
  1039                           ; Number of cases is 1, Range of values is 0 to 0
  1040                           ; switch strategies available:
  1041                           ; Name         Instructions Cycles
  1042                           ; simple_byte            4     3 (average)
  1043                           ;	Chosen strategy is simple_byte
  1044  0017C8  5028               	movf	??_initTimer+1,w,c
  1045  0017CA  0A00               	xorlw	0	; case 0
  1046  0017CC  A4D8               	btfss	status,2,c
  1047  0017CE  D00A               	goto	l289
  1048                           
  1049                           ; Switch size 1, requested type "space"
  1050                           ; Number of cases is 3, Range of values is 0 to 3
  1051                           ; switch strategies available:
  1052                           ; Name         Instructions Cycles
  1053                           ; simple_byte           10     6 (average)
  1054                           ;	Chosen strategy is simple_byte
  1055  0017D0  5027               	movf	??_initTimer,w,c
  1056  0017D2  0A00               	xorlw	0	; case 0
  1057  0017D4  B4D8               	btfsc	status,2,c
  1058  0017D6  D7E7               	goto	l1716
  1059  0017D8  0A01               	xorlw	1	; case 1
  1060  0017DA  B4D8               	btfsc	status,2,c
  1061  0017DC  D7E9               	goto	l1722
  1062  0017DE  0A02               	xorlw	2	; case 3
  1063  0017E0  B4D8               	btfsc	status,2,c
  1064  0017E2  D7EA               	goto	l1726
  1065  0017E4                     l289:
  1066                           
  1067                           ;timer.c: 70: PEIE = 1;
  1068  0017E4  8CF2               	bsf	intcon,6,c	;volatile
  1069                           
  1070                           ;timer.c: 71: (INTCONbits.GIE = 1);
  1071  0017E6  8EF2               	bsf	intcon,7,c	;volatile
  1072  0017E8  0012               	return		;funcret
  1073  0017EA                     __end_of_initTimer:
  1074                           	opt stack 0
  1075                           tblptru	equ	0xFF8
  1076                           tblptrh	equ	0xFF7
  1077                           tblptrl	equ	0xFF6
  1078                           tablat	equ	0xFF5
  1079                           intcon	equ	0xFF2
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           postdec1	equ	0xFE5
  1083                           fsr1l	equ	0xFE1
  1084                           postinc2	equ	0xFDE
  1085                           postdec2	equ	0xFDD
  1086                           fsr2h	equ	0xFDA
  1087                           fsr2l	equ	0xFD9
  1088                           status	equ	0xFD8
  1089                           
  1090 ;; *************** function _digitalWrite *****************
  1091 ;; Defined at:
  1092 ;;		line 53 in file "iopin.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  port            2   36[COMRAM] int 
  1095 ;;  pin             2   38[COMRAM] int 
  1096 ;;  val             2   40[COMRAM] int 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1108 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;Total ram usage:        9 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    3
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_initServo
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text5
  1123  0014DC                     __ptext5:
  1124                           	opt stack 0
  1125  0014DC                     _digitalWrite:
  1126                           	opt stack 26
  1127                           
  1128                           ;iopin.c: 54: pin = 1 << pin;
  1129                           
  1130                           ;incstack = 0
  1131  0014DC  C027  F02B         	movff	digitalWrite@pin,??_digitalWrite
  1132  0014E0  0E01               	movlw	1
  1133  0014E2  6E2C               	movwf	(??_digitalWrite+1)& (0+255),c
  1134  0014E4  0E00               	movlw	0
  1135  0014E6  6E2D               	movwf	(??_digitalWrite+2)& (0+255),c
  1136  0014E8  2A2B               	incf	??_digitalWrite,f,c
  1137  0014EA  D003               	goto	u684
  1138  0014EC                     u685:
  1139  0014EC  90D8               	bcf	status,0,c
  1140  0014EE  362C               	rlcf	??_digitalWrite+1,f,c
  1141  0014F0  362D               	rlcf	??_digitalWrite+2,f,c
  1142  0014F2                     u684:
  1143  0014F2  2E2B               	decfsz	??_digitalWrite,f,c
  1144  0014F4  D7FB               	goto	u685
  1145  0014F6  C02C  F027         	movff	??_digitalWrite+1,digitalWrite@pin
  1146  0014FA  C02D  F028         	movff	??_digitalWrite+2,digitalWrite@pin+1
  1147                           
  1148                           ;iopin.c: 55: if(val == 0){
  1149  0014FE  5029               	movf	digitalWrite@val,w,c
  1150  001500  102A               	iorwf	digitalWrite@val+1,w,c
  1151  001502  A4D8               	btfss	status,2,c
  1152  001504  D02B               	goto	l1708
  1153                           
  1154                           ;iopin.c: 56: pin ^= 0xff;
  1155  001506  0EFF               	movlw	255
  1156  001508  1A27               	xorwf	digitalWrite@pin,f,c
  1157                           
  1158                           ;iopin.c: 57: }
  1159                           ;iopin.c: 59: switch(port){
  1160  00150A  D028               	goto	l1708
  1161  00150C                     l1684:
  1162  00150C  0429               	decf	digitalWrite@val,w,c
  1163  00150E  102A               	iorwf	digitalWrite@val+1,w,c
  1164  001510  A4D8               	btfss	status,2,c
  1165  001512  D003               	goto	l1688
  1166  001514  5027               	movf	digitalWrite@pin,w,c
  1167  001516  1289               	iorwf	3977,f,c	;volatile
  1168  001518  0012               	return	
  1169  00151A                     l1688:
  1170                           
  1171                           ;iopin.c: 61: else LATA &= pin;
  1172  00151A  5027               	movf	digitalWrite@pin,w,c
  1173  00151C  1689               	andwf	3977,f,c	;volatile
  1174                           
  1175                           ;iopin.c: 62: break;
  1176  00151E  0012               	return	
  1177  001520                     l1690:
  1178  001520  0429               	decf	digitalWrite@val,w,c
  1179  001522  102A               	iorwf	digitalWrite@val+1,w,c
  1180  001524  A4D8               	btfss	status,2,c
  1181  001526  D003               	goto	l1694
  1182  001528  5027               	movf	digitalWrite@pin,w,c
  1183  00152A  128A               	iorwf	3978,f,c	;volatile
  1184  00152C  0012               	return	
  1185  00152E                     l1694:
  1186                           
  1187                           ;iopin.c: 64: else LATB &= pin;
  1188  00152E  5027               	movf	digitalWrite@pin,w,c
  1189  001530  168A               	andwf	3978,f,c	;volatile
  1190                           
  1191                           ;iopin.c: 65: break;
  1192  001532  0012               	return	
  1193  001534                     l1696:
  1194  001534  0429               	decf	digitalWrite@val,w,c
  1195  001536  102A               	iorwf	digitalWrite@val+1,w,c
  1196  001538  A4D8               	btfss	status,2,c
  1197  00153A  D003               	goto	l1700
  1198  00153C  5027               	movf	digitalWrite@pin,w,c
  1199  00153E  128B               	iorwf	3979,f,c	;volatile
  1200  001540  0012               	return	
  1201  001542                     l1700:
  1202                           
  1203                           ;iopin.c: 67: else LATC &= pin;
  1204  001542  5027               	movf	digitalWrite@pin,w,c
  1205  001544  168B               	andwf	3979,f,c	;volatile
  1206                           
  1207                           ;iopin.c: 68: break;
  1208  001546  0012               	return	
  1209  001548                     l1702:
  1210  001548  0429               	decf	digitalWrite@val,w,c
  1211  00154A  102A               	iorwf	digitalWrite@val+1,w,c
  1212  00154C  A4D8               	btfss	status,2,c
  1213  00154E  D003               	goto	l1706
  1214  001550  5027               	movf	digitalWrite@pin,w,c
  1215  001552  128C               	iorwf	3980,f,c	;volatile
  1216  001554  0012               	return	
  1217  001556                     l1706:
  1218                           
  1219                           ;iopin.c: 70: else LATD &= pin;
  1220  001556  5027               	movf	digitalWrite@pin,w,c
  1221  001558  168C               	andwf	3980,f,c	;volatile
  1222                           
  1223                           ;iopin.c: 71: }
  1224  00155A  0012               	return	
  1225  00155C                     l1708:
  1226  00155C  C025  F02B         	movff	digitalWrite@port,??_digitalWrite
  1227  001560  C026  F02C         	movff	digitalWrite@port+1,??_digitalWrite+1
  1228                           
  1229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1230                           ; Switch size 1, requested type "space"
  1231                           ; Number of cases is 1, Range of values is 0 to 0
  1232                           ; switch strategies available:
  1233                           ; Name         Instructions Cycles
  1234                           ; simple_byte            4     3 (average)
  1235                           ;	Chosen strategy is simple_byte
  1236  001564  502C               	movf	??_digitalWrite+1,w,c
  1237  001566  0A00               	xorlw	0	; case 0
  1238  001568  A4D8               	btfss	status,2,c
  1239  00156A  0012               	return	
  1240                           
  1241                           ; Switch size 1, requested type "space"
  1242                           ; Number of cases is 4, Range of values is 0 to 3
  1243                           ; switch strategies available:
  1244                           ; Name         Instructions Cycles
  1245                           ; simple_byte           13     7 (average)
  1246                           ;	Chosen strategy is simple_byte
  1247  00156C  502B               	movf	??_digitalWrite,w,c
  1248  00156E  0A00               	xorlw	0	; case 0
  1249  001570  B4D8               	btfsc	status,2,c
  1250  001572  D7CC               	goto	l1684
  1251  001574  0A01               	xorlw	1	; case 1
  1252  001576  B4D8               	btfsc	status,2,c
  1253  001578  D7D3               	goto	l1690
  1254  00157A  0A03               	xorlw	3	; case 2
  1255  00157C  B4D8               	btfsc	status,2,c
  1256  00157E  D7DA               	goto	l1696
  1257  001580  0A01               	xorlw	1	; case 3
  1258  001582  A4D8               	btfss	status,2,c
  1259  001584  0012               	return	
  1260  001586  D7E0               	goto	l1702
  1261  001588                     __end_of_digitalWrite:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           intcon	equ	0xFF2
  1268                           postinc0	equ	0xFEE
  1269                           wreg	equ	0xFE8
  1270                           postdec1	equ	0xFE5
  1271                           fsr1l	equ	0xFE1
  1272                           postinc2	equ	0xFDE
  1273                           postdec2	equ	0xFDD
  1274                           fsr2h	equ	0xFDA
  1275                           fsr2l	equ	0xFD9
  1276                           status	equ	0xFD8
  1277                           
  1278 ;; *************** function _initLCD *****************
  1279 ;; Defined at:
  1280 ;;		line 15 in file "lcd.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        1 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    5
  1301 ;; This function calls:
  1302 ;;		_lcdInst
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text6
  1309  0017EA                     __ptext6:
  1310                           	opt stack 0
  1311  0017EA                     _initLCD:
  1312                           	opt stack 25
  1313                           
  1314                           ;lcd.c: 17: _delay((unsigned long)((15)*(10000000/4000.0)));
  1315                           
  1316                           ;incstack = 0
  1317  0017EA  0E31               	movlw	49
  1318  0017EC  6E29               	movwf	??_initLCD& (0+255),c
  1319  0017EE  0EB2               	movlw	178
  1320  0017F0                     u997:
  1321  0017F0  2EE8               	decfsz	wreg,f,c
  1322  0017F2  D7FE               	bra	u997
  1323  0017F4  2E29               	decfsz	??_initLCD& (0+255),f,c
  1324  0017F6  D7FC               	bra	u997
  1325  0017F8  D000               	nop2	
  1326                           
  1327                           ;lcd.c: 18: lcdInst(0b00110011);
  1328  0017FA  0E33               	movlw	51
  1329  0017FC  EC6B  F00C         	call	_lcdInst
  1330                           
  1331                           ;lcd.c: 19: lcdInst(0b00110010);
  1332  001800  0E32               	movlw	50
  1333  001802  EC6B  F00C         	call	_lcdInst
  1334                           
  1335                           ;lcd.c: 20: lcdInst(0b00101000);
  1336  001806  0E28               	movlw	40
  1337  001808  EC6B  F00C         	call	_lcdInst
  1338                           
  1339                           ;lcd.c: 21: lcdInst(0b00001111);
  1340  00180C  0E0F               	movlw	15
  1341  00180E  EC6B  F00C         	call	_lcdInst
  1342                           
  1343                           ;lcd.c: 22: lcdInst(0b00000110);
  1344  001812  0E06               	movlw	6
  1345  001814  EC6B  F00C         	call	_lcdInst
  1346                           
  1347                           ;lcd.c: 23: lcdInst(0b00000001);
  1348  001818  0E01               	movlw	1
  1349  00181A  EC6B  F00C         	call	_lcdInst
  1350                           
  1351                           ;lcd.c: 24: _delay((unsigned long)((15)*(10000000/4000.0)));
  1352  00181E  0E31               	movlw	49
  1353  001820  6E29               	movwf	??_initLCD& (0+255),c
  1354  001822  0EB2               	movlw	178
  1355  001824                     u1007:
  1356  001824  2EE8               	decfsz	wreg,f,c
  1357  001826  D7FE               	bra	u1007
  1358  001828  2E29               	decfsz	??_initLCD& (0+255),f,c
  1359  00182A  D7FC               	bra	u1007
  1360  00182C  D000               	nop2	
  1361  00182E  0012               	return		;funcret
  1362  001830                     __end_of_initLCD:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           intcon	equ	0xFF2
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           postdec1	equ	0xFE5
  1372                           fsr1l	equ	0xFE1
  1373                           postinc2	equ	0xFDE
  1374                           postdec2	equ	0xFDD
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function _lcdInst *****************
  1380 ;; Defined at:
  1381 ;;		line 27 in file "lcd.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  data            1    wreg     unsigned char 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  data            1   39[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;Total ram usage:        2 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    4
  1402 ;; This function calls:
  1403 ;;		_lcdNibble
  1404 ;; This function is called by:
  1405 ;;		_initLCD
  1406 ;;		_lcdHome
  1407 ;;		_lcdClear
  1408 ;;		_lcdNewline
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text7
  1413  0018D6                     __ptext7:
  1414                           	opt stack 0
  1415  0018D6                     _lcdInst:
  1416                           	opt stack 25
  1417                           
  1418                           ;incstack = 0
  1419                           ;lcdInst@data stored from wreg
  1420  0018D6  6E28               	movwf	lcdInst@data,c
  1421                           
  1422                           ;lcd.c: 28: LATDbits.LATD2 = 0;
  1423  0018D8  948C               	bcf	3980,2,c	;volatile
  1424                           
  1425                           ;lcd.c: 29: _delay((unsigned long)((140)*(10000000/4000000.0)));
  1426  0018DA  0E74               	movlw	116
  1427  0018DC                     u1017:
  1428  0018DC  2EE8               	decfsz	wreg,f,c
  1429  0018DE  D7FE               	bra	u1017
  1430  0018E0  D000               	nop2	
  1431                           
  1432                           ;lcd.c: 30: lcdNibble(data);
  1433  0018E2  5028               	movf	lcdInst@data,w,c
  1434  0018E4  EC53  F00B         	call	_lcdNibble
  1435                           
  1436                           ;lcd.c: 31: _delay((unsigned long)((1000)*(10000000/4000000.0)));
  1437  0018E8  0E04               	movlw	4
  1438  0018EA  6E27               	movwf	??_lcdInst& (0+255),c
  1439  0018EC  0E3E               	movlw	62
  1440  0018EE                     u1027:
  1441  0018EE  2EE8               	decfsz	wreg,f,c
  1442  0018F0  D7FE               	bra	u1027
  1443  0018F2  2E27               	decfsz	??_lcdInst& (0+255),f,c
  1444  0018F4  D7FC               	bra	u1027
  1445  0018F6  0012               	return		;funcret
  1446  0018F8                     __end_of_lcdInst:
  1447                           	opt stack 0
  1448                           tblptru	equ	0xFF8
  1449                           tblptrh	equ	0xFF7
  1450                           tblptrl	equ	0xFF6
  1451                           tablat	equ	0xFF5
  1452                           intcon	equ	0xFF2
  1453                           postinc0	equ	0xFEE
  1454                           wreg	equ	0xFE8
  1455                           postdec1	equ	0xFE5
  1456                           fsr1l	equ	0xFE1
  1457                           postinc2	equ	0xFDE
  1458                           postdec2	equ	0xFDD
  1459                           fsr2h	equ	0xFDA
  1460                           fsr2l	equ	0xFD9
  1461                           status	equ	0xFD8
  1462                           
  1463 ;; *************** function _lcdNibble *****************
  1464 ;; Defined at:
  1465 ;;		line 46 in file "lcd.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  data            1    wreg     unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  data            1   37[COMRAM] unsigned char 
  1470 ;;  temp            1   36[COMRAM] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;Total ram usage:        2 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    3
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_lcdInst
  1491 ;;		_putch
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text8
  1496  0016A6                     __ptext8:
  1497                           	opt stack 0
  1498  0016A6                     _lcdNibble:
  1499                           	opt stack 25
  1500                           
  1501                           ;incstack = 0
  1502                           ;lcdNibble@data stored from wreg
  1503  0016A6  6E26               	movwf	lcdNibble@data,c
  1504                           
  1505                           ;lcd.c: 48: char temp = data & 0xF0;
  1506  0016A8  5026               	movf	lcdNibble@data,w,c
  1507  0016AA  0BF0               	andlw	240
  1508  0016AC  6E25               	movwf	lcdNibble@temp,c
  1509                           
  1510                           ;lcd.c: 49: LATD = LATD & 0x0F;
  1511  0016AE  508C               	movf	3980,w,c	;volatile
  1512  0016B0  0B0F               	andlw	15
  1513  0016B2  6E8C               	movwf	3980,c	;volatile
  1514                           
  1515                           ;lcd.c: 50: LATD = temp | LATD;
  1516  0016B4  5025               	movf	lcdNibble@temp,w,c
  1517  0016B6  108C               	iorwf	3980,w,c	;volatile
  1518  0016B8  6E8C               	movwf	3980,c	;volatile
  1519                           
  1520                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  1521  0016BA  968C               	bcf	3980,3,c	;volatile
  1522                           
  1523                           ;lcd.c: 53: _delay((unsigned long)((600)*(10000000/4000000.0)));
  1524  0016BC  0ED6               	movlw	214
  1525  0016BE                     u1037:
  1526  0016BE  D000               	nop2	
  1527  0016C0  D000               	nop2	
  1528  0016C2  2EE8               	decfsz	wreg,f,c
  1529  0016C4  D7FC               	bra	u1037
  1530  0016C6  D000               	nop2	
  1531                           
  1532                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  1533  0016C8  868C               	bsf	3980,3,c	;volatile
  1534                           
  1535                           ;lcd.c: 55: _delay((unsigned long)((600)*(10000000/4000000.0)));
  1536  0016CA  0ED6               	movlw	214
  1537  0016CC                     u1047:
  1538  0016CC  D000               	nop2	
  1539  0016CE  D000               	nop2	
  1540  0016D0  2EE8               	decfsz	wreg,f,c
  1541  0016D2  D7FC               	bra	u1047
  1542  0016D4  D000               	nop2	
  1543                           
  1544                           ;lcd.c: 58: data = data << 4;
  1545  0016D6  3826               	swapf	lcdNibble@data,w,c
  1546  0016D8  0BF0               	andlw	240
  1547  0016DA  6E26               	movwf	lcdNibble@data,c
  1548                           
  1549                           ;lcd.c: 60: temp = data & 0xF0;
  1550  0016DC  5026               	movf	lcdNibble@data,w,c
  1551  0016DE  0BF0               	andlw	240
  1552  0016E0  6E25               	movwf	lcdNibble@temp,c
  1553                           
  1554                           ;lcd.c: 61: LATD = LATD & 0x0F;
  1555  0016E2  508C               	movf	3980,w,c	;volatile
  1556  0016E4  0B0F               	andlw	15
  1557  0016E6  6E8C               	movwf	3980,c	;volatile
  1558                           
  1559                           ;lcd.c: 62: LATD = temp | LATD;
  1560  0016E8  5025               	movf	lcdNibble@temp,w,c
  1561  0016EA  108C               	iorwf	3980,w,c	;volatile
  1562  0016EC  6E8C               	movwf	3980,c	;volatile
  1563                           
  1564                           ;lcd.c: 64: LATDbits.LATD3 = 0;
  1565  0016EE  968C               	bcf	3980,3,c	;volatile
  1566                           
  1567                           ;lcd.c: 65: _delay((unsigned long)((600)*(10000000/4000000.0)));
  1568  0016F0  0ED6               	movlw	214
  1569  0016F2                     u1057:
  1570  0016F2  D000               	nop2	
  1571  0016F4  D000               	nop2	
  1572  0016F6  2EE8               	decfsz	wreg,f,c
  1573  0016F8  D7FC               	bra	u1057
  1574  0016FA  D000               	nop2	
  1575                           
  1576                           ;lcd.c: 66: LATDbits.LATD3 = 1;
  1577  0016FC  868C               	bsf	3980,3,c	;volatile
  1578                           
  1579                           ;lcd.c: 67: _delay((unsigned long)((600)*(10000000/4000000.0)));
  1580  0016FE  0ED6               	movlw	214
  1581  001700                     u1067:
  1582  001700  D000               	nop2	
  1583  001702  D000               	nop2	
  1584  001704  2EE8               	decfsz	wreg,f,c
  1585  001706  D7FC               	bra	u1067
  1586  001708  D000               	nop2	
  1587  00170A  0012               	return		;funcret
  1588  00170C                     __end_of_lcdNibble:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           intcon	equ	0xFF2
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           postdec1	equ	0xFE5
  1598                           fsr1l	equ	0xFE1
  1599                           postinc2	equ	0xFDE
  1600                           postdec2	equ	0xFDD
  1601                           fsr2h	equ	0xFDA
  1602                           fsr2l	equ	0xFD9
  1603                           status	equ	0xFD8
  1604                           
  1605 ;; *************** function _service *****************
  1606 ;; Defined at:
  1607 ;;		line 72 in file "main.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  key             1   35[COMRAM] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;Total ram usage:       15 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    2
  1628 ;; This function calls:
  1629 ;;		_servoInterruptService
  1630 ;;		_setAngle
  1631 ;; This function is called by:
  1632 ;;		Interrupt level 2
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	intcode
  1637  000008                     __pintcode:
  1638                           	opt stack 0
  1639  000008                     _service:
  1640                           	opt stack 25
  1641                           
  1642                           ;incstack = 0
  1643  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1644  00000A  ED0C  F009         	call	int_func,f	;refresh shadow registers
  1645                           tblptru	equ	0xFF8
  1646                           tblptrh	equ	0xFF7
  1647                           tblptrl	equ	0xFF6
  1648                           tablat	equ	0xFF5
  1649                           intcon	equ	0xFF2
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           postdec1	equ	0xFE5
  1653                           fsr1l	equ	0xFE1
  1654                           postinc2	equ	0xFDE
  1655                           postdec2	equ	0xFDD
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           status	equ	0xFD8
  1659                           
  1660                           	psect	intcode_body
  1661  001218                     __pintcode_body:
  1662                           	opt stack 25
  1663  001218                     int_func:
  1664                           	opt stack 25
  1665  001218  0006               	pop		; remove dummy address from shadow register refresh
  1666  00121A  CFFA F016          	movff	pclath,??_service
  1667  00121E  CFFB F017          	movff	pclatu,??_service+1
  1668  001222  CFE9 F018          	movff	fsr0l,??_service+2
  1669  001226  CFEA F019          	movff	fsr0h,??_service+3
  1670  00122A  CFE1 F01A          	movff	fsr1l,??_service+4
  1671  00122E  CFE2 F01B          	movff	fsr1h,??_service+5
  1672  001232  CFD9 F01C          	movff	fsr2l,??_service+6
  1673  001236  CFDA F01D          	movff	fsr2h,??_service+7
  1674  00123A  CFF3 F01E          	movff	prodl,??_service+8
  1675  00123E  CFF4 F01F          	movff	prodh,??_service+9
  1676  001242  CFF6 F020          	movff	tblptrl,??_service+10
  1677  001246  CFF7 F021          	movff	tblptrh,??_service+11
  1678  00124A  CFF8 F022          	movff	tblptru,??_service+12
  1679  00124E  CFF5 F023          	movff	tablat,??_service+13
  1680                           
  1681                           ;main.c: 74: servoInterruptService();
  1682  001252  EC22  F008         	call	_servoInterruptService	;wreg free
  1683                           
  1684                           ;main.c: 77: if(INT1IF){INT1IF = 0;
  1685  001256  A0F0               	btfss	intcon3,0,c	;volatile
  1686  001258  D06F               	goto	i2l65
  1687  00125A  90F0               	bcf	intcon3,0,c	;volatile
  1688                           
  1689                           ;main.c: 78: char key = (PORTB & 0xF0) >> 4;
  1690  00125C  3881               	swapf	3969,w,c	;volatile
  1691  00125E  0B0F               	andlw	15
  1692  001260  0B0F               	andlw	15
  1693  001262  6E24               	movwf	service@key,c
  1694                           
  1695                           ;main.c: 79: if(key == 0)setAngle(1,64285);
  1696  001264  5024               	movf	service@key,w,c
  1697  001266  A4D8               	btfss	status,2,c
  1698  001268  D00E               	goto	i2l1862
  1699  00126A  0E00               	movlw	0
  1700  00126C  6E02               	movwf	setAngle@timer+1,c
  1701  00126E  0E01               	movlw	1
  1702  001270  6E01               	movwf	setAngle@timer,c
  1703  001272  0E1D               	movlw	29
  1704  001274  6E03               	movwf	setAngle@angle,c
  1705  001276  0EFB               	movlw	251
  1706  001278  6E04               	movwf	setAngle@angle+1,c
  1707  00127A  0E00               	movlw	0
  1708  00127C  6E05               	movwf	setAngle@angle+2,c
  1709  00127E  0E00               	movlw	0
  1710  001280  6E06               	movwf	setAngle@angle+3,c
  1711  001282  EC52  F00C         	call	_setAngle	;wreg free
  1712  001286                     i2l1862:
  1713                           
  1714                           ;main.c: 80: if(key == 1)setAngle(1,61785);
  1715  001286  0424               	decf	service@key,w,c
  1716  001288  A4D8               	btfss	status,2,c
  1717  00128A  D00E               	goto	i2l1866
  1718  00128C  0E00               	movlw	0
  1719  00128E  6E02               	movwf	setAngle@timer+1,c
  1720  001290  0E01               	movlw	1
  1721  001292  6E01               	movwf	setAngle@timer,c
  1722  001294  0E59               	movlw	89
  1723  001296  6E03               	movwf	setAngle@angle,c
  1724  001298  0EF1               	movlw	241
  1725  00129A  6E04               	movwf	setAngle@angle+1,c
  1726  00129C  0E00               	movlw	0
  1727  00129E  6E05               	movwf	setAngle@angle+2,c
  1728  0012A0  0E00               	movlw	0
  1729  0012A2  6E06               	movwf	setAngle@angle+3,c
  1730  0012A4  EC52  F00C         	call	_setAngle	;wreg free
  1731  0012A8                     i2l1866:
  1732                           
  1733                           ;main.c: 81: if(key == 2)setAngle(1,59285);
  1734  0012A8  0E02               	movlw	2
  1735  0012AA  1824               	xorwf	service@key,w,c
  1736  0012AC  A4D8               	btfss	status,2,c
  1737  0012AE  D00E               	goto	i2l1870
  1738  0012B0  0E00               	movlw	0
  1739  0012B2  6E02               	movwf	setAngle@timer+1,c
  1740  0012B4  0E01               	movlw	1
  1741  0012B6  6E01               	movwf	setAngle@timer,c
  1742  0012B8  0E95               	movlw	149
  1743  0012BA  6E03               	movwf	setAngle@angle,c
  1744  0012BC  0EE7               	movlw	231
  1745  0012BE  6E04               	movwf	setAngle@angle+1,c
  1746  0012C0  0E00               	movlw	0
  1747  0012C2  6E05               	movwf	setAngle@angle+2,c
  1748  0012C4  0E00               	movlw	0
  1749  0012C6  6E06               	movwf	setAngle@angle+3,c
  1750  0012C8  EC52  F00C         	call	_setAngle	;wreg free
  1751  0012CC                     i2l1870:
  1752                           
  1753                           ;main.c: 83: if(key == 4)setAngle(3,64285);
  1754  0012CC  0E04               	movlw	4
  1755  0012CE  1824               	xorwf	service@key,w,c
  1756  0012D0  A4D8               	btfss	status,2,c
  1757  0012D2  D00E               	goto	i2l1874
  1758  0012D4  0E00               	movlw	0
  1759  0012D6  6E02               	movwf	setAngle@timer+1,c
  1760  0012D8  0E03               	movlw	3
  1761  0012DA  6E01               	movwf	setAngle@timer,c
  1762  0012DC  0E1D               	movlw	29
  1763  0012DE  6E03               	movwf	setAngle@angle,c
  1764  0012E0  0EFB               	movlw	251
  1765  0012E2  6E04               	movwf	setAngle@angle+1,c
  1766  0012E4  0E00               	movlw	0
  1767  0012E6  6E05               	movwf	setAngle@angle+2,c
  1768  0012E8  0E00               	movlw	0
  1769  0012EA  6E06               	movwf	setAngle@angle+3,c
  1770  0012EC  EC52  F00C         	call	_setAngle	;wreg free
  1771  0012F0                     i2l1874:
  1772                           
  1773                           ;main.c: 84: if(key == 5)setAngle(3,61785);
  1774  0012F0  0E05               	movlw	5
  1775  0012F2  1824               	xorwf	service@key,w,c
  1776  0012F4  A4D8               	btfss	status,2,c
  1777  0012F6  D00E               	goto	i2l1878
  1778  0012F8  0E00               	movlw	0
  1779  0012FA  6E02               	movwf	setAngle@timer+1,c
  1780  0012FC  0E03               	movlw	3
  1781  0012FE  6E01               	movwf	setAngle@timer,c
  1782  001300  0E59               	movlw	89
  1783  001302  6E03               	movwf	setAngle@angle,c
  1784  001304  0EF1               	movlw	241
  1785  001306  6E04               	movwf	setAngle@angle+1,c
  1786  001308  0E00               	movlw	0
  1787  00130A  6E05               	movwf	setAngle@angle+2,c
  1788  00130C  0E00               	movlw	0
  1789  00130E  6E06               	movwf	setAngle@angle+3,c
  1790  001310  EC52  F00C         	call	_setAngle	;wreg free
  1791  001314                     i2l1878:
  1792                           
  1793                           ;main.c: 85: if(key == 6)setAngle(3,59285);
  1794  001314  0E06               	movlw	6
  1795  001316  1824               	xorwf	service@key,w,c
  1796  001318  A4D8               	btfss	status,2,c
  1797  00131A  D00E               	goto	i2l65
  1798  00131C  0E00               	movlw	0
  1799  00131E  6E02               	movwf	setAngle@timer+1,c
  1800  001320  0E03               	movlw	3
  1801  001322  6E01               	movwf	setAngle@timer,c
  1802  001324  0E95               	movlw	149
  1803  001326  6E03               	movwf	setAngle@angle,c
  1804  001328  0EE7               	movlw	231
  1805  00132A  6E04               	movwf	setAngle@angle+1,c
  1806  00132C  0E00               	movlw	0
  1807  00132E  6E05               	movwf	setAngle@angle+2,c
  1808  001330  0E00               	movlw	0
  1809  001332  6E06               	movwf	setAngle@angle+3,c
  1810  001334  EC52  F00C         	call	_setAngle	;wreg free
  1811  001338                     i2l65:
  1812  001338  C023  FFF5         	movff	??_service+13,tablat
  1813  00133C  C022  FFF8         	movff	??_service+12,tblptru
  1814  001340  C021  FFF7         	movff	??_service+11,tblptrh
  1815  001344  C020  FFF6         	movff	??_service+10,tblptrl
  1816  001348  C01F  FFF4         	movff	??_service+9,prodh
  1817  00134C  C01E  FFF3         	movff	??_service+8,prodl
  1818  001350  C01D  FFDA         	movff	??_service+7,fsr2h
  1819  001354  C01C  FFD9         	movff	??_service+6,fsr2l
  1820  001358  C01B  FFE2         	movff	??_service+5,fsr1h
  1821  00135C  C01A  FFE1         	movff	??_service+4,fsr1l
  1822  001360  C019  FFEA         	movff	??_service+3,fsr0h
  1823  001364  C018  FFE9         	movff	??_service+2,fsr0l
  1824  001368  C017  FFFB         	movff	??_service+1,pclatu
  1825  00136C  C016  FFFA         	movff	??_service,pclath
  1826  001370  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1827  001372  0011               	retfie		f
  1828  001374                     __end_of_service:
  1829                           	opt stack 0
  1830                           pclatu	equ	0xFFB
  1831                           pclath	equ	0xFFA
  1832                           tblptru	equ	0xFF8
  1833                           tblptrh	equ	0xFF7
  1834                           tblptrl	equ	0xFF6
  1835                           tablat	equ	0xFF5
  1836                           prodh	equ	0xFF4
  1837                           prodl	equ	0xFF3
  1838                           intcon	equ	0xFF2
  1839                           intcon3	equ	0xFF0
  1840                           postinc0	equ	0xFEE
  1841                           fsr0h	equ	0xFEA
  1842                           fsr0l	equ	0xFE9
  1843                           wreg	equ	0xFE8
  1844                           postdec1	equ	0xFE5
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           postinc2	equ	0xFDE
  1848                           postdec2	equ	0xFDD
  1849                           fsr2h	equ	0xFDA
  1850                           fsr2l	equ	0xFD9
  1851                           status	equ	0xFD8
  1852                           
  1853 ;; *************** function _setAngle *****************
  1854 ;; Defined at:
  1855 ;;		line 26 in file "servo.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  timer           2    0[COMRAM] int 
  1858 ;;  angle           4    2[COMRAM] long 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1870 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;Total ram usage:        8 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_service
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text10
  1884  0018A4                     __ptext10:
  1885                           	opt stack 0
  1886  0018A4                     _setAngle:
  1887                           	opt stack 26
  1888                           
  1889                           ;servo.c: 27: pulse[timer] = angle;
  1890                           
  1891                           ;incstack = 0
  1892  0018A4  0E30               	movlw	low _pulse
  1893  0018A6  6E07               	movwf	??_setAngle& (0+255),c
  1894  0018A8  0E00               	movlw	high _pulse
  1895  0018AA  6E08               	movwf	(??_setAngle+1)& (0+255),c
  1896  0018AC  90D8               	bcf	status,0,c
  1897  0018AE  3401               	rlcf	setAngle@timer,w,c
  1898  0018B0  6ED9               	movwf	fsr2l,c
  1899  0018B2  3402               	rlcf	setAngle@timer+1,w,c
  1900  0018B4  6EDA               	movwf	fsr2h,c
  1901  0018B6  90D8               	bcf	status,0,c
  1902  0018B8  36D9               	rlcf	fsr2l,f,c
  1903  0018BA  36DA               	rlcf	fsr2h,f,c
  1904  0018BC  5007               	movf	??_setAngle,w,c
  1905  0018BE  26D9               	addwf	fsr2l,f,c
  1906  0018C0  5008               	movf	??_setAngle+1,w,c
  1907  0018C2  22DA               	addwfc	fsr2h,f,c
  1908  0018C4  C003  FFDE         	movff	setAngle@angle,postinc2
  1909  0018C8  C004  FFDE         	movff	setAngle@angle+1,postinc2
  1910  0018CC  C005  FFDE         	movff	setAngle@angle+2,postinc2
  1911  0018D0  C006  FFDE         	movff	setAngle@angle+3,postinc2
  1912  0018D4  0012               	return		;funcret
  1913  0018D6                     __end_of_setAngle:
  1914                           	opt stack 0
  1915                           pclatu	equ	0xFFB
  1916                           pclath	equ	0xFFA
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           prodh	equ	0xFF4
  1922                           prodl	equ	0xFF3
  1923                           intcon	equ	0xFF2
  1924                           intcon3	equ	0xFF0
  1925                           postinc0	equ	0xFEE
  1926                           fsr0h	equ	0xFEA
  1927                           fsr0l	equ	0xFE9
  1928                           wreg	equ	0xFE8
  1929                           postdec1	equ	0xFE5
  1930                           fsr1h	equ	0xFE2
  1931                           fsr1l	equ	0xFE1
  1932                           postinc2	equ	0xFDE
  1933                           postdec2	equ	0xFDD
  1934                           fsr2h	equ	0xFDA
  1935                           fsr2l	equ	0xFD9
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function _servoInterruptService *****************
  1939 ;; Defined at:
  1940 ;;		line 30 in file "servo.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  i               2   19[COMRAM] int 
  1945 ;;  flags           8   11[COMRAM] int [4]
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;Total ram usage:       12 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    1
  1962 ;; This function calls:
  1963 ;;		_digitalRead
  1964 ;;		i2_digitalWrite
  1965 ;;		i2_startTimer
  1966 ;; This function is called by:
  1967 ;;		_service
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text11
  1972  001044                     __ptext11:
  1973                           	opt stack 0
  1974  001044                     _servoInterruptService:
  1975                           	opt stack 25
  1976                           
  1977                           ;servo.c: 32: int flags[4];
  1978                           ;servo.c: 33: flags[0] = TMR0IF;
  1979                           
  1980                           ;incstack = 0
  1981  001044  A4F2               	btfss	intcon,2,c	;volatile
  1982  001046  D002               	goto	i2u80_40
  1983  001048  0E01               	movlw	1
  1984  00104A  D001               	goto	i2u81_40
  1985  00104C                     i2u80_40:
  1986  00104C  0E00               	movlw	0
  1987  00104E                     i2u81_40:
  1988  00104E  6E0C               	movwf	servoInterruptService@flags,c
  1989  001050  6A0D               	clrf	servoInterruptService@flags+1,c
  1990                           
  1991                           ;servo.c: 34: flags[1] = TMR1IF;
  1992  001052  A09E               	btfss	3998,0,c	;volatile
  1993  001054  D002               	goto	i2u82_40
  1994  001056  0E01               	movlw	1
  1995  001058  D001               	goto	i2u83_40
  1996  00105A                     i2u82_40:
  1997  00105A  0E00               	movlw	0
  1998  00105C                     i2u83_40:
  1999  00105C  6E0E               	movwf	servoInterruptService@flags+2,c
  2000  00105E  6A0F               	clrf	servoInterruptService@flags+3,c
  2001                           
  2002                           ;servo.c: 35: flags[2] = TMR2IF;
  2003  001060  A29E               	btfss	3998,1,c	;volatile
  2004  001062  D002               	goto	i2u84_40
  2005  001064  0E01               	movlw	1
  2006  001066  D001               	goto	i2u85_40
  2007  001068                     i2u84_40:
  2008  001068  0E00               	movlw	0
  2009  00106A                     i2u85_40:
  2010  00106A  6E10               	movwf	servoInterruptService@flags+4,c
  2011  00106C  6A11               	clrf	servoInterruptService@flags+5,c
  2012                           
  2013                           ;servo.c: 36: flags[3] = TMR3IF;
  2014  00106E  A2A1               	btfss	4001,1,c	;volatile
  2015  001070  D002               	goto	i2u86_40
  2016  001072  0E01               	movlw	1
  2017  001074  D001               	goto	i2u87_40
  2018  001076                     i2u86_40:
  2019  001076  0E00               	movlw	0
  2020  001078                     i2u87_40:
  2021  001078  6E12               	movwf	servoInterruptService@flags+6,c
  2022  00107A  6A13               	clrf	servoInterruptService@flags+7,c
  2023                           
  2024                           ;servo.c: 38: for(int i = 0; i < 4; i++){
  2025  00107C  0E00               	movlw	0
  2026  00107E  6E15               	movwf	servoInterruptService@i+1,c
  2027  001080  0E00               	movlw	0
  2028  001082  6E14               	movwf	servoInterruptService@i,c
  2029  001084  BE15               	btfsc	servoInterruptService@i+1,7,c
  2030  001086  D008               	goto	i2l1816
  2031  001088  5015               	movf	servoInterruptService@i+1,w,c
  2032  00108A  E105               	bnz	i2u88_40
  2033  00108C  0E04               	movlw	4
  2034  00108E  5C14               	subwf	servoInterruptService@i,w,c
  2035  001090  B0D8               	btfsc	status,0,c
  2036  001092  0012               	return	
  2037  001094  D001               	goto	i2l1816
  2038  001096                     i2u88_40:
  2039  001096  0012               	return	
  2040  001098                     i2l1816:
  2041                           
  2042                           ;servo.c: 39: if(flags[i]){
  2043  001098  90D8               	bcf	status,0,c
  2044  00109A  3414               	rlcf	servoInterruptService@i,w,c
  2045  00109C  6ED9               	movwf	fsr2l,c
  2046  00109E  3415               	rlcf	servoInterruptService@i+1,w,c
  2047  0010A0  6EDA               	movwf	fsr2h,c
  2048  0010A2  0E0C               	movlw	low servoInterruptService@flags
  2049  0010A4  26D9               	addwf	fsr2l,f,c
  2050  0010A6  0E00               	movlw	high servoInterruptService@flags
  2051  0010A8  22DA               	addwfc	fsr2h,f,c
  2052  0010AA  50DE               	movf	postinc2,w,c
  2053  0010AC  10DE               	iorwf	postinc2,w,c
  2054  0010AE  B4D8               	btfsc	status,2,c
  2055  0010B0  D0AB               	goto	i2l1830
  2056                           
  2057                           ;servo.c: 41: if(digitalRead(port[i],pin[i])){
  2058  0010B2  90D8               	bcf	status,0,c
  2059  0010B4  3414               	rlcf	servoInterruptService@i,w,c
  2060  0010B6  6ED9               	movwf	fsr2l,c
  2061  0010B8  3415               	rlcf	servoInterruptService@i+1,w,c
  2062  0010BA  6EDA               	movwf	fsr2h,c
  2063  0010BC  0E48               	movlw	low _port
  2064  0010BE  26D9               	addwf	fsr2l,f,c
  2065  0010C0  0E00               	movlw	high _port
  2066  0010C2  22DA               	addwfc	fsr2h,f,c
  2067  0010C4  CFDE F001          	movff	postinc2,digitalRead@port
  2068  0010C8  CFDD F002          	movff	postdec2,digitalRead@port+1
  2069  0010CC  90D8               	bcf	status,0,c
  2070  0010CE  3414               	rlcf	servoInterruptService@i,w,c
  2071  0010D0  6ED9               	movwf	fsr2l,c
  2072  0010D2  3415               	rlcf	servoInterruptService@i+1,w,c
  2073  0010D4  6EDA               	movwf	fsr2h,c
  2074  0010D6  0E40               	movlw	low _pin
  2075  0010D8  26D9               	addwf	fsr2l,f,c
  2076  0010DA  0E00               	movlw	high _pin
  2077  0010DC  22DA               	addwfc	fsr2h,f,c
  2078  0010DE  CFDE F003          	movff	postinc2,digitalRead@pin
  2079  0010E2  CFDD F004          	movff	postdec2,digitalRead@pin+1
  2080  0010E6  EC15  F00A         	call	_digitalRead	;wreg free
  2081  0010EA  5001               	movf	?_digitalRead,w,c
  2082  0010EC  1002               	iorwf	?_digitalRead+1,w,c
  2083  0010EE  B4D8               	btfsc	status,2,c
  2084  0010F0  D02F               	goto	i2l1824
  2085                           
  2086                           ;servo.c: 42: startTimer(i,15535);
  2087  0010F2  C014  F001         	movff	servoInterruptService@i,i2startTimer@timer
  2088  0010F6  C015  F002         	movff	servoInterruptService@i+1,i2startTimer@timer+1
  2089  0010FA  0EAF               	movlw	175
  2090  0010FC  6E03               	movwf	i2startTimer@val,c
  2091  0010FE  0E3C               	movlw	60
  2092  001100  6E04               	movwf	i2startTimer@val+1,c
  2093  001102  0E00               	movlw	0
  2094  001104  6E05               	movwf	i2startTimer@val+2,c
  2095  001106  0E00               	movlw	0
  2096  001108  6E06               	movwf	i2startTimer@val+3,c
  2097  00110A  ECAC  F00B         	call	i2_startTimer	;wreg free
  2098                           
  2099                           ;servo.c: 43: digitalWrite(port[i],pin[i],0);
  2100  00110E  90D8               	bcf	status,0,c
  2101  001110  3414               	rlcf	servoInterruptService@i,w,c
  2102  001112  6ED9               	movwf	fsr2l,c
  2103  001114  3415               	rlcf	servoInterruptService@i+1,w,c
  2104  001116  6EDA               	movwf	fsr2h,c
  2105  001118  0E48               	movlw	low _port
  2106  00111A  26D9               	addwf	fsr2l,f,c
  2107  00111C  0E00               	movlw	high _port
  2108  00111E  22DA               	addwfc	fsr2h,f,c
  2109  001120  CFDE F001          	movff	postinc2,i2digitalWrite@port
  2110  001124  CFDD F002          	movff	postdec2,i2digitalWrite@port+1
  2111  001128  90D8               	bcf	status,0,c
  2112  00112A  3414               	rlcf	servoInterruptService@i,w,c
  2113  00112C  6ED9               	movwf	fsr2l,c
  2114  00112E  3415               	rlcf	servoInterruptService@i+1,w,c
  2115  001130  6EDA               	movwf	fsr2h,c
  2116  001132  0E40               	movlw	low _pin
  2117  001134  26D9               	addwf	fsr2l,f,c
  2118  001136  0E00               	movlw	high _pin
  2119  001138  22DA               	addwfc	fsr2h,f,c
  2120  00113A  CFDE F003          	movff	postinc2,i2digitalWrite@pin
  2121  00113E  CFDD F004          	movff	postdec2,i2digitalWrite@pin+1
  2122  001142  0E00               	movlw	0
  2123  001144  6E06               	movwf	i2digitalWrite@val+1,c
  2124  001146  0E00               	movlw	0
  2125  001148  6E05               	movwf	i2digitalWrite@val,c
  2126  00114A  ECC4  F00A         	call	i2_digitalWrite	;wreg free
  2127                           
  2128                           ;servo.c: 44: }
  2129  00114E  D047               	goto	i2l1828
  2130  001150                     i2l1824:
  2131                           
  2132                           ;servo.c: 45: else{
  2133                           ;servo.c: 46: startTimer(i, pulse[i]);
  2134  001150  C014  F001         	movff	servoInterruptService@i,i2startTimer@timer
  2135  001154  C015  F002         	movff	servoInterruptService@i+1,i2startTimer@timer+1
  2136  001158  0E30               	movlw	low _pulse
  2137  00115A  6E0A               	movwf	??_servoInterruptService& (0+255),c
  2138  00115C  0E00               	movlw	high _pulse
  2139  00115E  6E0B               	movwf	(??_servoInterruptService+1)& (0+255),c
  2140  001160  90D8               	bcf	status,0,c
  2141  001162  3414               	rlcf	servoInterruptService@i,w,c
  2142  001164  6ED9               	movwf	fsr2l,c
  2143  001166  3415               	rlcf	servoInterruptService@i+1,w,c
  2144  001168  6EDA               	movwf	fsr2h,c
  2145  00116A  90D8               	bcf	status,0,c
  2146  00116C  36D9               	rlcf	fsr2l,f,c
  2147  00116E  36DA               	rlcf	fsr2h,f,c
  2148  001170  500A               	movf	??_servoInterruptService,w,c
  2149  001172  26D9               	addwf	fsr2l,f,c
  2150  001174  500B               	movf	??_servoInterruptService+1,w,c
  2151  001176  22DA               	addwfc	fsr2h,f,c
  2152  001178  CFDE F003          	movff	postinc2,i2startTimer@val
  2153  00117C  CFDE F004          	movff	postinc2,i2startTimer@val+1
  2154  001180  CFDE F005          	movff	postinc2,i2startTimer@val+2
  2155  001184  CFDE F006          	movff	postinc2,i2startTimer@val+3
  2156  001188  ECAC  F00B         	call	i2_startTimer	;wreg free
  2157                           
  2158                           ;servo.c: 47: digitalWrite(port[i],pin[i],1);
  2159  00118C  90D8               	bcf	status,0,c
  2160  00118E  3414               	rlcf	servoInterruptService@i,w,c
  2161  001190  6ED9               	movwf	fsr2l,c
  2162  001192  3415               	rlcf	servoInterruptService@i+1,w,c
  2163  001194  6EDA               	movwf	fsr2h,c
  2164  001196  0E48               	movlw	low _port
  2165  001198  26D9               	addwf	fsr2l,f,c
  2166  00119A  0E00               	movlw	high _port
  2167  00119C  22DA               	addwfc	fsr2h,f,c
  2168  00119E  CFDE F001          	movff	postinc2,i2digitalWrite@port
  2169  0011A2  CFDD F002          	movff	postdec2,i2digitalWrite@port+1
  2170  0011A6  90D8               	bcf	status,0,c
  2171  0011A8  3414               	rlcf	servoInterruptService@i,w,c
  2172  0011AA  6ED9               	movwf	fsr2l,c
  2173  0011AC  3415               	rlcf	servoInterruptService@i+1,w,c
  2174  0011AE  6EDA               	movwf	fsr2h,c
  2175  0011B0  0E40               	movlw	low _pin
  2176  0011B2  26D9               	addwf	fsr2l,f,c
  2177  0011B4  0E00               	movlw	high _pin
  2178  0011B6  22DA               	addwfc	fsr2h,f,c
  2179  0011B8  CFDE F003          	movff	postinc2,i2digitalWrite@pin
  2180  0011BC  CFDD F004          	movff	postdec2,i2digitalWrite@pin+1
  2181  0011C0  0E00               	movlw	0
  2182  0011C2  6E06               	movwf	i2digitalWrite@val+1,c
  2183  0011C4  0E01               	movlw	1
  2184  0011C6  6E05               	movwf	i2digitalWrite@val,c
  2185  0011C8  ECC4  F00A         	call	i2_digitalWrite	;wreg free
  2186                           
  2187                           ;servo.c: 48: }
  2188                           ;servo.c: 51: switch(i){
  2189  0011CC  D008               	goto	i2l1828
  2190  0011CE                     i2l414:
  2191  0011CE  94F2               	bcf	intcon,2,c	;volatile
  2192  0011D0  D01B               	goto	i2l1830
  2193  0011D2                     i2l416:
  2194  0011D2  909E               	bcf	3998,0,c	;volatile
  2195  0011D4  D019               	goto	i2l1830
  2196  0011D6                     i2l417:
  2197  0011D6  929E               	bcf	3998,1,c	;volatile
  2198  0011D8  D017               	goto	i2l1830
  2199  0011DA                     i2l418:
  2200  0011DA  92A1               	bcf	4001,1,c	;volatile
  2201                           
  2202                           ;servo.c: 56: }
  2203  0011DC  D015               	goto	i2l1830
  2204  0011DE                     i2l1828:
  2205  0011DE  C014  F00A         	movff	servoInterruptService@i,??_servoInterruptService
  2206  0011E2  C015  F00B         	movff	servoInterruptService@i+1,??_servoInterruptService+1
  2207                           
  2208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2209                           ; Switch size 1, requested type "space"
  2210                           ; Number of cases is 1, Range of values is 0 to 0
  2211                           ; switch strategies available:
  2212                           ; Name         Instructions Cycles
  2213                           ; simple_byte            4     3 (average)
  2214                           ;	Chosen strategy is simple_byte
  2215  0011E6  500B               	movf	??_servoInterruptService+1,w,c
  2216  0011E8  0A00               	xorlw	0	; case 0
  2217  0011EA  A4D8               	btfss	status,2,c
  2218  0011EC  D00D               	goto	i2l1830
  2219                           
  2220                           ; Switch size 1, requested type "space"
  2221                           ; Number of cases is 4, Range of values is 0 to 3
  2222                           ; switch strategies available:
  2223                           ; Name         Instructions Cycles
  2224                           ; simple_byte           13     7 (average)
  2225                           ;	Chosen strategy is simple_byte
  2226  0011EE  500A               	movf	??_servoInterruptService,w,c
  2227  0011F0  0A00               	xorlw	0	; case 0
  2228  0011F2  B4D8               	btfsc	status,2,c
  2229  0011F4  D7EC               	goto	i2l414
  2230  0011F6  0A01               	xorlw	1	; case 1
  2231  0011F8  B4D8               	btfsc	status,2,c
  2232  0011FA  D7EB               	goto	i2l416
  2233  0011FC  0A03               	xorlw	3	; case 2
  2234  0011FE  B4D8               	btfsc	status,2,c
  2235  001200  D7EA               	goto	i2l417
  2236  001202  0A01               	xorlw	1	; case 3
  2237  001204  B4D8               	btfsc	status,2,c
  2238  001206  D7E9               	goto	i2l418
  2239  001208                     i2l1830:
  2240  001208  4A14               	infsnz	servoInterruptService@i,f,c
  2241  00120A  2A15               	incf	servoInterruptService@i+1,f,c
  2242  00120C  BE15               	btfsc	servoInterruptService@i+1,7,c
  2243  00120E  D744               	goto	i2l1816
  2244  001210  5015               	movf	servoInterruptService@i+1,w,c
  2245  001212  E101               	bnz	i2l419
  2246  001214  D73B               	goto	L1
  2247  001216                     i2l419:
  2248  001216  0012               	return		;funcret
  2249  001218                     __end_of_servoInterruptService:
  2250                           	opt stack 0
  2251                           pclatu	equ	0xFFB
  2252                           pclath	equ	0xFFA
  2253                           tblptru	equ	0xFF8
  2254                           tblptrh	equ	0xFF7
  2255                           tblptrl	equ	0xFF6
  2256                           tablat	equ	0xFF5
  2257                           prodh	equ	0xFF4
  2258                           prodl	equ	0xFF3
  2259                           intcon	equ	0xFF2
  2260                           intcon3	equ	0xFF0
  2261                           postinc0	equ	0xFEE
  2262                           fsr0h	equ	0xFEA
  2263                           fsr0l	equ	0xFE9
  2264                           wreg	equ	0xFE8
  2265                           postdec1	equ	0xFE5
  2266                           fsr1h	equ	0xFE2
  2267                           fsr1l	equ	0xFE1
  2268                           postinc2	equ	0xFDE
  2269                           postdec2	equ	0xFDD
  2270                           fsr2h	equ	0xFDA
  2271                           fsr2l	equ	0xFD9
  2272                           status	equ	0xFD8
  2273                           
  2274 ;; *************** function i2_startTimer *****************
  2275 ;; Defined at:
  2276 ;;		line 75 in file "timer.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  timer           2    0[COMRAM] int 
  2279 ;;  val             4    2[COMRAM] long 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2291 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;Total ram usage:        8 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_servoInterruptService
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text12
  2305  001758                     __ptext12:
  2306                           	opt stack 0
  2307  001758                     i2_startTimer:
  2308                           	opt stack 25
  2309                           
  2310                           ;timer.c: 76: switch(timer){
  2311                           
  2312                           ;incstack = 0
  2313  001758  D012               	goto	i2l1794
  2314  00175A                     i2l296:
  2315                           
  2316                           ;timer.c: 78: TMR0H = val>>8;
  2317  00175A  C004  FFD7         	movff	i2startTimer@val+1,4055	;volatile
  2318                           
  2319                           ;timer.c: 79: TMR0L = val;
  2320  00175E  C003  FFD6         	movff	i2startTimer@val,4054	;volatile
  2321                           
  2322                           ;timer.c: 80: T0CON |= 1<<7;
  2323  001762  8ED5               	bsf	4053,7,c	;volatile
  2324                           
  2325                           ;timer.c: 81: break;
  2326  001764  0012               	return	
  2327  001766                     i2l298:
  2328                           
  2329                           ;timer.c: 83: TMR1H = val>>8;
  2330  001766  C004  FFCF         	movff	i2startTimer@val+1,4047	;volatile
  2331                           
  2332                           ;timer.c: 84: TMR1L = val;
  2333  00176A  C003  FFCE         	movff	i2startTimer@val,4046	;volatile
  2334                           
  2335                           ;timer.c: 85: T1CON |= 1<<0;
  2336  00176E  80CD               	bsf	4045,0,c	;volatile
  2337                           
  2338                           ;timer.c: 86: break;
  2339  001770  0012               	return	
  2340  001772                     i2l299:
  2341                           
  2342                           ;timer.c: 88: TMR3H = val>>8;
  2343  001772  C004  FFB3         	movff	i2startTimer@val+1,4019	;volatile
  2344                           
  2345                           ;timer.c: 89: TMR3L = val;
  2346  001776  C003  FFB2         	movff	i2startTimer@val,4018	;volatile
  2347                           
  2348                           ;timer.c: 90: T3CON |= 1<<0;
  2349  00177A  80B1               	bsf	4017,0,c	;volatile
  2350                           
  2351                           ;timer.c: 91: }
  2352  00177C  0012               	return	
  2353  00177E                     i2l1794:
  2354  00177E  C001  F007         	movff	i2startTimer@timer,??i2_startTimer
  2355  001782  C002  F008         	movff	i2startTimer@timer+1,??i2_startTimer+1
  2356                           
  2357                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2358                           ; Switch size 1, requested type "space"
  2359                           ; Number of cases is 1, Range of values is 0 to 0
  2360                           ; switch strategies available:
  2361                           ; Name         Instructions Cycles
  2362                           ; simple_byte            4     3 (average)
  2363                           ;	Chosen strategy is simple_byte
  2364  001786  5008               	movf	??i2_startTimer+1,w,c
  2365  001788  0A00               	xorlw	0	; case 0
  2366  00178A  A4D8               	btfss	status,2,c
  2367  00178C  0012               	return	
  2368                           
  2369                           ; Switch size 1, requested type "space"
  2370                           ; Number of cases is 3, Range of values is 0 to 3
  2371                           ; switch strategies available:
  2372                           ; Name         Instructions Cycles
  2373                           ; simple_byte           10     6 (average)
  2374                           ;	Chosen strategy is simple_byte
  2375  00178E  5007               	movf	??i2_startTimer,w,c
  2376  001790  0A00               	xorlw	0	; case 0
  2377  001792  B4D8               	btfsc	status,2,c
  2378  001794  D7E2               	goto	i2l296
  2379  001796  0A01               	xorlw	1	; case 1
  2380  001798  B4D8               	btfsc	status,2,c
  2381  00179A  D7E5               	goto	i2l298
  2382  00179C  0A02               	xorlw	2	; case 3
  2383  00179E  A4D8               	btfss	status,2,c
  2384  0017A0  0012               	return	
  2385  0017A2  D7E7               	goto	i2l299
  2386  0017A4                     __end_ofi2_startTimer:
  2387                           	opt stack 0
  2388                           pclatu	equ	0xFFB
  2389                           pclath	equ	0xFFA
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           prodh	equ	0xFF4
  2395                           prodl	equ	0xFF3
  2396                           intcon	equ	0xFF2
  2397                           intcon3	equ	0xFF0
  2398                           postinc0	equ	0xFEE
  2399                           fsr0h	equ	0xFEA
  2400                           fsr0l	equ	0xFE9
  2401                           wreg	equ	0xFE8
  2402                           postdec1	equ	0xFE5
  2403                           fsr1h	equ	0xFE2
  2404                           fsr1l	equ	0xFE1
  2405                           postinc2	equ	0xFDE
  2406                           postdec2	equ	0xFDD
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           
  2411 ;; *************** function i2_digitalWrite *****************
  2412 ;; Defined at:
  2413 ;;		line 53 in file "iopin.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  port            2    0[COMRAM] int 
  2416 ;;  pin             2    2[COMRAM] int 
  2417 ;;  val             2    4[COMRAM] int 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        9 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_servoInterruptService
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text13
  2443  001588                     __ptext13:
  2444                           	opt stack 0
  2445  001588                     i2_digitalWrite:
  2446                           	opt stack 25
  2447                           
  2448                           ;iopin.c: 54: pin = 1 << pin;
  2449                           
  2450                           ;incstack = 0
  2451  001588  C003  F007         	movff	i2digitalWrite@pin,??i2_digitalWrite
  2452  00158C  0E01               	movlw	1
  2453  00158E  6E08               	movwf	(??i2_digitalWrite+1)& (0+255),c
  2454  001590  0E00               	movlw	0
  2455  001592  6E09               	movwf	(??i2_digitalWrite+2)& (0+255),c
  2456  001594  2A07               	incf	??i2_digitalWrite,f,c
  2457  001596  D003               	goto	i2u74_44
  2458  001598                     i2u74_45:
  2459  001598  90D8               	bcf	status,0,c
  2460  00159A  3608               	rlcf	??i2_digitalWrite+1,f,c
  2461  00159C  3609               	rlcf	??i2_digitalWrite+2,f,c
  2462  00159E                     i2u74_44:
  2463  00159E  2E07               	decfsz	??i2_digitalWrite,f,c
  2464  0015A0  D7FB               	goto	i2u74_45
  2465  0015A2  C008  F003         	movff	??i2_digitalWrite+1,i2digitalWrite@pin
  2466  0015A6  C009  F004         	movff	??i2_digitalWrite+2,i2digitalWrite@pin+1
  2467                           
  2468                           ;iopin.c: 55: if(val == 0){
  2469  0015AA  5005               	movf	i2digitalWrite@val,w,c
  2470  0015AC  1006               	iorwf	i2digitalWrite@val+1,w,c
  2471  0015AE  A4D8               	btfss	status,2,c
  2472  0015B0  D02B               	goto	i2l1780
  2473                           
  2474                           ;iopin.c: 56: pin ^= 0xff;
  2475  0015B2  0EFF               	movlw	255
  2476  0015B4  1A03               	xorwf	i2digitalWrite@pin,f,c
  2477                           
  2478                           ;iopin.c: 57: }
  2479                           ;iopin.c: 59: switch(port){
  2480  0015B6  D028               	goto	i2l1780
  2481  0015B8                     i2l1756:
  2482  0015B8  0405               	decf	i2digitalWrite@val,w,c
  2483  0015BA  1006               	iorwf	i2digitalWrite@val+1,w,c
  2484  0015BC  A4D8               	btfss	status,2,c
  2485  0015BE  D003               	goto	i2l1760
  2486  0015C0  5003               	movf	i2digitalWrite@pin,w,c
  2487  0015C2  1289               	iorwf	3977,f,c	;volatile
  2488  0015C4  0012               	return	
  2489  0015C6                     i2l1760:
  2490                           
  2491                           ;iopin.c: 61: else LATA &= pin;
  2492  0015C6  5003               	movf	i2digitalWrite@pin,w,c
  2493  0015C8  1689               	andwf	3977,f,c	;volatile
  2494                           
  2495                           ;iopin.c: 62: break;
  2496  0015CA  0012               	return	
  2497  0015CC                     i2l1762:
  2498  0015CC  0405               	decf	i2digitalWrite@val,w,c
  2499  0015CE  1006               	iorwf	i2digitalWrite@val+1,w,c
  2500  0015D0  A4D8               	btfss	status,2,c
  2501  0015D2  D003               	goto	i2l1766
  2502  0015D4  5003               	movf	i2digitalWrite@pin,w,c
  2503  0015D6  128A               	iorwf	3978,f,c	;volatile
  2504  0015D8  0012               	return	
  2505  0015DA                     i2l1766:
  2506                           
  2507                           ;iopin.c: 64: else LATB &= pin;
  2508  0015DA  5003               	movf	i2digitalWrite@pin,w,c
  2509  0015DC  168A               	andwf	3978,f,c	;volatile
  2510                           
  2511                           ;iopin.c: 65: break;
  2512  0015DE  0012               	return	
  2513  0015E0                     i2l1768:
  2514  0015E0  0405               	decf	i2digitalWrite@val,w,c
  2515  0015E2  1006               	iorwf	i2digitalWrite@val+1,w,c
  2516  0015E4  A4D8               	btfss	status,2,c
  2517  0015E6  D003               	goto	i2l1772
  2518  0015E8  5003               	movf	i2digitalWrite@pin,w,c
  2519  0015EA  128B               	iorwf	3979,f,c	;volatile
  2520  0015EC  0012               	return	
  2521  0015EE                     i2l1772:
  2522                           
  2523                           ;iopin.c: 67: else LATC &= pin;
  2524  0015EE  5003               	movf	i2digitalWrite@pin,w,c
  2525  0015F0  168B               	andwf	3979,f,c	;volatile
  2526                           
  2527                           ;iopin.c: 68: break;
  2528  0015F2  0012               	return	
  2529  0015F4                     i2l1774:
  2530  0015F4  0405               	decf	i2digitalWrite@val,w,c
  2531  0015F6  1006               	iorwf	i2digitalWrite@val+1,w,c
  2532  0015F8  A4D8               	btfss	status,2,c
  2533  0015FA  D003               	goto	i2l1778
  2534  0015FC  5003               	movf	i2digitalWrite@pin,w,c
  2535  0015FE  128C               	iorwf	3980,f,c	;volatile
  2536  001600  0012               	return	
  2537  001602                     i2l1778:
  2538                           
  2539                           ;iopin.c: 70: else LATD &= pin;
  2540  001602  5003               	movf	i2digitalWrite@pin,w,c
  2541  001604  168C               	andwf	3980,f,c	;volatile
  2542                           
  2543                           ;iopin.c: 71: }
  2544  001606  0012               	return	
  2545  001608                     i2l1780:
  2546  001608  C001  F007         	movff	i2digitalWrite@port,??i2_digitalWrite
  2547  00160C  C002  F008         	movff	i2digitalWrite@port+1,??i2_digitalWrite+1
  2548                           
  2549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2550                           ; Switch size 1, requested type "space"
  2551                           ; Number of cases is 1, Range of values is 0 to 0
  2552                           ; switch strategies available:
  2553                           ; Name         Instructions Cycles
  2554                           ; simple_byte            4     3 (average)
  2555                           ;	Chosen strategy is simple_byte
  2556  001610  5008               	movf	??i2_digitalWrite+1,w,c
  2557  001612  0A00               	xorlw	0	; case 0
  2558  001614  A4D8               	btfss	status,2,c
  2559  001616  0012               	return	
  2560                           
  2561                           ; Switch size 1, requested type "space"
  2562                           ; Number of cases is 4, Range of values is 0 to 3
  2563                           ; switch strategies available:
  2564                           ; Name         Instructions Cycles
  2565                           ; simple_byte           13     7 (average)
  2566                           ;	Chosen strategy is simple_byte
  2567  001618  5007               	movf	??i2_digitalWrite,w,c
  2568  00161A  0A00               	xorlw	0	; case 0
  2569  00161C  B4D8               	btfsc	status,2,c
  2570  00161E  D7CC               	goto	i2l1756
  2571  001620  0A01               	xorlw	1	; case 1
  2572  001622  B4D8               	btfsc	status,2,c
  2573  001624  D7D3               	goto	i2l1762
  2574  001626  0A03               	xorlw	3	; case 2
  2575  001628  B4D8               	btfsc	status,2,c
  2576  00162A  D7DA               	goto	i2l1768
  2577  00162C  0A01               	xorlw	1	; case 3
  2578  00162E  A4D8               	btfss	status,2,c
  2579  001630  0012               	return	
  2580  001632  D7E0               	goto	i2l1774
  2581  001634                     __end_ofi2_digitalWrite:
  2582                           	opt stack 0
  2583                           pclatu	equ	0xFFB
  2584                           pclath	equ	0xFFA
  2585                           tblptru	equ	0xFF8
  2586                           tblptrh	equ	0xFF7
  2587                           tblptrl	equ	0xFF6
  2588                           tablat	equ	0xFF5
  2589                           prodh	equ	0xFF4
  2590                           prodl	equ	0xFF3
  2591                           intcon	equ	0xFF2
  2592                           intcon3	equ	0xFF0
  2593                           postinc0	equ	0xFEE
  2594                           fsr0h	equ	0xFEA
  2595                           fsr0l	equ	0xFE9
  2596                           wreg	equ	0xFE8
  2597                           postdec1	equ	0xFE5
  2598                           fsr1h	equ	0xFE2
  2599                           fsr1l	equ	0xFE1
  2600                           postinc2	equ	0xFDE
  2601                           postdec2	equ	0xFDD
  2602                           fsr2h	equ	0xFDA
  2603                           fsr2l	equ	0xFD9
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function _digitalRead *****************
  2607 ;; Defined at:
  2608 ;;		line 43 in file "iopin.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  port            2    0[COMRAM] int 
  2611 ;;  pin             2    2[COMRAM] int 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  2    0[COMRAM] int 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;Total ram usage:        6 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_servoInterruptService
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text14
  2637  00142A                     __ptext14:
  2638                           	opt stack 0
  2639  00142A                     _digitalRead:
  2640                           	opt stack 25
  2641                           
  2642                           ;iopin.c: 44: switch(port){
  2643                           
  2644                           ;incstack = 0
  2645  00142A  D040               	goto	i2l1674
  2646  00142C                     i2l1656:
  2647  00142C  C003  F005         	movff	digitalRead@pin,??_digitalRead
  2648  001430  CF80 F006          	movff	3968,??_digitalRead+1	;volatile
  2649  001434  2A05               	incf	??_digitalRead,f,c
  2650  001436  D002               	goto	i2u64_44
  2651  001438                     i2u64_45:
  2652  001438  90D8               	bcf	status,0,c
  2653  00143A  3206               	rrcf	??_digitalRead+1,f,c
  2654  00143C                     i2u64_44:
  2655  00143C  2E05               	decfsz	??_digitalRead,f,c
  2656  00143E  D7FC               	goto	i2u64_45
  2657  001440  0E01               	movlw	1
  2658  001442  1606               	andwf	??_digitalRead+1,f,c
  2659  001444  5006               	movf	??_digitalRead+1,w,c
  2660  001446  6E01               	movwf	?_digitalRead,c
  2661  001448  6A02               	clrf	?_digitalRead+1,c
  2662  00144A  0012               	return	
  2663  00144C                     i2l1660:
  2664  00144C  C003  F005         	movff	digitalRead@pin,??_digitalRead
  2665  001450  CF81 F006          	movff	3969,??_digitalRead+1	;volatile
  2666  001454  2A05               	incf	??_digitalRead,f,c
  2667  001456  D002               	goto	i2u65_44
  2668  001458                     i2u65_45:
  2669  001458  90D8               	bcf	status,0,c
  2670  00145A  3206               	rrcf	??_digitalRead+1,f,c
  2671  00145C                     i2u65_44:
  2672  00145C  2E05               	decfsz	??_digitalRead,f,c
  2673  00145E  D7FC               	goto	i2u65_45
  2674  001460  0E01               	movlw	1
  2675  001462  1606               	andwf	??_digitalRead+1,f,c
  2676  001464  5006               	movf	??_digitalRead+1,w,c
  2677  001466  6E01               	movwf	?_digitalRead,c
  2678  001468  6A02               	clrf	?_digitalRead+1,c
  2679  00146A  0012               	return	
  2680  00146C                     i2l1664:
  2681  00146C  C003  F005         	movff	digitalRead@pin,??_digitalRead
  2682  001470  CF82 F006          	movff	3970,??_digitalRead+1	;volatile
  2683  001474  2A05               	incf	??_digitalRead,f,c
  2684  001476  D002               	goto	i2u66_44
  2685  001478                     i2u66_45:
  2686  001478  90D8               	bcf	status,0,c
  2687  00147A  3206               	rrcf	??_digitalRead+1,f,c
  2688  00147C                     i2u66_44:
  2689  00147C  2E05               	decfsz	??_digitalRead,f,c
  2690  00147E  D7FC               	goto	i2u66_45
  2691  001480  0E01               	movlw	1
  2692  001482  1606               	andwf	??_digitalRead+1,f,c
  2693  001484  5006               	movf	??_digitalRead+1,w,c
  2694  001486  6E01               	movwf	?_digitalRead,c
  2695  001488  6A02               	clrf	?_digitalRead+1,c
  2696  00148A  0012               	return	
  2697  00148C                     i2l1668:
  2698  00148C  C003  F005         	movff	digitalRead@pin,??_digitalRead
  2699  001490  CF83 F006          	movff	3971,??_digitalRead+1	;volatile
  2700  001494  2A05               	incf	??_digitalRead,f,c
  2701  001496  D002               	goto	i2u67_44
  2702  001498                     i2u67_45:
  2703  001498  90D8               	bcf	status,0,c
  2704  00149A  3206               	rrcf	??_digitalRead+1,f,c
  2705  00149C                     i2u67_44:
  2706  00149C  2E05               	decfsz	??_digitalRead,f,c
  2707  00149E  D7FC               	goto	i2u67_45
  2708  0014A0  0E01               	movlw	1
  2709  0014A2  1606               	andwf	??_digitalRead+1,f,c
  2710  0014A4  5006               	movf	??_digitalRead+1,w,c
  2711  0014A6  6E01               	movwf	?_digitalRead,c
  2712  0014A8  6A02               	clrf	?_digitalRead+1,c
  2713  0014AA  0012               	return	
  2714  0014AC                     i2l1674:
  2715  0014AC  C001  F005         	movff	digitalRead@port,??_digitalRead
  2716  0014B0  C002  F006         	movff	digitalRead@port+1,??_digitalRead+1
  2717                           
  2718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2719                           ; Switch size 1, requested type "space"
  2720                           ; Number of cases is 1, Range of values is 0 to 0
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            4     3 (average)
  2724                           ;	Chosen strategy is simple_byte
  2725  0014B4  5006               	movf	??_digitalRead+1,w,c
  2726  0014B6  0A00               	xorlw	0	; case 0
  2727  0014B8  A4D8               	btfss	status,2,c
  2728  0014BA  D00D               	goto	i2l187
  2729                           
  2730                           ; Switch size 1, requested type "space"
  2731                           ; Number of cases is 4, Range of values is 0 to 3
  2732                           ; switch strategies available:
  2733                           ; Name         Instructions Cycles
  2734                           ; simple_byte           13     7 (average)
  2735                           ;	Chosen strategy is simple_byte
  2736  0014BC  5005               	movf	??_digitalRead,w,c
  2737  0014BE  0A00               	xorlw	0	; case 0
  2738  0014C0  B4D8               	btfsc	status,2,c
  2739  0014C2  D7B4               	goto	i2l1656
  2740  0014C4  0A01               	xorlw	1	; case 1
  2741  0014C6  B4D8               	btfsc	status,2,c
  2742  0014C8  D7C1               	goto	i2l1660
  2743  0014CA  0A03               	xorlw	3	; case 2
  2744  0014CC  B4D8               	btfsc	status,2,c
  2745  0014CE  D7CE               	goto	i2l1664
  2746  0014D0  0A01               	xorlw	1	; case 3
  2747  0014D2  B4D8               	btfsc	status,2,c
  2748  0014D4  D7DB               	goto	i2l1668
  2749  0014D6                     i2l187:
  2750                           
  2751                           ;iopin.c: 50: return -1;
  2752  0014D6  6801               	setf	?_digitalRead,c
  2753  0014D8  6802               	setf	?_digitalRead+1,c
  2754  0014DA  0012               	return		;funcret
  2755  0014DC                     __end_of_digitalRead:
  2756                           	opt stack 0
  2757                           pclatu	equ	0xFFB
  2758                           pclath	equ	0xFFA
  2759                           tblptru	equ	0xFF8
  2760                           tblptrh	equ	0xFF7
  2761                           tblptrl	equ	0xFF6
  2762                           tablat	equ	0xFF5
  2763                           prodh	equ	0xFF4
  2764                           prodl	equ	0xFF3
  2765                           intcon	equ	0xFF2
  2766                           intcon3	equ	0xFF0
  2767                           postinc0	equ	0xFEE
  2768                           fsr0h	equ	0xFEA
  2769                           fsr0l	equ	0xFE9
  2770                           wreg	equ	0xFE8
  2771                           postdec1	equ	0xFE5
  2772                           fsr1h	equ	0xFE2
  2773                           fsr1l	equ	0xFE1
  2774                           postinc2	equ	0xFDE
  2775                           postdec2	equ	0xFDD
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           pclatu	equ	0xFFB
  2780                           pclath	equ	0xFFA
  2781                           tblptru	equ	0xFF8
  2782                           tblptrh	equ	0xFF7
  2783                           tblptrl	equ	0xFF6
  2784                           tablat	equ	0xFF5
  2785                           prodh	equ	0xFF4
  2786                           prodl	equ	0xFF3
  2787                           intcon	equ	0xFF2
  2788                           intcon3	equ	0xFF0
  2789                           postinc0	equ	0xFEE
  2790                           fsr0h	equ	0xFEA
  2791                           fsr0l	equ	0xFE9
  2792                           wreg	equ	0xFE8
  2793                           postdec1	equ	0xFE5
  2794                           fsr1h	equ	0xFE2
  2795                           fsr1l	equ	0xFE1
  2796                           postinc2	equ	0xFDE
  2797                           postdec2	equ	0xFDD
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802                           	psect	rparam
  2803  0000                     pclatu	equ	0xFFB
  2804                           pclath	equ	0xFFA
  2805                           tblptru	equ	0xFF8
  2806                           tblptrh	equ	0xFF7
  2807                           tblptrl	equ	0xFF6
  2808                           tablat	equ	0xFF5
  2809                           prodh	equ	0xFF4
  2810                           prodl	equ	0xFF3
  2811                           intcon	equ	0xFF2
  2812                           intcon3	equ	0xFF0
  2813                           postinc0	equ	0xFEE
  2814                           fsr0h	equ	0xFEA
  2815                           fsr0l	equ	0xFE9
  2816                           wreg	equ	0xFE8
  2817                           postdec1	equ	0xFE5
  2818                           fsr1h	equ	0xFE2
  2819                           fsr1l	equ	0xFE1
  2820                           postinc2	equ	0xFDE
  2821                           postdec2	equ	0xFDD
  2822                           fsr2h	equ	0xFDA
  2823                           fsr2l	equ	0xFD9
  2824                           status	equ	0xFD8
  2825                           
  2826                           	psect	temp
  2827  000058                     btemp:
  2828                           	opt stack 0
  2829  000058                     	ds	1
  2830  0000                     int$flags	set	btemp
  2831                           pclatu	equ	0xFFB
  2832                           pclath	equ	0xFFA
  2833                           tblptru	equ	0xFF8
  2834                           tblptrh	equ	0xFF7
  2835                           tblptrl	equ	0xFF6
  2836                           tablat	equ	0xFF5
  2837                           prodh	equ	0xFF4
  2838                           prodl	equ	0xFF3
  2839                           intcon	equ	0xFF2
  2840                           intcon3	equ	0xFF0
  2841                           postinc0	equ	0xFEE
  2842                           fsr0h	equ	0xFEA
  2843                           fsr0l	equ	0xFE9
  2844                           wreg	equ	0xFE8
  2845                           postdec1	equ	0xFE5
  2846                           fsr1h	equ	0xFE2
  2847                           fsr1l	equ	0xFE1
  2848                           postinc2	equ	0xFDE
  2849                           postdec2	equ	0xFDD
  2850                           fsr2h	equ	0xFDA
  2851                           fsr2l	equ	0xFD9
  2852                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    32
    Data        4
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     47      87
    BANK0           128      6       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sp__getTime	PTR int  size(2) Largest target is 7
		 -> getTime@time(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_initServo
    _initServo->_digitalWrite
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _service in COMRAM

    _service->_servoInterruptService
    _servoInterruptService->i2_digitalWrite

Critical Paths under _main in BANK0

    _main->_initServo

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2334
                            _initLCD
                          _initServo
                           _pinSetup
 ---------------------------------------------------------------------------------
 (1) _pinSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initServo                                            8     2      6    2244
                                             45 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                       _digitalWrite
                          _initTimer
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _startTimer                                           8     2      6     434
                                             36 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _initTimer                                            4     2      2      86
                                             36 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         9     3      6     752
                                             36 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                             40 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              2     2      0      90
                                             38 COMRAM     2     2      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                             36 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                             15    15      0    2313
                                             21 COMRAM    15    15      0
              _servoInterruptService
                           _setAngle
 ---------------------------------------------------------------------------------
 (5) _setAngle                                             8     2      6     812
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _servoInterruptService                               12    12      0    1368
                                              9 COMRAM    12    12      0
                        _digitalRead
                     i2_digitalWrite
                       i2_startTimer
 ---------------------------------------------------------------------------------
 (6) i2_startTimer                                         8     2      6     258
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) i2_digitalWrite                                       9     3      6     488
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) _digitalRead                                          6     2      4     238
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _lcdInst
       _lcdNibble
   _initServo
     _digitalWrite
     _initTimer
     _startTimer
   _pinSetup

 _service (ROOT)
   _servoInterruptService
     _digitalRead
     i2_digitalWrite
     i2_startTimer
   _setAngle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      6       6       5        4.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2F      57       1       69.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      34        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Mar 11 00:06:52 2017

                            l48 16A4                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000                             l296 170E                             l289 17E4  
                           l298 171A                             l299 1726                    __CFG_CPB$OFF 000000  
                           _PEN 007E2A                    __CFG_CPD$OFF 000000                             _SEN 007E28  
                           u684 14F2                             u685 14EC                             u997 17F0  
                           _pin 0040                             wreg 000FE8                    __CFG_LVP$OFF 000000  
                  __CFG_WDT$OFF 000000                            l1700 1542                            l1702 1548  
                          l1706 1556                            l1722 17B0                            l1708 155C  
                          l1716 17A6                            l1732 17C0                            l1726 17B8  
                          l1690 1520                            l1746 1732                            l1684 150C  
                          l1694 152E                            l1696 1534                            l1688 151A  
                          _EEIF 007D0C                            STR_1 103B                            STR_2 1032  
                          STR_3 1021                            u1007 1824                            u1017 18DC  
                          u1027 18EE                            u1037 16BE                            u1047 16CC  
                          u1057 16F2                            u1067 1700                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            _PEIE 007F96                            _RCEN 007E2B  
                          i2l65 1338                            _RSEN 007E29                            _main 1634  
                          _keys 1001                            _time 0052                            _port 0048  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr2h 000FDA  
                          fsr0l 000FE9                            fsr1l 000FE1                            fsr2l 000FD9  
                          btemp 0058                            prodh 000FF4                            prodl 000FF3  
                          start 000E                   __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000000            __end_ofi2_startTimer 17A4                           ?_main 0001  
                         _ACKEN 007E2C                           _ACKDT 007E2D                           _EEADR 000FA9  
       ??_servoInterruptService 000A                           _T0CON 000FD5                           _T1CON 000FCD  
                         _T3CON 000FB1                           i2l414 11CE                           i2l416 11D2  
                         i2l417 11D6                           i2l418 11DA                           i2l187 14D6  
                         i2l419 1216                           i2l296 175A                           i2l298 1766  
                         i2l299 1772                           _TMR0H 000FD7                           _TMR1H 000FCF  
                         _TMR0L 000FD6                           _TMR3H 000FB3                           _TMR1L 000FCE  
                         _TMR3L 000FB2                           _PORTA 000F80                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTD 000F83                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                   __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
               __end_of_lcdInst 18F8                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
        servoInterruptService@i 0014                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                 __end_of_initLCD 1830                  __CFG_EBTRB$OFF 000000  
                         _angle 0054                           _count 0050                           _pulse 0030  
                         pclath 000FFA                           tablat 000FF5                 __end_of_service 1374  
                         status 000FD8                  __CFG_PBADEN$ON 000000            __end_of_digitalWrite 1588  
               __initialization 1830                    __end_of_main 16A6                    __end_of_keys 1012  
                        ??_main 0030                   __activetblptr 000002            __size_of_digitalRead 00B2  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ADRESH 000FC4                          _EEADRH 000FAA                          _ADRESL 000FC3  
                        _EEDATA 000FA8                          _EECON1 000FA6                          _EECON2 000FA7  
                        _INT1IF 007F80                          i2l1660 144C                          i2l1830 1208  
                        i2l1664 146C                          i2l1656 142C                          i2l1760 15C6  
                        i2l1824 1150                          i2l1816 1098                          i2l1674 14AC  
                        i2l1762 15CC                          i2l1668 148C                          i2l1772 15EE  
                        i2l1756 15B8                          i2l1780 1608                          i2l1828 11DE  
                        i2l1774 15F4                          i2l1766 15DA                          i2l1870 12CC  
                        i2l1862 1286                          i2l1768 15E0                          i2l1778 1602  
                        i2l1794 177E                          i2l1874 12F0                          i2l1866 12A8  
                        i2l1878 1314                          _TMR0IE 007F95                          _TMR0IF 007F92  
                        _TMR1IE 007CE8                          _TMR1IF 007CF0                          _TMR2IF 007CF1  
                        _TMR3IE 007D01                          _TMR3IF 007D09                          _SSPADD 000FC8  
                        _TRISC3 007CA3                          _TRISC4 007CA4                          _SSPBUF 000FC9  
                   initServo@pi 0084                     initServo@po 0082                  __CFG_XINST$OFF 000000  
                __CFG_STVREN$ON 000000                          clear_0 1856                       ??_lcdInst 0027  
              __end_of_pinSetup 18A4                __end_of_setAngle 18D6                       ??_initLCD 0029  
                  __pdataCOMRAM 0054                   setAngle@angle 0003                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                 setAngle@timer 0001                       ??_service 0016                      __accesstop 0080  
       __end_of__initialization 185C                   ___rparam_used 000001           __size_ofi2_startTimer 004C  
          __end_of_happynewyear 1021                  __pcstackCOMRAM 0001              __size_of_lcdNibble 0066  
            i2digitalWrite@port 0001                    i2_startTimer 1758           __size_of_digitalWrite 00AC  
            __size_of_initTimer 0046              __size_of_initServo 00B6      servoInterruptService@flags 000C  
__size_of_servoInterruptService 01D4   __end_of_servoInterruptService 1218               i2startTimer@timer 0001  
                       i2u80_40 104C                         i2u64_44 143C                         i2u64_45 1438  
                       i2u81_40 104E                         i2u65_44 145C                         i2u65_45 1458  
                       i2u82_40 105A                         i2u66_44 147C                         i2u74_44 159E  
                  _digitalWrite 14DC                         i2u66_45 1478                         i2u74_45 1598  
                       i2u83_40 105C                         i2u67_44 149C                         i2u67_45 1498  
                       i2u84_40 1068                         i2u85_40 106A                         i2u86_40 1076  
                       i2u87_40 1078                         i2u88_40 1096                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7         __size_ofi2_digitalWrite 00AC  
                     ?_pinSetup 0001                       ?_setAngle 0001               __end_of_lcdNibble 170C  
                       __Hparam 0000                         __Lparam 0000                    __psmallconst 1000  
                       __pcinit 1830                         __ramtop 1000                         _lcdInst 18D6  
                       __ptext0 1634                         __ptext1 186A                         __ptext2 1374  
                       __ptext3 170C                         __ptext4 17A4                         __ptext5 14DC  
                       __ptext6 17EA                         __ptext7 18D6                         __ptext8 16A6  
                 startTimer@val 0027                         _initLCD 17EA               __end_of_hexpowers 101A  
             __end_of_initTimer 17EA               __end_of_initServo 142A                         _service 0008  
                __pintcode_body 1218            end_of_initialization 185C                   __Lmediumconst 0000  
                       int_func 1218                  digitalRead@pin 0003                      ??_pinSetup 0025  
                    ??_setAngle 0007                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE                   ??_digitalRead 0005  
                     _PORTBbits 000F81                    _happynewyear 101A                      _startTimer 170C  
                 __pidataCOMRAM 18F8             start_initialization 1830             __end_of_digitalRead 14DC  
                initTimer@timer 0025                  initServo@timer 0080                  i2_digitalWrite 1588  
              __CFG_LPT1OSC$OFF 000000                     __pbssCOMRAM 0030                   __pcstackBANK0 0080  
        __end_ofi2_digitalWrite 1634                     ?_startTimer 0025               i2digitalWrite@pin 0003  
             i2digitalWrite@val 0005               __CFG_CCP2MX$PORTC 000000               __size_of_pinSetup 003A  
             __size_of_setAngle 0032                       __pintcode 0008                       _lcdNibble 16A6  
                   _digitalRead 142A                        ?_lcdInst 0001                        ?_initLCD 0001  
                   __smallconst 1000                 startTimer@timer 0025                        ?_service 0001  
                     _hexpowers 1012                       _initTimer 17A4                       _initServo 1374  
               ?i2_digitalWrite 0001           _servoInterruptService 1044                        _LATDbits 000F8C  
              __CFG_WDTPS$32768 000000                      ?_lcdNibble 0001                      service@key 0024  
           __size_of_startTimer 004C                   lcdNibble@data 0026                   lcdNibble@temp 0025  
                    ?_initTimer 0025                      ?_initServo 0080                       copy_data0 1844  
                      __Hrparam 0000                        __Lrparam 0000              __CFG_BOREN$SBORDIS 000000  
              __size_of_lcdInst 0022                __size_of_initLCD 0046          ?_servoInterruptService 0001  
                      __ptext10 18A4                        __ptext11 1044                        __ptext12 1758  
                      __ptext13 1588                        __ptext14 142A                __size_of_service 136C  
               i2startTimer@val 0003                   ?i2_startTimer 0001                   __size_of_main 0072  
                      _pinSetup 186A                        _setAngle 18A4                     ??_lcdNibble 0025  
                      int$flags 0058                      _INTCONbits 000FF2                   ?_digitalWrite 0025  
                   ??_initTimer 0027                     ??_initServo 002E                  ??i2_startTimer 0007  
                  ??_startTimer 002B                 digitalRead@port 0001                        intlevel2 0000  
                   lcdInst@data 0028                    ?_digitalRead 0001              __end_of_startTimer 1758  
              ??i2_digitalWrite 0007                digitalWrite@port 0025                  ??_digitalWrite 002B  
               digitalWrite@pin 0027                 digitalWrite@val 0029  
