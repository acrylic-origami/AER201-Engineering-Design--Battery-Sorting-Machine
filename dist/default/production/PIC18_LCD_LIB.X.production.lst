

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Feb 25 14:59:34 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 1.40
    28                           ; Generated 01/12/2016 GMT
    29                           ; 
    30                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	smallconst
    63  001000                     __psmallconst:
    64                           	opt stack 0
    65  001000  00                 	db	0
    66  001001  31                 	db	49
    67  001002  32                 	db	50
    68  001003  33                 	db	51
    69  001004  41                 	db	65
    70  001005  34                 	db	52
    71  001006  35                 	db	53
    72  001007  36                 	db	54
    73  001008  42                 	db	66
    74  001009  37                 	db	55
    75  00100A  38                 	db	56
    76  00100B  39                 	db	57
    77  00100C  43                 	db	67
    78  00100D  2A                 	db	42
    79  00100E  30                 	db	48
    80  00100F  23                 	db	35
    81  001010  44                 	db	68
    82  001011  00                 	db	0
    83  001012                     __end_of_keys:
    84                           	opt stack 0
    85  001012                     _dpowers:
    86                           	opt stack 0
    87  001012  0001               	dw	1
    88  001014  000A               	dw	10
    89  001016  0064               	dw	100
    90  001018  03E8               	dw	1000
    91  00101A  2710               	dw	10000
    92  00101C                     __end_of_dpowers:
    93                           	opt stack 0
    94  0000                     _ADCON0	set	4034
    95  0000                     _ADCON1	set	4033
    96  0000                     _ADCON2	set	4032
    97  0000                     _ADRESH	set	4036
    98  0000                     _ADRESL	set	4035
    99  0000                     _EEADR	set	4009
   100  0000                     _EEADRH	set	4010
   101  0000                     _EECON1	set	4006
   102  0000                     _EECON2	set	4007
   103  0000                     _EEDATA	set	4008
   104  0000                     _INTCONbits	set	4082
   105  0000                     _LATA	set	3977
   106  0000                     _LATB	set	3978
   107  0000                     _LATC	set	3979
   108  0000                     _LATD	set	3980
   109  0000                     _LATDbits	set	3980
   110  0000                     _LATE	set	3981
   111  0000                     _PORTA	set	3968
   112  0000                     _PORTB	set	3969
   113  0000                     _PORTBbits	set	3969
   114  0000                     _PORTC	set	3970
   115  0000                     _PORTD	set	3971
   116  0000                     _T0CON	set	4053
   117  0000                     _TMR0H	set	4055
   118  0000                     _TMR0L	set	4054
   119  0000                     _TRISA	set	3986
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISC	set	3988
   122  0000                     _TRISD	set	3989
   123  0000                     _TRISE	set	3990
   124  0000                     _EEIF	set	32012
   125  0000                     _PEIE	set	32662
   126  0000                     _TMR0IE	set	32661
   127  0000                     _TMR0IF	set	32658
   128  00101C                     STR_3:
   129  00101C  74                 	db	116	;'t'
   130  00101D  69                 	db	105	;'i'
   131  00101E  6D                 	db	109	;'m'
   132  00101F  65                 	db	101	;'e'
   133  001020  3A                 	db	58	;':'
   134  001021  20                 	db	32
   135  001022  25                 	db	37
   136  001023  64                 	db	100	;'d'
   137  001024  0A                 	db	10
   138  001025  00                 	db	0
   139  001026  30                 	db	48	;'0'
   140  001027  00                 	db	0
   141  001028  31                 	db	49	;'1'
   142  001029  00                 	db	0
   143                           
   144                           ; #config settings
   145  00102A  00                 	db	0	; dummy byte at the end
   146  0000                     
   147                           	psect	cinit
   148  00147C                     __pcinit:
   149                           	opt stack 0
   150  00147C                     start_initialization:
   151                           	opt stack 0
   152  00147C                     __initialization:
   153                           	opt stack 0
   154                           
   155                           ; Clear objects allocated to COMRAM (6 bytes)
   156  00147C  6A39               	clrf	(__pbssCOMRAM+5)& (0+255),c
   157  00147E  6A38               	clrf	(__pbssCOMRAM+4)& (0+255),c
   158  001480  6A37               	clrf	(__pbssCOMRAM+3)& (0+255),c
   159  001482  6A36               	clrf	(__pbssCOMRAM+2)& (0+255),c
   160  001484  6A35               	clrf	(__pbssCOMRAM+1)& (0+255),c
   161  001486  6A34               	clrf	__pbssCOMRAM& (0+255),c
   162  001488                     end_of_initialization:
   163                           	opt stack 0
   164  001488                     __end_of__initialization:
   165                           	opt stack 0
   166  001488  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   167  00148A  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   168  00148C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  00148E  6EF8               	movwf	tblptru,c
   170  001490  0100               	movlb	0
   171  001492  EF15  F009         	goto	_main	;jump to C main() function
   172                           tblptru	equ	0xFF8
   173                           
   174                           	psect	bssCOMRAM
   175  000034                     __pbssCOMRAM:
   176                           	opt stack 0
   177  000034                     _count:
   178                           	opt stack 0
   179  000034                     	ds	4
   180  000038                     _time:
   181                           	opt stack 0
   182  000038                     	ds	2
   183                           tblptru	equ	0xFF8
   184                           
   185                           	psect	cstackCOMRAM
   186  000001                     __pcstackCOMRAM:
   187                           	opt stack 0
   188  000001                     ?___lwdiv:
   189                           	opt stack 0
   190  000001                     i2lcdNibble@temp:
   191                           	opt stack 0
   192  000001                     ___lwdiv@dividend:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x0
   196  000001                     	ds	1
   197  000002                     i2lcdNibble@data:
   198                           	opt stack 0
   199                           
   200                           ; 1 bytes @ 0x1
   201  000002                     	ds	1
   202  000003                     ??i2_lcdInst:
   203  000003                     ___lwdiv@divisor:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x2
   207  000003                     	ds	1
   208  000004                     i2lcdInst@data:
   209                           	opt stack 0
   210                           
   211                           ; 1 bytes @ 0x3
   212  000004                     	ds	1
   213  000005                     putch@data:
   214                           	opt stack 0
   215  000005                     ___lwdiv@quotient:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x4
   219  000005                     	ds	2
   220  000007                     ___lwdiv@counter:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x6
   224  000007                     	ds	1
   225  000008                     ?___lwmod:
   226                           	opt stack 0
   227  000008                     ___lwmod@dividend:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x7
   231  000008                     	ds	2
   232  00000A                     ___lwmod@divisor:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x9
   236  00000A                     	ds	2
   237  00000C                     ___lwmod@counter:
   238                           	opt stack 0
   239                           
   240                           ; 1 bytes @ 0xB
   241  00000C                     	ds	1
   242  00000D                     ?_printf:
   243                           	opt stack 0
   244  00000D                     printf@f:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0xC
   248  00000D                     	ds	4
   249  000011                     ??_printf:
   250                           
   251                           ; 1 bytes @ 0x10
   252  000011                     	ds	1
   253  000012                     printf@ap:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0x11
   257  000012                     	ds	2
   258  000014                     printf@flag:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x13
   262  000014                     	ds	1
   263  000015                     printf@prec:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x14
   267  000015                     	ds	1
   268  000016                     printf@val:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0x15
   272  000016                     	ds	2
   273  000018                     printf@c:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x17
   277  000018                     	ds	1
   278  000019                     ??_lol:
   279                           
   280                           ; 1 bytes @ 0x18
   281  000019                     	ds	14
   282  000027                     lol@time:
   283                           	opt stack 0
   284                           
   285                           ; 4 bytes @ 0x26
   286  000027                     	ds	4
   287  00002B                     lcdNibble@temp:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x2A
   291  00002B                     	ds	1
   292  00002C                     lcdNibble@data:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x2B
   296  00002C                     	ds	1
   297  00002D                     ??_lcdInst:
   298                           
   299                           ; 1 bytes @ 0x2C
   300  00002D                     	ds	1
   301  00002E                     lcdInst@data:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x2D
   305  00002E                     	ds	1
   306  00002F                     ??_initLCD:
   307                           
   308                           ; 1 bytes @ 0x2E
   309  00002F                     	ds	1
   310  000030                     main@time:
   311                           	opt stack 0
   312                           
   313                           ; 4 bytes @ 0x2F
   314  000030                     	ds	4
   315                           tblptru	equ	0xFF8
   316                           
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 30 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  time            4   47[COMRAM] long 
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, status,2, status,0, cstack
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   340 ;;Total ram usage:        4 bytes
   341 ;; Hardware stack levels required when called:    9
   342 ;; This function calls:
   343 ;;		_initLCD
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text0
   350  00122A                     __ptext0:
   351                           	opt stack 0
   352  00122A                     _main:
   353                           	opt stack 22
   354                           
   355                           ;main.c: 33: TRISA = 0xFF;
   356                           
   357                           ;incstack = 0
   358  00122A  6892               	setf	3986,c	;volatile
   359                           
   360                           ;main.c: 34: TRISB = 0xFF;
   361  00122C  6893               	setf	3987,c	;volatile
   362                           
   363                           ;main.c: 35: TRISC = 0xFF;
   364  00122E  6894               	setf	3988,c	;volatile
   365                           
   366                           ;main.c: 36: TRISD = 0x00;
   367  001230  0E00               	movlw	0
   368  001232  6E95               	movwf	3989,c	;volatile
   369                           
   370                           ;main.c: 37: TRISE = 0x00;
   371  001234  0E00               	movlw	0
   372  001236  6E96               	movwf	3990,c	;volatile
   373                           
   374                           ;main.c: 39: LATA = 0x00;
   375  001238  0E00               	movlw	0
   376  00123A  6E89               	movwf	3977,c	;volatile
   377                           
   378                           ;main.c: 40: LATB = 0x00;
   379  00123C  0E00               	movlw	0
   380  00123E  6E8A               	movwf	3978,c	;volatile
   381                           
   382                           ;main.c: 41: LATC = 0x00;
   383  001240  0E00               	movlw	0
   384  001242  6E8B               	movwf	3979,c	;volatile
   385                           
   386                           ;main.c: 42: LATD = 0x00;
   387  001244  0E00               	movlw	0
   388  001246  6E8C               	movwf	3980,c	;volatile
   389                           
   390                           ;main.c: 43: LATE = 0x00;
   391  001248  0E00               	movlw	0
   392  00124A  6E8D               	movwf	3981,c	;volatile
   393                           
   394                           ;main.c: 45: ADCON0 = 0x00;
   395  00124C  0E00               	movlw	0
   396  00124E  6EC2               	movwf	4034,c	;volatile
   397                           
   398                           ;main.c: 46: ADCON1 |= 0x0A;
   399  001250  0E0A               	movlw	10
   400  001252  12C1               	iorwf	4033,f,c	;volatile
   401                           
   402                           ;main.c: 47: ADCON1 |= 0b11<<4;
   403  001254  0E30               	movlw	48
   404  001256  12C1               	iorwf	4033,f,c	;volatile
   405                           
   406                           ;main.c: 50: ADCON2 = 0;
   407  001258  0E00               	movlw	0
   408  00125A  6EC0               	movwf	4032,c	;volatile
   409                           
   410                           ;main.c: 51: ADCON2 |= 0b001;
   411  00125C  80C0               	bsf	4032,0,c	;volatile
   412                           
   413                           ;main.c: 52: ADCON2 |= 0b110<<3;
   414  00125E  0E30               	movlw	48
   415  001260  12C0               	iorwf	4032,f,c	;volatile
   416                           
   417                           ;main.c: 53: ADCON2 |= 1<<7;
   418  001262  8EC0               	bsf	4032,7,c	;volatile
   419                           
   420                           ;main.c: 55: initLCD();
   421  001264  ECC7  F009         	call	_initLCD	;wreg free
   422                           
   423                           ;main.c: 57: TMR0IE = 1;
   424  001268  8AF2               	bsf	intcon,5,c	;volatile
   425                           
   426                           ;main.c: 58: PEIE = 1;
   427  00126A  8CF2               	bsf	intcon,6,c	;volatile
   428                           
   429                           ;main.c: 59: (INTCONbits.GIE = 1);
   430  00126C  8EF2               	bsf	intcon,7,c	;volatile
   431                           
   432                           ;main.c: 61: T0CON = 0b00010000;
   433  00126E  0E10               	movlw	16
   434  001270  6ED5               	movwf	4053,c	;volatile
   435                           
   436                           ;main.c: 62: T0CON |= 1<<3;
   437  001272  86D5               	bsf	4053,3,c	;volatile
   438                           
   439                           ;main.c: 63: long time = (int)(0xffff - (.001)*(9800000)/4);
   440  001274  0E6D               	movlw	109
   441  001276  6E30               	movwf	main@time,c
   442  001278  0EF6               	movlw	246
   443  00127A  6E31               	movwf	main@time+1,c
   444  00127C  0E00               	movlw	0
   445  00127E  6E32               	movwf	main@time+2,c
   446  001280  0E00               	movlw	0
   447  001282  6E33               	movwf	main@time+3,c
   448                           
   449                           ;main.c: 64: TMR0H = time>>8;
   450  001284  C031  FFD7         	movff	main@time+1,4055	;volatile
   451                           
   452                           ;main.c: 65: TMR0L = time & 0xFF;
   453  001288  C030  FFD6         	movff	main@time,4054	;volatile
   454                           
   455                           ;main.c: 66: T0CON |= 1<<7;
   456  00128C  8ED5               	bsf	4053,7,c	;volatile
   457  00128E                     l56:
   458  00128E  D7FF               	goto	l56
   459  001290                     __end_of_main:
   460                           	opt stack 0
   461                           tblptru	equ	0xFF8
   462                           intcon	equ	0xFF2
   463                           
   464 ;; *************** function _initLCD *****************
   465 ;; Defined at:
   466 ;;		line 15 in file "lcd.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;Total ram usage:        1 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    8
   487 ;; This function calls:
   488 ;;		_lcdInst
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text1
   495  00138E                     __ptext1:
   496                           	opt stack 0
   497  00138E                     _initLCD:
   498                           	opt stack 22
   499                           
   500                           ;lcd.c: 17: _delay((unsigned long)((15)*(8000000/4000.0)));
   501                           
   502                           ;incstack = 0
   503  00138E  0E27               	movlw	39
   504  001390  6E2F               	movwf	??_initLCD& (0+255),c
   505  001392  0EF5               	movlw	245
   506  001394                     u607:
   507  001394  2EE8               	decfsz	wreg,f,c
   508  001396  D7FE               	bra	u607
   509  001398  2E2F               	decfsz	??_initLCD& (0+255),f,c
   510  00139A  D7FC               	bra	u607
   511  00139C  F000               	nop	
   512                           
   513                           ;lcd.c: 18: lcdInst(0b00110011);
   514  00139E  0E33               	movlw	51
   515  0013A0  EC0B  F00A         	call	_lcdInst
   516                           
   517                           ;lcd.c: 19: lcdInst(0b00110010);
   518  0013A4  0E32               	movlw	50
   519  0013A6  EC0B  F00A         	call	_lcdInst
   520                           
   521                           ;lcd.c: 20: lcdInst(0b00101000);
   522  0013AA  0E28               	movlw	40
   523  0013AC  EC0B  F00A         	call	_lcdInst
   524                           
   525                           ;lcd.c: 21: lcdInst(0b00001111);
   526  0013B0  0E0F               	movlw	15
   527  0013B2  EC0B  F00A         	call	_lcdInst
   528                           
   529                           ;lcd.c: 22: lcdInst(0b00000110);
   530  0013B6  0E06               	movlw	6
   531  0013B8  EC0B  F00A         	call	_lcdInst
   532                           
   533                           ;lcd.c: 23: lcdInst(0b00000001);
   534  0013BC  0E01               	movlw	1
   535  0013BE  EC0B  F00A         	call	_lcdInst
   536                           
   537                           ;lcd.c: 24: _delay((unsigned long)((15)*(8000000/4000.0)));
   538  0013C2  0E27               	movlw	39
   539  0013C4  6E2F               	movwf	??_initLCD& (0+255),c
   540  0013C6  0EF5               	movlw	245
   541  0013C8                     u617:
   542  0013C8  2EE8               	decfsz	wreg,f,c
   543  0013CA  D7FE               	bra	u617
   544  0013CC  2E2F               	decfsz	??_initLCD& (0+255),f,c
   545  0013CE  D7FC               	bra	u617
   546  0013D0  F000               	nop	
   547  0013D2  0012               	return		;funcret
   548  0013D4                     __end_of_initLCD:
   549                           	opt stack 0
   550                           tblptru	equ	0xFF8
   551                           intcon	equ	0xFF2
   552                           wreg	equ	0xFE8
   553                           
   554 ;; *************** function _lcdInst *****************
   555 ;; Defined at:
   556 ;;		line 27 in file "lcd.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  data            1    wreg     unsigned char 
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  data            1   45[COMRAM] unsigned char 
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;Total ram usage:        2 bytes
   575 ;; Hardware stack levels used:    1
   576 ;; Hardware stack levels required when called:    7
   577 ;; This function calls:
   578 ;;		_lcdNibble
   579 ;; This function is called by:
   580 ;;		_initLCD
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text2
   585  001416                     __ptext2:
   586                           	opt stack 0
   587  001416                     _lcdInst:
   588                           	opt stack 22
   589                           
   590                           ;incstack = 0
   591                           ;lcdInst@data stored from wreg
   592  001416  6E2E               	movwf	lcdInst@data,c
   593                           
   594                           ;lcd.c: 28: LATDbits.LATD2 = 0;
   595  001418  948C               	bcf	3980,2,c	;volatile
   596                           
   597                           ;lcd.c: 29: _delay((unsigned long)((140)*(8000000/4000000.0)));
   598  00141A  0E5D               	movlw	93
   599  00141C                     u627:
   600  00141C  2EE8               	decfsz	wreg,f,c
   601  00141E  D7FE               	bra	u627
   602  001420  F000               	nop	
   603                           
   604                           ;lcd.c: 30: lcdNibble(data);
   605  001422  502E               	movf	lcdInst@data,w,c
   606  001424  EC48  F009         	call	_lcdNibble
   607                           
   608                           ;lcd.c: 31: _delay((unsigned long)((1000)*(8000000/4000000.0)));
   609  001428  0E03               	movlw	3
   610  00142A  6E2D               	movwf	??_lcdInst& (0+255),c
   611  00142C  0E98               	movlw	152
   612  00142E                     u637:
   613  00142E  2EE8               	decfsz	wreg,f,c
   614  001430  D7FE               	bra	u637
   615  001432  2E2D               	decfsz	??_lcdInst& (0+255),f,c
   616  001434  D7FC               	bra	u637
   617  001436  0012               	return		;funcret
   618  001438                     __end_of_lcdInst:
   619                           	opt stack 0
   620                           tblptru	equ	0xFF8
   621                           intcon	equ	0xFF2
   622                           wreg	equ	0xFE8
   623                           
   624 ;; *************** function _lcdNibble *****************
   625 ;; Defined at:
   626 ;;		line 46 in file "lcd.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  data            1    wreg     unsigned char 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  data            1   43[COMRAM] unsigned char 
   631 ;;  temp            1   42[COMRAM] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;Total ram usage:        2 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    6
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_lcdInst
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text3
   656  001290                     __ptext3:
   657                           	opt stack 0
   658  001290                     _lcdNibble:
   659                           	opt stack 22
   660                           
   661                           ;incstack = 0
   662                           ;lcdNibble@data stored from wreg
   663  001290  6E2C               	movwf	lcdNibble@data,c
   664                           
   665                           ;lcd.c: 48: char temp = data & 0xF0;
   666  001292  502C               	movf	lcdNibble@data,w,c
   667  001294  0BF0               	andlw	240
   668  001296  6E2B               	movwf	lcdNibble@temp,c
   669                           
   670                           ;lcd.c: 49: LATD = LATD & 0x0F;
   671  001298  508C               	movf	3980,w,c	;volatile
   672  00129A  0B0F               	andlw	15
   673  00129C  6E8C               	movwf	3980,c	;volatile
   674                           
   675                           ;lcd.c: 50: LATD = temp | LATD;
   676  00129E  502B               	movf	lcdNibble@temp,w,c
   677  0012A0  108C               	iorwf	3980,w,c	;volatile
   678  0012A2  6E8C               	movwf	3980,c	;volatile
   679                           
   680                           ;lcd.c: 52: LATDbits.LATD3 = 0;
   681  0012A4  968C               	bcf	3980,3,c	;volatile
   682                           
   683                           ;lcd.c: 53: _delay((unsigned long)((600)*(8000000/4000000.0)));
   684  0012A6  0EF0               	movlw	240
   685  0012A8                     u647:
   686  0012A8  D000               	nop2	
   687  0012AA  2EE8               	decfsz	wreg,f,c
   688  0012AC  D7FD               	bra	u647
   689                           
   690                           ;lcd.c: 54: LATDbits.LATD3 = 1;
   691  0012AE  868C               	bsf	3980,3,c	;volatile
   692                           
   693                           ;lcd.c: 55: _delay((unsigned long)((600)*(8000000/4000000.0)));
   694  0012B0  0EF0               	movlw	240
   695  0012B2                     u657:
   696  0012B2  D000               	nop2	
   697  0012B4  2EE8               	decfsz	wreg,f,c
   698  0012B6  D7FD               	bra	u657
   699                           
   700                           ;lcd.c: 58: data = data << 4;
   701  0012B8  382C               	swapf	lcdNibble@data,w,c
   702  0012BA  0BF0               	andlw	240
   703  0012BC  6E2C               	movwf	lcdNibble@data,c
   704                           
   705                           ;lcd.c: 60: temp = data & 0xF0;
   706  0012BE  502C               	movf	lcdNibble@data,w,c
   707  0012C0  0BF0               	andlw	240
   708  0012C2  6E2B               	movwf	lcdNibble@temp,c
   709                           
   710                           ;lcd.c: 61: LATD = LATD & 0x0F;
   711  0012C4  508C               	movf	3980,w,c	;volatile
   712  0012C6  0B0F               	andlw	15
   713  0012C8  6E8C               	movwf	3980,c	;volatile
   714                           
   715                           ;lcd.c: 62: LATD = temp | LATD;
   716  0012CA  502B               	movf	lcdNibble@temp,w,c
   717  0012CC  108C               	iorwf	3980,w,c	;volatile
   718  0012CE  6E8C               	movwf	3980,c	;volatile
   719                           
   720                           ;lcd.c: 64: LATDbits.LATD3 = 0;
   721  0012D0  968C               	bcf	3980,3,c	;volatile
   722                           
   723                           ;lcd.c: 65: _delay((unsigned long)((600)*(8000000/4000000.0)));
   724  0012D2  0EF0               	movlw	240
   725  0012D4                     u667:
   726  0012D4  D000               	nop2	
   727  0012D6  2EE8               	decfsz	wreg,f,c
   728  0012D8  D7FD               	bra	u667
   729                           
   730                           ;lcd.c: 66: LATDbits.LATD3 = 1;
   731  0012DA  868C               	bsf	3980,3,c	;volatile
   732                           
   733                           ;lcd.c: 67: _delay((unsigned long)((600)*(8000000/4000000.0)));
   734  0012DC  0EF0               	movlw	240
   735  0012DE                     u677:
   736  0012DE  D000               	nop2	
   737  0012E0  2EE8               	decfsz	wreg,f,c
   738  0012E2  D7FD               	bra	u677
   739  0012E4  0012               	return		;funcret
   740  0012E6                     __end_of_lcdNibble:
   741                           	opt stack 0
   742                           tblptru	equ	0xFF8
   743                           intcon	equ	0xFF2
   744                           wreg	equ	0xFE8
   745                           
   746 ;; *************** function _lol *****************
   747 ;; Defined at:
   748 ;;		line 75 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  time            4   38[COMRAM] long 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:       18 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    5
   769 ;; This function calls:
   770 ;;		_lcdClear
   771 ;;		_printf
   772 ;; This function is called by:
   773 ;;		Interrupt level 2
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	intcode
   778  000008                     __pintcode:
   779                           	opt stack 0
   780  000008                     _lol:
   781                           	opt stack 22
   782                           
   783                           ;incstack = 0
   784  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   785  00000A  EDA5  F008         	call	int_func,f	;refresh shadow registers
   786                           tblptru	equ	0xFF8
   787                           intcon	equ	0xFF2
   788                           wreg	equ	0xFE8
   789                           
   790                           	psect	intcode_body
   791  00114A                     __pintcode_body:
   792                           	opt stack 22
   793  00114A                     int_func:
   794                           	opt stack 22
   795  00114A  0006               	pop		; remove dummy address from shadow register refresh
   796  00114C  CFFA F019          	movff	pclath,??_lol
   797  001150  CFFB F01A          	movff	pclatu,??_lol+1
   798  001154  CFE9 F01B          	movff	fsr0l,??_lol+2
   799  001158  CFEA F01C          	movff	fsr0h,??_lol+3
   800  00115C  CFE1 F01D          	movff	fsr1l,??_lol+4
   801  001160  CFE2 F01E          	movff	fsr1h,??_lol+5
   802  001164  CFD9 F01F          	movff	fsr2l,??_lol+6
   803  001168  CFDA F020          	movff	fsr2h,??_lol+7
   804  00116C  CFF3 F021          	movff	prodl,??_lol+8
   805  001170  CFF4 F022          	movff	prodh,??_lol+9
   806  001174  CFF6 F023          	movff	tblptrl,??_lol+10
   807  001178  CFF7 F024          	movff	tblptrh,??_lol+11
   808  00117C  CFF8 F025          	movff	tblptru,??_lol+12
   809  001180  CFF5 F026          	movff	tablat,??_lol+13
   810                           
   811                           ;main.c: 76: if(TMR0IF){
   812  001184  A4F2               	btfss	intcon,2,c	;volatile
   813  001186  D033               	goto	i2l68
   814                           
   815                           ;main.c: 78: TMR0IF = 0;
   816  001188  94F2               	bcf	intcon,2,c	;volatile
   817                           
   818                           ;main.c: 79: count++;
   819  00118A  0E01               	movlw	1
   820  00118C  2634               	addwf	_count,f,c
   821  00118E  0E00               	movlw	0
   822  001190  2235               	addwfc	_count+1,f,c
   823  001192  2236               	addwfc	_count+2,f,c
   824  001194  2237               	addwfc	_count+3,f,c
   825                           
   826                           ;main.c: 81: if(count == 1000){
   827  001196  0EE8               	movlw	232
   828  001198  1834               	xorwf	_count,w,c
   829  00119A  E11C               	bnz	i2l1436
   830  00119C  0E03               	movlw	3
   831  00119E  1835               	xorwf	_count+1,w,c
   832  0011A0  1036               	iorwf	_count+2,w,c
   833  0011A2  1037               	iorwf	_count+3,w,c
   834  0011A4  A4D8               	btfss	status,2,c
   835  0011A6  D016               	goto	i2l1436
   836                           
   837                           ;main.c: 82: lcdClear();
   838  0011A8  EC4F  F00A         	call	_lcdClear	;wreg free
   839                           
   840                           ;main.c: 83: printf("time: %d\n",++time);
   841  0011AC  0E1C               	movlw	low STR_3
   842  0011AE  6E0D               	movwf	printf@f,c
   843  0011B0  0E10               	movlw	high STR_3
   844  0011B2  6E0E               	movwf	printf@f+1,c
   845  0011B4  4A38               	infsnz	_time,f,c
   846  0011B6  2A39               	incf	_time+1,f,c
   847  0011B8  C038  F00F         	movff	_time,?_printf+2
   848  0011BC  C039  F010         	movff	_time+1,?_printf+3
   849  0011C0  EC16  F008         	call	_printf	;wreg free
   850                           
   851                           ;main.c: 84: count = 0;
   852  0011C4  0E00               	movlw	0
   853  0011C6  6E34               	movwf	_count,c
   854  0011C8  0E00               	movlw	0
   855  0011CA  6E35               	movwf	_count+1,c
   856  0011CC  0E00               	movlw	0
   857  0011CE  6E36               	movwf	_count+2,c
   858  0011D0  0E00               	movlw	0
   859  0011D2  6E37               	movwf	_count+3,c
   860  0011D4                     i2l1436:
   861                           
   862                           ;main.c: 85: }
   863                           ;main.c: 89: long time = (int)(0xffff - (.001)*(9000000)/4);
   864  0011D4  0E35               	movlw	53
   865  0011D6  6E27               	movwf	lol@time,c
   866  0011D8  0EF7               	movlw	247
   867  0011DA  6E28               	movwf	lol@time+1,c
   868  0011DC  0E00               	movlw	0
   869  0011DE  6E29               	movwf	lol@time+2,c
   870  0011E0  0E00               	movlw	0
   871  0011E2  6E2A               	movwf	lol@time+3,c
   872                           
   873                           ;main.c: 90: TMR0H = time>>8;
   874  0011E4  C028  FFD7         	movff	lol@time+1,4055	;volatile
   875                           
   876                           ;main.c: 91: TMR0L = time & 0xFF;
   877  0011E8  C027  FFD6         	movff	lol@time,4054	;volatile
   878                           
   879                           ;main.c: 92: T0CON |= 1<<7;
   880  0011EC  8ED5               	bsf	4053,7,c	;volatile
   881  0011EE                     i2l68:
   882  0011EE  C026  FFF5         	movff	??_lol+13,tablat
   883  0011F2  C025  FFF8         	movff	??_lol+12,tblptru
   884  0011F6  C024  FFF7         	movff	??_lol+11,tblptrh
   885  0011FA  C023  FFF6         	movff	??_lol+10,tblptrl
   886  0011FE  C022  FFF4         	movff	??_lol+9,prodh
   887  001202  C021  FFF3         	movff	??_lol+8,prodl
   888  001206  C020  FFDA         	movff	??_lol+7,fsr2h
   889  00120A  C01F  FFD9         	movff	??_lol+6,fsr2l
   890  00120E  C01E  FFE2         	movff	??_lol+5,fsr1h
   891  001212  C01D  FFE1         	movff	??_lol+4,fsr1l
   892  001216  C01C  FFEA         	movff	??_lol+3,fsr0h
   893  00121A  C01B  FFE9         	movff	??_lol+2,fsr0l
   894  00121E  C01A  FFFB         	movff	??_lol+1,pclatu
   895  001222  C019  FFFA         	movff	??_lol,pclath
   896  001226  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   897  001228  0011               	retfie		f
   898  00122A                     __end_of_lol:
   899                           	opt stack 0
   900                           pclatu	equ	0xFFB
   901                           pclath	equ	0xFFA
   902                           tblptru	equ	0xFF8
   903                           tblptrh	equ	0xFF7
   904                           tblptrl	equ	0xFF6
   905                           tablat	equ	0xFF5
   906                           prodh	equ	0xFF4
   907                           prodl	equ	0xFF3
   908                           intcon	equ	0xFF2
   909                           fsr0h	equ	0xFEA
   910                           fsr0l	equ	0xFE9
   911                           wreg	equ	0xFE8
   912                           fsr1h	equ	0xFE2
   913                           fsr1l	equ	0xFE1
   914                           fsr2h	equ	0xFDA
   915                           fsr2l	equ	0xFD9
   916                           status	equ	0xFD8
   917                           
   918 ;; *************** function _printf *****************
   919 ;; Defined at:
   920 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  f               2   12[COMRAM] PTR const unsigned char 
   923 ;;		 -> STR_3(10), STR_2(2), STR_1(2), 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  tmpval          4    0        struct .
   926 ;;  cp              3    0        PTR const unsigned char 
   927 ;;  val             2   21[COMRAM] unsigned int 
   928 ;;  ap              2   17[COMRAM] PTR void [1]
   929 ;;		 -> ?_printf(2), 
   930 ;;  len             2    0        unsigned int 
   931 ;;  c               1   23[COMRAM] char 
   932 ;;  prec            1   20[COMRAM] char 
   933 ;;  flag            1   19[COMRAM] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  2   12[COMRAM] int 
   936 ;; Registers used:
   937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;Total ram usage:       12 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    4
   950 ;; This function calls:
   951 ;;		___lwdiv
   952 ;;		___lwmod
   953 ;;		_putch
   954 ;; This function is called by:
   955 ;;		_lol
   956 ;;		_printb
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text5
   961  00102C                     __ptext5:
   962                           	opt stack 0
   963  00102C                     _printf:
   964                           	opt stack 22
   965                           
   966                           ;doprnt.c: 466: va_list ap;
   967                           ;doprnt.c: 499: signed char c;
   968                           ;doprnt.c: 506: signed char prec;
   969                           ;doprnt.c: 508: unsigned char flag;
   970                           ;doprnt.c: 523: union {
   971                           ;doprnt.c: 524: unsigned long vd;
   972                           ;doprnt.c: 525: double integ;
   973                           ;doprnt.c: 526: } tmpval;
   974                           ;doprnt.c: 528: unsigned int val;
   975                           ;doprnt.c: 529: unsigned len;
   976                           ;doprnt.c: 530: const char * cp;
   977                           ;doprnt.c: 533: *ap = __va_start();
   978                           
   979                           ;incstack = 0
   980  00102C  0E0F               	movlw	low (?_printf+2)
   981  00102E  6E12               	movwf	printf@ap,c
   982  001030  0E00               	movlw	high (?_printf+2)
   983  001032  6E13               	movwf	printf@ap+1,c
   984                           
   985                           ;doprnt.c: 536: while(c = *f++) {
   986  001034  D07D               	goto	i2l1404
   987  001036                     i2l1358:
   988                           
   989                           ;doprnt.c: 538: if(c != '%')
   990  001036  0E25               	movlw	37
   991  001038  1818               	xorwf	printf@c,w,c
   992  00103A  B4D8               	btfsc	status,2,c
   993  00103C  D004               	goto	i2l1362
   994                           
   995                           ;doprnt.c: 540: {
   996                           ;doprnt.c: 541: (putch(c) );
   997  00103E  5018               	movf	printf@c,w,c
   998  001040  EC1C  F00A         	call	_putch
   999                           
  1000                           ;doprnt.c: 542: continue;
  1001  001044  D075               	goto	i2l1404
  1002  001046                     i2l1362:
  1003                           
  1004                           ;doprnt.c: 543: }
  1005                           ;doprnt.c: 548: flag = 0;
  1006  001046  0E00               	movlw	0
  1007  001048  6E14               	movwf	printf@flag,c
  1008                           
  1009                           ;doprnt.c: 822: }
  1010                           
  1011                           ;doprnt.c: 813: continue;
  1012                           
  1013                           ;doprnt.c: 802: default:
  1014                           
  1015                           ;doprnt.c: 698: case 'i':
  1016                           ;doprnt.c: 699: break;
  1017                           
  1018                           ;doprnt.c: 697: case 'd':
  1019                           
  1020                           ;doprnt.c: 638: goto alldone;
  1021                           
  1022                           ;doprnt.c: 637: case 0:
  1023                           
  1024                           ;doprnt.c: 635: switch(c = *f++) {
  1025  00104A  C00D  FFF6         	movff	printf@f,tblptrl
  1026  00104E  C00E  FFF7         	movff	printf@f+1,tblptrh
  1027  001052  4A0D               	infsnz	printf@f,f,c
  1028  001054  2A0E               	incf	printf@f+1,f,c
  1029  001056                     	if	0	;tblptru may be non-zero
  1030  001056                     	endif
  1031  001056                     	if	0	;tblptru may be non-zero
  1032  001056                     	endif
  1033  001056  0008               	tblrd		*
  1034  001058  CFF5 F018          	movff	tablat,printf@c
  1035  00105C  5018               	movf	printf@c,w,c
  1036                           
  1037                           ; Switch size 1, requested type "space"
  1038                           ; Number of cases is 3, Range of values is 0 to 105
  1039                           ; switch strategies available:
  1040                           ; Name         Instructions Cycles
  1041                           ; simple_byte           10     6 (average)
  1042                           ;	Chosen strategy is simple_byte
  1043  00105E  0A00               	xorlw	0	; case 0
  1044  001060  B4D8               	btfsc	status,2,c
  1045  001062  0012               	return	
  1046  001064  0A64               	xorlw	100	; case 100
  1047  001066  B4D8               	btfsc	status,2,c
  1048  001068  D003               	goto	i2l1368
  1049  00106A  0A0D               	xorlw	13	; case 105
  1050  00106C  A4D8               	btfss	status,2,c
  1051  00106E  D060               	goto	i2l1404
  1052  001070                     i2l1368:
  1053                           
  1054                           ;doprnt.c: 1253: {
  1055                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1056  001070  C012  FFD9         	movff	printf@ap,fsr2l
  1057  001074  C013  FFDA         	movff	printf@ap+1,fsr2h
  1058  001078  CFDE F016          	movff	postinc2,printf@val
  1059  00107C  CFDD F017          	movff	postdec2,printf@val+1
  1060  001080  0E02               	movlw	2
  1061  001082  2612               	addwf	printf@ap,f,c
  1062  001084  0E00               	movlw	0
  1063  001086  2213               	addwfc	printf@ap+1,f,c
  1064                           
  1065                           ;doprnt.c: 1261: if((int)val < 0) {
  1066  001088  AE17               	btfss	printf@val+1,7,c
  1067  00108A  D006               	goto	i2l1378
  1068                           
  1069                           ;doprnt.c: 1262: flag |= 0x03;
  1070  00108C  0E03               	movlw	3
  1071  00108E  1214               	iorwf	printf@flag,f,c
  1072                           
  1073                           ;doprnt.c: 1263: val = -val;
  1074  001090  6C16               	negf	printf@val,c
  1075  001092  1E17               	comf	printf@val+1,f,c
  1076  001094  B0D8               	btfsc	status,0,c
  1077  001096  2A17               	incf	printf@val+1,f,c
  1078  001098                     i2l1378:
  1079                           
  1080                           ;doprnt.c: 1264: }
  1081                           ;doprnt.c: 1266: }
  1082                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1083  001098  0E01               	movlw	1
  1084  00109A  6E18               	movwf	printf@c,c
  1085  00109C                     i2l1380:
  1086  00109C  0E05               	movlw	5
  1087  00109E  1818               	xorwf	printf@c,w,c
  1088  0010A0  B4D8               	btfsc	status,2,c
  1089  0010A2  D012               	goto	i2l1392
  1090                           
  1091                           ;doprnt.c: 1306: if(val < dpowers[c])
  1092  0010A4  5018               	movf	printf@c,w,c
  1093  0010A6  0D02               	mullw	2
  1094  0010A8  0E12               	movlw	low _dpowers
  1095  0010AA  24F3               	addwf	prodl,w,c
  1096  0010AC  6EF6               	movwf	tblptrl,c
  1097  0010AE  0E10               	movlw	high _dpowers
  1098  0010B0  20F4               	addwfc	prodh,w,c
  1099  0010B2  6EF7               	movwf	tblptrh,c
  1100  0010B4                     	if	0	;There are less than 3 active tblptr bytes
  1101  0010B4                     	endif
  1102  0010B4  0009               	tblrd		*+
  1103  0010B6  50F5               	movf	tablat,w,c
  1104  0010B8  5C16               	subwf	printf@val,w,c
  1105  0010BA  0009               	tblrd		*+
  1106  0010BC  50F5               	movf	tablat,w,c
  1107  0010BE  5817               	subwfb	printf@val+1,w,c
  1108  0010C0  A0D8               	btfss	status,0,c
  1109  0010C2  D002               	goto	i2l1392
  1110                           
  1111                           ;doprnt.c: 1307: break;
  1112  0010C4  2A18               	incf	printf@c,f,c
  1113  0010C6  D7EA               	goto	i2l1380
  1114  0010C8                     i2l1392:
  1115                           
  1116                           ;doprnt.c: 1422: {
  1117                           ;doprnt.c: 1438: if(flag & 0x03)
  1118  0010C8  C014  F011         	movff	printf@flag,??_printf
  1119  0010CC  0E03               	movlw	3
  1120  0010CE  1611               	andwf	??_printf,f,c
  1121  0010D0  B4D8               	btfsc	status,2,c
  1122  0010D2  D003               	goto	i2l1396
  1123                           
  1124                           ;doprnt.c: 1439: (putch('-') );
  1125  0010D4  0E2D               	movlw	45
  1126  0010D6  EC1C  F00A         	call	_putch
  1127  0010DA                     i2l1396:
  1128                           
  1129                           ;doprnt.c: 1469: }
  1130                           ;doprnt.c: 1472: prec = c;
  1131  0010DA  C018  F015         	movff	printf@c,printf@prec
  1132                           
  1133                           ;doprnt.c: 1474: while(prec--) {
  1134  0010DE  D024               	goto	i2l1402
  1135  0010E0                     i2l1398:
  1136                           
  1137                           ;doprnt.c: 1478: {
  1138                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1139  0010E0  5015               	movf	printf@prec,w,c
  1140  0010E2  0D02               	mullw	2
  1141  0010E4  0E12               	movlw	low _dpowers
  1142  0010E6  24F3               	addwf	prodl,w,c
  1143  0010E8  6EF6               	movwf	tblptrl,c
  1144  0010EA  0E10               	movlw	high _dpowers
  1145  0010EC  20F4               	addwfc	prodh,w,c
  1146  0010EE  6EF7               	movwf	tblptrh,c
  1147  0010F0                     	if	0	;There are less than 3 active tblptr bytes
  1148  0010F0                     	endif
  1149  0010F0  0009               	tblrd		*+
  1150  0010F2  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1151  0010F6  000A               	tblrd		*-
  1152  0010F8  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1153  0010FC  C016  F001         	movff	printf@val,___lwdiv@dividend
  1154  001100  C017  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1155  001104  EC9E  F009         	call	___lwdiv	;wreg free
  1156  001108  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1157  00110C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1158  001110  0E00               	movlw	0
  1159  001112  6E0B               	movwf	___lwmod@divisor+1,c
  1160  001114  0E0A               	movlw	10
  1161  001116  6E0A               	movwf	___lwmod@divisor,c
  1162  001118  ECEA  F009         	call	___lwmod	;wreg free
  1163  00111C  5008               	movf	?___lwmod,w,c
  1164  00111E  0F30               	addlw	48
  1165  001120  6E18               	movwf	printf@c,c
  1166                           
  1167                           ;doprnt.c: 1523: }
  1168                           ;doprnt.c: 1524: (putch(c) );
  1169  001122  5018               	movf	printf@c,w,c
  1170  001124  EC1C  F00A         	call	_putch
  1171  001128                     i2l1402:
  1172  001128  0615               	decf	printf@prec,f,c
  1173  00112A  2815               	incf	printf@prec,w,c
  1174  00112C  A4D8               	btfss	status,2,c
  1175  00112E  D7D8               	goto	i2l1398
  1176  001130                     i2l1404:
  1177  001130  C00D  FFF6         	movff	printf@f,tblptrl
  1178  001134  C00E  FFF7         	movff	printf@f+1,tblptrh
  1179  001138  4A0D               	infsnz	printf@f,f,c
  1180  00113A  2A0E               	incf	printf@f+1,f,c
  1181  00113C                     	if	0	;tblptru may be non-zero
  1182  00113C                     	endif
  1183  00113C                     	if	0	;tblptru may be non-zero
  1184  00113C                     	endif
  1185  00113C  0008               	tblrd		*
  1186  00113E  CFF5 F018          	movff	tablat,printf@c
  1187  001142  5018               	movf	printf@c,w,c
  1188  001144  B4D8               	btfsc	status,2,c
  1189  001146  0012               	return	
  1190  001148  D776               	goto	i2l1358
  1191  00114A                     __end_of_printf:
  1192                           	opt stack 0
  1193                           pclatu	equ	0xFFB
  1194                           pclath	equ	0xFFA
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           prodh	equ	0xFF4
  1200                           prodl	equ	0xFF3
  1201                           intcon	equ	0xFF2
  1202                           fsr0h	equ	0xFEA
  1203                           fsr0l	equ	0xFE9
  1204                           wreg	equ	0xFE8
  1205                           fsr1h	equ	0xFE2
  1206                           fsr1l	equ	0xFE1
  1207                           postinc2	equ	0xFDE
  1208                           postdec2	equ	0xFDD
  1209                           fsr2h	equ	0xFDA
  1210                           fsr2l	equ	0xFD9
  1211                           status	equ	0xFD8
  1212                           
  1213 ;; *************** function _putch *****************
  1214 ;; Defined at:
  1215 ;;		line 35 in file "lcd.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  data            1    wreg     unsigned char 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  data            1    4[COMRAM] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;Total ram usage:        1 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    3
  1236 ;; This function calls:
  1237 ;;		_lcdNewline
  1238 ;;		i2_lcdNibble
  1239 ;; This function is called by:
  1240 ;;		_printf
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text6
  1245  001438                     __ptext6:
  1246                           	opt stack 0
  1247  001438                     _putch:
  1248                           	opt stack 22
  1249                           
  1250                           ;incstack = 0
  1251                           ;putch@data stored from wreg
  1252  001438  6E05               	movwf	putch@data,c
  1253                           
  1254                           ;lcd.c: 36: if(data == '\n')lcdNewline();
  1255  00143A  0E0A               	movlw	10
  1256  00143C  1805               	xorwf	putch@data,w,c
  1257  00143E  A4D8               	btfss	status,2,c
  1258  001440  D003               	goto	i2l89
  1259  001442  EC4B  F00A         	call	_lcdNewline	;wreg free
  1260  001446  0012               	return	
  1261  001448                     i2l89:
  1262                           
  1263                           ;lcd.c: 37: else
  1264                           ;lcd.c: 38: {
  1265                           ;lcd.c: 39: LATDbits.LATD2 = 1;
  1266  001448  848C               	bsf	3980,2,c	;volatile
  1267                           
  1268                           ;lcd.c: 40: _delay((unsigned long)((140)*(8000000/4000000.0)));
  1269  00144A  0E5D               	movlw	93
  1270  00144C                     i2u68_47:
  1271  00144C  2EE8               	decfsz	wreg,f,c
  1272  00144E  D7FE               	bra	i2u68_47
  1273  001450  F000               	nop	
  1274                           
  1275                           ;lcd.c: 41: lcdNibble(data);
  1276  001452  5005               	movf	putch@data,w,c
  1277  001454  EC73  F009         	call	i2_lcdNibble
  1278  001458  0012               	return	
  1279  00145A                     __end_of_putch:
  1280                           	opt stack 0
  1281                           pclatu	equ	0xFFB
  1282                           pclath	equ	0xFFA
  1283                           tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           prodh	equ	0xFF4
  1288                           prodl	equ	0xFF3
  1289                           intcon	equ	0xFF2
  1290                           fsr0h	equ	0xFEA
  1291                           fsr0l	equ	0xFE9
  1292                           wreg	equ	0xFE8
  1293                           fsr1h	equ	0xFE2
  1294                           fsr1l	equ	0xFE1
  1295                           postinc2	equ	0xFDE
  1296                           postdec2	equ	0xFDD
  1297                           fsr2h	equ	0xFDA
  1298                           fsr2l	equ	0xFD9
  1299                           status	equ	0xFD8
  1300                           
  1301 ;; *************** function _lcdNewline *****************
  1302 ;; Defined at:
  1303 ;;		line 74 in file "lcd.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;Total ram usage:        0 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    2
  1324 ;; This function calls:
  1325 ;;		i2_lcdInst
  1326 ;; This function is called by:
  1327 ;;		_putch
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text7
  1332  001496                     __ptext7:
  1333                           	opt stack 0
  1334  001496                     _lcdNewline:
  1335                           	opt stack 22
  1336                           
  1337                           ;lcd.c: 75: lcdInst(0b11000000);
  1338                           
  1339                           ;incstack = 0
  1340  001496  0EC0               	movlw	192
  1341  001498  EC2D  F00A         	call	i2_lcdInst
  1342  00149C  0012               	return		;funcret
  1343  00149E                     __end_of_lcdNewline:
  1344                           	opt stack 0
  1345                           pclatu	equ	0xFFB
  1346                           pclath	equ	0xFFA
  1347                           tblptru	equ	0xFF8
  1348                           tblptrh	equ	0xFF7
  1349                           tblptrl	equ	0xFF6
  1350                           tablat	equ	0xFF5
  1351                           prodh	equ	0xFF4
  1352                           prodl	equ	0xFF3
  1353                           intcon	equ	0xFF2
  1354                           fsr0h	equ	0xFEA
  1355                           fsr0l	equ	0xFE9
  1356                           wreg	equ	0xFE8
  1357                           fsr1h	equ	0xFE2
  1358                           fsr1l	equ	0xFE1
  1359                           postinc2	equ	0xFDE
  1360                           postdec2	equ	0xFDD
  1361                           fsr2h	equ	0xFDA
  1362                           fsr2l	equ	0xFD9
  1363                           status	equ	0xFD8
  1364                           
  1365 ;; *************** function ___lwmod *****************
  1366 ;; Defined at:
  1367 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  dividend        2    7[COMRAM] unsigned int 
  1370 ;;  divisor         2    9[COMRAM] unsigned int 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  counter         1   11[COMRAM] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2    7[COMRAM] unsigned int 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;Total ram usage:        5 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_printf
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text8
  1396  0013D4                     __ptext8:
  1397                           	opt stack 0
  1398  0013D4                     ___lwmod:
  1399                           	opt stack 25
  1400                           
  1401                           ;incstack = 0
  1402  0013D4  500A               	movf	___lwmod@divisor,w,c
  1403  0013D6  100B               	iorwf	___lwmod@divisor+1,w,c
  1404  0013D8  B4D8               	btfsc	status,2,c
  1405  0013DA  D018               	goto	i2l683
  1406  0013DC  0E01               	movlw	1
  1407  0013DE  6E0C               	movwf	___lwmod@counter,c
  1408  0013E0  D004               	goto	i2l1346
  1409  0013E2                     i2l1344:
  1410  0013E2  90D8               	bcf	status,0,c
  1411  0013E4  360A               	rlcf	___lwmod@divisor,f,c
  1412  0013E6  360B               	rlcf	___lwmod@divisor+1,f,c
  1413  0013E8  2A0C               	incf	___lwmod@counter,f,c
  1414  0013EA                     i2l1346:
  1415  0013EA  AE0B               	btfss	___lwmod@divisor+1,7,c
  1416  0013EC  D7FA               	goto	i2l1344
  1417  0013EE                     i2l1348:
  1418  0013EE  500A               	movf	___lwmod@divisor,w,c
  1419  0013F0  5C08               	subwf	___lwmod@dividend,w,c
  1420  0013F2  500B               	movf	___lwmod@divisor+1,w,c
  1421  0013F4  5809               	subwfb	___lwmod@dividend+1,w,c
  1422  0013F6  A0D8               	btfss	status,0,c
  1423  0013F8  D004               	goto	i2l1352
  1424  0013FA  500A               	movf	___lwmod@divisor,w,c
  1425  0013FC  5E08               	subwf	___lwmod@dividend,f,c
  1426  0013FE  500B               	movf	___lwmod@divisor+1,w,c
  1427  001400  5A09               	subwfb	___lwmod@dividend+1,f,c
  1428  001402                     i2l1352:
  1429  001402  90D8               	bcf	status,0,c
  1430  001404  320B               	rrcf	___lwmod@divisor+1,f,c
  1431  001406  320A               	rrcf	___lwmod@divisor,f,c
  1432  001408  2E0C               	decfsz	___lwmod@counter,f,c
  1433  00140A  D7F1               	goto	i2l1348
  1434  00140C                     i2l683:
  1435  00140C  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1436  001410  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1437  001414  0012               	return		;funcret
  1438  001416                     __end_of___lwmod:
  1439                           	opt stack 0
  1440                           pclatu	equ	0xFFB
  1441                           pclath	equ	0xFFA
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           prodh	equ	0xFF4
  1447                           prodl	equ	0xFF3
  1448                           intcon	equ	0xFF2
  1449                           fsr0h	equ	0xFEA
  1450                           fsr0l	equ	0xFE9
  1451                           wreg	equ	0xFE8
  1452                           fsr1h	equ	0xFE2
  1453                           fsr1l	equ	0xFE1
  1454                           postinc2	equ	0xFDE
  1455                           postdec2	equ	0xFDD
  1456                           fsr2h	equ	0xFDA
  1457                           fsr2l	equ	0xFD9
  1458                           status	equ	0xFD8
  1459                           
  1460 ;; *************** function ___lwdiv *****************
  1461 ;; Defined at:
  1462 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  dividend        2    0[COMRAM] unsigned int 
  1465 ;;  divisor         2    2[COMRAM] unsigned int 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  quotient        2    4[COMRAM] unsigned int 
  1468 ;;  counter         1    6[COMRAM] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  2    0[COMRAM] unsigned int 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;Total ram usage:        7 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_printf
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text9
  1492  00133C                     __ptext9:
  1493                           	opt stack 0
  1494  00133C                     ___lwdiv:
  1495                           	opt stack 25
  1496                           
  1497                           ;incstack = 0
  1498  00133C  0E00               	movlw	0
  1499  00133E  6E06               	movwf	___lwdiv@quotient+1,c
  1500  001340  0E00               	movlw	0
  1501  001342  6E05               	movwf	___lwdiv@quotient,c
  1502  001344  5003               	movf	___lwdiv@divisor,w,c
  1503  001346  1004               	iorwf	___lwdiv@divisor+1,w,c
  1504  001348  B4D8               	btfsc	status,2,c
  1505  00134A  D01C               	goto	i2l673
  1506  00134C  0E01               	movlw	1
  1507  00134E  6E07               	movwf	___lwdiv@counter,c
  1508  001350  D004               	goto	i2l1326
  1509  001352                     i2l1324:
  1510  001352  90D8               	bcf	status,0,c
  1511  001354  3603               	rlcf	___lwdiv@divisor,f,c
  1512  001356  3604               	rlcf	___lwdiv@divisor+1,f,c
  1513  001358  2A07               	incf	___lwdiv@counter,f,c
  1514  00135A                     i2l1326:
  1515  00135A  AE04               	btfss	___lwdiv@divisor+1,7,c
  1516  00135C  D7FA               	goto	i2l1324
  1517  00135E                     i2l1328:
  1518  00135E  90D8               	bcf	status,0,c
  1519  001360  3605               	rlcf	___lwdiv@quotient,f,c
  1520  001362  3606               	rlcf	___lwdiv@quotient+1,f,c
  1521  001364  5003               	movf	___lwdiv@divisor,w,c
  1522  001366  5C01               	subwf	___lwdiv@dividend,w,c
  1523  001368  5004               	movf	___lwdiv@divisor+1,w,c
  1524  00136A  5802               	subwfb	___lwdiv@dividend+1,w,c
  1525  00136C  A0D8               	btfss	status,0,c
  1526  00136E  D005               	goto	i2l1336
  1527  001370  5003               	movf	___lwdiv@divisor,w,c
  1528  001372  5E01               	subwf	___lwdiv@dividend,f,c
  1529  001374  5004               	movf	___lwdiv@divisor+1,w,c
  1530  001376  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1531  001378  8005               	bsf	___lwdiv@quotient,0,c
  1532  00137A                     i2l1336:
  1533  00137A  90D8               	bcf	status,0,c
  1534  00137C  3204               	rrcf	___lwdiv@divisor+1,f,c
  1535  00137E  3203               	rrcf	___lwdiv@divisor,f,c
  1536  001380  2E07               	decfsz	___lwdiv@counter,f,c
  1537  001382  D7ED               	goto	i2l1328
  1538  001384                     i2l673:
  1539  001384  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1540  001388  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1541  00138C  0012               	return		;funcret
  1542  00138E                     __end_of___lwdiv:
  1543                           	opt stack 0
  1544                           pclatu	equ	0xFFB
  1545                           pclath	equ	0xFFA
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           prodh	equ	0xFF4
  1551                           prodl	equ	0xFF3
  1552                           intcon	equ	0xFF2
  1553                           fsr0h	equ	0xFEA
  1554                           fsr0l	equ	0xFE9
  1555                           wreg	equ	0xFE8
  1556                           fsr1h	equ	0xFE2
  1557                           fsr1l	equ	0xFE1
  1558                           postinc2	equ	0xFDE
  1559                           postdec2	equ	0xFDD
  1560                           fsr2h	equ	0xFDA
  1561                           fsr2l	equ	0xFD9
  1562                           status	equ	0xFD8
  1563                           
  1564 ;; *************** function _lcdClear *****************
  1565 ;; Defined at:
  1566 ;;		line 70 in file "lcd.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;Total ram usage:        0 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    2
  1587 ;; This function calls:
  1588 ;;		i2_lcdInst
  1589 ;; This function is called by:
  1590 ;;		_lol
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text10
  1595  00149E                     __ptext10:
  1596                           	opt stack 0
  1597  00149E                     _lcdClear:
  1598                           	opt stack 24
  1599                           
  1600                           ;lcd.c: 71: lcdInst(0b00000001);
  1601                           
  1602                           ;incstack = 0
  1603  00149E  0E01               	movlw	1
  1604  0014A0  EC2D  F00A         	call	i2_lcdInst
  1605  0014A4  0012               	return		;funcret
  1606  0014A6                     __end_of_lcdClear:
  1607                           	opt stack 0
  1608                           pclatu	equ	0xFFB
  1609                           pclath	equ	0xFFA
  1610                           tblptru	equ	0xFF8
  1611                           tblptrh	equ	0xFF7
  1612                           tblptrl	equ	0xFF6
  1613                           tablat	equ	0xFF5
  1614                           prodh	equ	0xFF4
  1615                           prodl	equ	0xFF3
  1616                           intcon	equ	0xFF2
  1617                           fsr0h	equ	0xFEA
  1618                           fsr0l	equ	0xFE9
  1619                           wreg	equ	0xFE8
  1620                           fsr1h	equ	0xFE2
  1621                           fsr1l	equ	0xFE1
  1622                           postinc2	equ	0xFDE
  1623                           postdec2	equ	0xFDD
  1624                           fsr2h	equ	0xFDA
  1625                           fsr2l	equ	0xFD9
  1626                           status	equ	0xFD8
  1627                           
  1628 ;; *************** function i2_lcdInst *****************
  1629 ;; Defined at:
  1630 ;;		line 27 in file "lcd.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  data            1    wreg     unsigned char 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  data            1    3[COMRAM] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;Total ram usage:        2 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    1
  1651 ;; This function calls:
  1652 ;;		i2_lcdNibble
  1653 ;; This function is called by:
  1654 ;;		_lcdClear
  1655 ;;		_lcdNewline
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text11
  1660  00145A                     __ptext11:
  1661                           	opt stack 0
  1662  00145A                     i2_lcdInst:
  1663                           	opt stack 22
  1664                           
  1665                           ;incstack = 0
  1666                           ;i2lcdInst@data stored from wreg
  1667  00145A  6E04               	movwf	i2lcdInst@data,c
  1668                           
  1669                           ;lcd.c: 28: LATDbits.LATD2 = 0;
  1670  00145C  948C               	bcf	3980,2,c	;volatile
  1671                           
  1672                           ;lcd.c: 29: _delay((unsigned long)((140)*(8000000/4000000.0)));
  1673  00145E  0E5D               	movlw	93
  1674  001460                     i2u69_47:
  1675  001460  2EE8               	decfsz	wreg,f,c
  1676  001462  D7FE               	bra	i2u69_47
  1677  001464  F000               	nop	
  1678                           
  1679                           ;lcd.c: 30: lcdNibble(data);
  1680  001466  5004               	movf	i2lcdInst@data,w,c
  1681  001468  EC73  F009         	call	i2_lcdNibble
  1682                           
  1683                           ;lcd.c: 31: _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1684  00146C  0E03               	movlw	3
  1685  00146E  6E03               	movwf	??i2_lcdInst& (0+255),c
  1686  001470  0E98               	movlw	152
  1687  001472                     i2u70_47:
  1688  001472  2EE8               	decfsz	wreg,f,c
  1689  001474  D7FE               	bra	i2u70_47
  1690  001476  2E03               	decfsz	??i2_lcdInst& (0+255),f,c
  1691  001478  D7FC               	bra	i2u70_47
  1692  00147A  0012               	return		;funcret
  1693  00147C                     __end_ofi2_lcdInst:
  1694                           	opt stack 0
  1695                           pclatu	equ	0xFFB
  1696                           pclath	equ	0xFFA
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           prodh	equ	0xFF4
  1702                           prodl	equ	0xFF3
  1703                           intcon	equ	0xFF2
  1704                           fsr0h	equ	0xFEA
  1705                           fsr0l	equ	0xFE9
  1706                           wreg	equ	0xFE8
  1707                           fsr1h	equ	0xFE2
  1708                           fsr1l	equ	0xFE1
  1709                           postinc2	equ	0xFDE
  1710                           postdec2	equ	0xFDD
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8
  1714                           
  1715 ;; *************** function i2_lcdNibble *****************
  1716 ;; Defined at:
  1717 ;;		line 46 in file "lcd.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  data            1    wreg     unsigned char 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  data            1    1[COMRAM] unsigned char 
  1722 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_putch
  1742 ;;		i2_lcdInst
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text12
  1747  0012E6                     __ptext12:
  1748                           	opt stack 0
  1749  0012E6                     i2_lcdNibble:
  1750                           	opt stack 24
  1751                           
  1752                           ;incstack = 0
  1753                           ;i2lcdNibble@data stored from wreg
  1754  0012E6  6E02               	movwf	i2lcdNibble@data,c
  1755                           
  1756                           ;lcd.c: 48: char temp = data & 0xF0;
  1757  0012E8  5002               	movf	i2lcdNibble@data,w,c
  1758  0012EA  0BF0               	andlw	240
  1759  0012EC  6E01               	movwf	i2lcdNibble@temp,c
  1760                           
  1761                           ;lcd.c: 49: LATD = LATD & 0x0F;
  1762  0012EE  508C               	movf	3980,w,c	;volatile
  1763  0012F0  0B0F               	andlw	15
  1764  0012F2  6E8C               	movwf	3980,c	;volatile
  1765                           
  1766                           ;lcd.c: 50: LATD = temp | LATD;
  1767  0012F4  5001               	movf	i2lcdNibble@temp,w,c
  1768  0012F6  108C               	iorwf	3980,w,c	;volatile
  1769  0012F8  6E8C               	movwf	3980,c	;volatile
  1770                           
  1771                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  1772  0012FA  968C               	bcf	3980,3,c	;volatile
  1773                           
  1774                           ;lcd.c: 53: _delay((unsigned long)((600)*(8000000/4000000.0)));
  1775  0012FC  0EF0               	movlw	240
  1776  0012FE                     i2u71_47:
  1777  0012FE  D000               	nop2	
  1778  001300  2EE8               	decfsz	wreg,f,c
  1779  001302  D7FD               	bra	i2u71_47
  1780                           
  1781                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  1782  001304  868C               	bsf	3980,3,c	;volatile
  1783                           
  1784                           ;lcd.c: 55: _delay((unsigned long)((600)*(8000000/4000000.0)));
  1785  001306  0EF0               	movlw	240
  1786  001308                     i2u72_47:
  1787  001308  D000               	nop2	
  1788  00130A  2EE8               	decfsz	wreg,f,c
  1789  00130C  D7FD               	bra	i2u72_47
  1790                           
  1791                           ;lcd.c: 58: data = data << 4;
  1792  00130E  3802               	swapf	i2lcdNibble@data,w,c
  1793  001310  0BF0               	andlw	240
  1794  001312  6E02               	movwf	i2lcdNibble@data,c
  1795                           
  1796                           ;lcd.c: 60: temp = data & 0xF0;
  1797  001314  5002               	movf	i2lcdNibble@data,w,c
  1798  001316  0BF0               	andlw	240
  1799  001318  6E01               	movwf	i2lcdNibble@temp,c
  1800                           
  1801                           ;lcd.c: 61: LATD = LATD & 0x0F;
  1802  00131A  508C               	movf	3980,w,c	;volatile
  1803  00131C  0B0F               	andlw	15
  1804  00131E  6E8C               	movwf	3980,c	;volatile
  1805                           
  1806                           ;lcd.c: 62: LATD = temp | LATD;
  1807  001320  5001               	movf	i2lcdNibble@temp,w,c
  1808  001322  108C               	iorwf	3980,w,c	;volatile
  1809  001324  6E8C               	movwf	3980,c	;volatile
  1810                           
  1811                           ;lcd.c: 64: LATDbits.LATD3 = 0;
  1812  001326  968C               	bcf	3980,3,c	;volatile
  1813                           
  1814                           ;lcd.c: 65: _delay((unsigned long)((600)*(8000000/4000000.0)));
  1815  001328  0EF0               	movlw	240
  1816  00132A                     i2u73_47:
  1817  00132A  D000               	nop2	
  1818  00132C  2EE8               	decfsz	wreg,f,c
  1819  00132E  D7FD               	bra	i2u73_47
  1820                           
  1821                           ;lcd.c: 66: LATDbits.LATD3 = 1;
  1822  001330  868C               	bsf	3980,3,c	;volatile
  1823                           
  1824                           ;lcd.c: 67: _delay((unsigned long)((600)*(8000000/4000000.0)));
  1825  001332  0EF0               	movlw	240
  1826  001334                     i2u74_47:
  1827  001334  D000               	nop2	
  1828  001336  2EE8               	decfsz	wreg,f,c
  1829  001338  D7FD               	bra	i2u74_47
  1830  00133A  0012               	return		;funcret
  1831  00133C                     __end_ofi2_lcdNibble:
  1832                           	opt stack 0
  1833                           pclatu	equ	0xFFB
  1834                           pclath	equ	0xFFA
  1835                           tblptru	equ	0xFF8
  1836                           tblptrh	equ	0xFF7
  1837                           tblptrl	equ	0xFF6
  1838                           tablat	equ	0xFF5
  1839                           prodh	equ	0xFF4
  1840                           prodl	equ	0xFF3
  1841                           intcon	equ	0xFF2
  1842                           fsr0h	equ	0xFEA
  1843                           fsr0l	equ	0xFE9
  1844                           wreg	equ	0xFE8
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           postinc2	equ	0xFDE
  1848                           postdec2	equ	0xFDD
  1849                           fsr2h	equ	0xFDA
  1850                           fsr2l	equ	0xFD9
  1851                           status	equ	0xFD8
  1852                           pclatu	equ	0xFFB
  1853                           pclath	equ	0xFFA
  1854                           tblptru	equ	0xFF8
  1855                           tblptrh	equ	0xFF7
  1856                           tblptrl	equ	0xFF6
  1857                           tablat	equ	0xFF5
  1858                           prodh	equ	0xFF4
  1859                           prodl	equ	0xFF3
  1860                           intcon	equ	0xFF2
  1861                           fsr0h	equ	0xFEA
  1862                           fsr0l	equ	0xFE9
  1863                           wreg	equ	0xFE8
  1864                           fsr1h	equ	0xFE2
  1865                           fsr1l	equ	0xFE1
  1866                           postinc2	equ	0xFDE
  1867                           postdec2	equ	0xFDD
  1868                           fsr2h	equ	0xFDA
  1869                           fsr2l	equ	0xFD9
  1870                           status	equ	0xFD8
  1871                           
  1872                           	psect	rparam
  1873  0000                     pclatu	equ	0xFFB
  1874                           pclath	equ	0xFFA
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           prodh	equ	0xFF4
  1880                           prodl	equ	0xFF3
  1881                           intcon	equ	0xFF2
  1882                           fsr0h	equ	0xFEA
  1883                           fsr0l	equ	0xFE9
  1884                           wreg	equ	0xFE8
  1885                           fsr1h	equ	0xFE2
  1886                           fsr1l	equ	0xFE1
  1887                           postinc2	equ	0xFDE
  1888                           postdec2	equ	0xFDD
  1889                           fsr2h	equ	0xFDA
  1890                           fsr2l	equ	0xFD9
  1891                           status	equ	0xFD8
  1892                           
  1893                           	psect	temp
  1894  00003A                     btemp:
  1895                           	opt stack 0
  1896  00003A                     	ds	1
  1897  0000                     int$flags	set	btemp
  1898                           pclatu	equ	0xFFB
  1899                           pclath	equ	0xFFA
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           prodh	equ	0xFF4
  1905                           prodl	equ	0xFF3
  1906                           intcon	equ	0xFF2
  1907                           fsr0h	equ	0xFEA
  1908                           fsr0l	equ	0xFE9
  1909                           wreg	equ	0xFE8
  1910                           fsr1h	equ	0xFE2
  1911                           fsr1l	equ	0xFE1
  1912                           postinc2	equ	0xFDE
  1913                           postdec2	equ	0xFDD
  1914                           fsr2h	equ	0xFDA
  1915                           fsr2l	equ	0xFD9
  1916                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    27
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     51      57
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[2]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_initLCD
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _lol in COMRAM

    _lol->_printf
    _printf->___lwmod
    _lcdNewline->i2_lcdInst
    ___lwmod->___lwdiv
    _lcdClear->i2_lcdInst
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _lol in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lol in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lol in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lol in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lol in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lol in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lol in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lol in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lol in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lol in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lol in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lol in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lol in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lol in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lol in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lol in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     120
                                             47 COMRAM     4     4      0
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                             46 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              2     2      0      90
                                             44 COMRAM     2     2      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                             42 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _lol                                                 18    18      0    1627
                                             24 COMRAM    18    18      0
                           _lcdClear
                             _printf
 ---------------------------------------------------------------------------------
 (5) _printf                                              21    17      4    1447
                                             12 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0     292
                                              4 COMRAM     1     1      0
                         _lcdNewline
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) _lcdNewline                                           0     0      0     135
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _lcdClear                                             0     0      0     135
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (8) i2_lcdInst                                            2     2      0     135
                                              2 COMRAM     2     2      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _lcdInst
       _lcdNibble

 _lol (ROOT)
   _lcdClear
     i2_lcdInst
       i2_lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _lcdNewline
         i2_lcdInst
           i2_lcdNibble
       i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     33      39       1       45.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      34        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Feb 25 14:59:34 2017

                     l56 128E              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    u607 1394                      u617 13C8                      u627 141C  
                    u637 142E                      u647 12A8                      u657 12B2  
                    u667 12D4                      u677 12DE                      _lol 0008  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   ?_lol 0001                     _EEIF 007D0C                     STR_1 1028  
                   STR_2 1026                     STR_3 101C                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   _LATE 000F8D                     _PEIE 007F96                     i2l68 11EE  
                   i2l89 1448                     _main 122A                     _keys 1001  
                   _time 0038                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 003A                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000              i2_lcdNibble 12E6  
                  ??_lol 0019                    ?_main 0001                    _EEADR 000FA9  
                  _T0CON 000FD5          __end_of___lwdiv 138E          __end_of___lwmod 1416  
                  i2l673 1384                    i2l683 140C                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
        __end_of_lcdInst 1438           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
        __end_of_initLCD 13D4           __CFG_EBTRB$OFF 000000          __end_of_dpowers 101C  
                  _count 0034                    _putch 1438                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8           __CFG_PBADEN$ON 000000  
        __initialization 147C       __size_ofi2_lcdInst 0022             __end_of_main 1290  
           __end_of_keys 1012                   ??_main 0030            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _EEADRH 000FAA                   _ADRESL 000FC3  
                 _EEDATA 000FA8                   _EECON1 000FA6                   _EECON2 000FA7  
        i2lcdNibble@data 0002                   ?_putch 0001          i2lcdNibble@temp 0001  
                 i2l1402 1128                   i2l1324 1352                   i2l1404 1130  
                 i2l1326 135A                   i2l1336 137A                   i2l1328 135E  
                 i2l1352 1402                   i2l1344 13E2                   i2l1346 13EA  
                 i2l1362 1046                   i2l1348 13EE                   i2l1380 109C  
                 i2l1436 11D4                   i2l1358 1036                   i2l1392 10C8  
                 i2l1368 1070                   i2l1378 1098                   i2l1396 10DA  
                 i2l1398 10E0                   _TMR0IE 007F95                   _TMR0IF 007F92  
       __end_of_lcdClear 14A6           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
              ??___lwdiv 0005                ??___lwmod 000C                ??_lcdInst 002D  
                 _printf 102C                ??_initLCD 002F             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
      __end_ofi2_lcdInst 147C               __accesstop 0080  __end_of__initialization 1488  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_putch 145A  
     __size_of_lcdNibble 0056                  ??_putch 0005             ?i2_lcdNibble 0001  
             _lcdNewline 1496                  ?_printf 000D                ?_lcdClear 0001  
                i2u70_47 1472                  i2u71_47 12FE                  i2u72_47 1308  
                i2u73_47 132A                  i2u74_47 1334                  i2u68_47 144C  
                i2u69_47 1460        __end_of_lcdNibble 12E6                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 133C                  ___lwmod 13D4  
           __psmallconst 1000                  __pcinit 147C                  __ramtop 1000  
                _lcdInst 1416                  __ptext0 122A                  __ptext1 138E  
                __ptext2 1416                  __ptext3 1290                  __ptext5 102C  
                __ptext6 1438                  __ptext7 1496                  __ptext8 13D4  
                __ptext9 133C          __size_of_printf 011E                  _initLCD 138E  
                _dpowers 1012             __size_of_lol 1222               ??_lcdClear 0005  
         __pintcode_body 114A     end_of_initialization 1488                  lol@time 0027  
          __Lmediumconst 0000                  int_func 114A                  printf@c 0018  
                printf@f 000D                  postdec2 000FDD                  postinc2 000FDE  
            ?_lcdNewline 0001                _PORTBbits 000F81                i2_lcdInst 145A  
   __size_ofi2_lcdNibble 0056            i2lcdInst@data 0004           __end_of_printf 114A  
    start_initialization 147C              __end_of_lol 122A               ?i2_lcdInst 0001  
    __size_of_lcdNewline 0008         __CFG_LPT1OSC$OFF 000000                 ??_printf 0011  
            __pbssCOMRAM 0034        __size_of_lcdClear 0008         ___lwdiv@dividend 0001  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008                _lcdNibble 1290  
               ?___lwdiv 0001                 ?___lwmod 0008                 ?_lcdInst 0001  
               ?_initLCD 0001              __smallconst 1000         ___lwdiv@quotient 0005  
         __size_of_putch 0022              ??i2_lcdInst 0003                 _LATDbits 000F8C  
       __CFG_WDTPS$32768 000000               ?_lcdNibble 0001             ??_lcdNewline 0005  
          lcdNibble@data 002C               printf@flag 0014            lcdNibble@temp 002B  
             printf@prec 0015       __end_of_lcdNewline 149E                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___lwdiv 0052  
       __size_of___lwmod 0042         __size_of_lcdInst 0022         __size_of_initLCD 0046  
               _lcdClear 149E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 149E                 __ptext11 145A                 __ptext12 12E6  
          __size_of_main 0066            ??i2_lcdNibble 0001              ??_lcdNibble 002B  
               int$flags 003A                printf@val 0016                 main@time 0030  
              putch@data 0005               _INTCONbits 000FF2                 intlevel2 0000  
       ___lwmod@dividend 0008                 printf@ap 0012              lcdInst@data 002E  
    __end_ofi2_lcdNibble 133C          ___lwmod@divisor 000A          ___lwmod@counter 000C  
