

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Fri Mar 10 23:50:06 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.40
    31                           ; Generated 01/12/2016 GMT
    32                           ; 
    33                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4620 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  0017E0                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _angle
    70  0017E0  F159               	dw	61785
    71  0017E2  0000               	dw	0
    72                           
    73                           	psect	smallconst
    74  001000                     __psmallconst:
    75                           	opt stack 0
    76  001000  00                 	db	0
    77  001001  31                 	db	49
    78  001002  32                 	db	50
    79  001003  33                 	db	51
    80  001004  41                 	db	65
    81  001005  34                 	db	52
    82  001006  35                 	db	53
    83  001007  36                 	db	54
    84  001008  42                 	db	66
    85  001009  37                 	db	55
    86  00100A  38                 	db	56
    87  00100B  39                 	db	57
    88  00100C  43                 	db	67
    89  00100D  2A                 	db	42
    90  00100E  30                 	db	48
    91  00100F  23                 	db	35
    92  001010  44                 	db	68
    93  001011  00                 	db	0
    94  001012                     __end_of_keys:
    95                           	opt stack 0
    96  001012  0001               	dw	1
    97  001014  0010               	dw	16
    98  001016  0100               	dw	256
    99  001018  1000               	dw	4096
   100  00101A                     __end_of_hexpowers:
   101                           	opt stack 0
   102  00101A                     _happynewyear:
   103                           	opt stack 0
   104  00101A  45                 	db	69
   105  00101B  59                 	db	89
   106  00101C  23                 	db	35
   107  00101D  07                 	db	7
   108  00101E  31                 	db	49
   109  00101F  12                 	db	18
   110  001020  16                 	db	22
   111  001021                     __end_of_happynewyear:
   112                           	opt stack 0
   113  0000                     _ADCON0	set	4034
   114  0000                     _ADCON1	set	4033
   115  0000                     _ADCON2	set	4032
   116  0000                     _ADRESH	set	4036
   117  0000                     _ADRESL	set	4035
   118  0000                     _EEADR	set	4009
   119  0000                     _EEADRH	set	4010
   120  0000                     _EECON1	set	4006
   121  0000                     _EECON2	set	4007
   122  0000                     _EEDATA	set	4008
   123  0000                     _INTCONbits	set	4082
   124  0000                     _LATA	set	3977
   125  0000                     _LATB	set	3978
   126  0000                     _LATC	set	3979
   127  0000                     _LATD	set	3980
   128  0000                     _LATDbits	set	3980
   129  0000                     _LATE	set	3981
   130  0000                     _PORTA	set	3968
   131  0000                     _PORTB	set	3969
   132  0000                     _PORTBbits	set	3969
   133  0000                     _PORTC	set	3970
   134  0000                     _PORTD	set	3971
   135  0000                     _SSPADD	set	4040
   136  0000                     _SSPBUF	set	4041
   137  0000                     _SSPCON1	set	4038
   138  0000                     _SSPCON2	set	4037
   139  0000                     _SSPSTAT	set	4039
   140  0000                     _T0CON	set	4053
   141  0000                     _T1CON	set	4045
   142  0000                     _T3CON	set	4017
   143  0000                     _TMR0H	set	4055
   144  0000                     _TMR0L	set	4054
   145  0000                     _TMR1H	set	4047
   146  0000                     _TMR1L	set	4046
   147  0000                     _TMR3H	set	4019
   148  0000                     _TMR3L	set	4018
   149  0000                     _TRISA	set	3986
   150  0000                     _TRISB	set	3987
   151  0000                     _TRISC	set	3988
   152  0000                     _TRISD	set	3989
   153  0000                     _TRISE	set	3990
   154  0000                     _ACKDT	set	32301
   155  0000                     _ACKEN	set	32300
   156  0000                     _EEIF	set	32012
   157  0000                     _INT1IF	set	32640
   158  0000                     _PEIE	set	32662
   159  0000                     _PEN	set	32298
   160  0000                     _RCEN	set	32299
   161  0000                     _RSEN	set	32297
   162  0000                     _SEN	set	32296
   163  0000                     _TMR0IE	set	32661
   164  0000                     _TMR0IF	set	32658
   165  0000                     _TMR1IE	set	31976
   166  0000                     _TMR1IF	set	31984
   167  0000                     _TMR2IF	set	31985
   168  0000                     _TMR3IE	set	32001
   169  0000                     _TMR3IF	set	32009
   170  0000                     _TRISC3	set	31907
   171  0000                     _TRISC4	set	31908
   172  001021  30                 	db	48	;'0'
   173  001022  31                 	db	49	;'1'
   174  001023  32                 	db	50	;'2'
   175  001024  33                 	db	51	;'3'
   176  001025  34                 	db	52	;'4'
   177  001026  35                 	db	53	;'5'
   178  001027  36                 	db	54	;'6'
   179  001028  37                 	db	55	;'7'
   180  001029  38                 	db	56	;'8'
   181  00102A  39                 	db	57	;'9'
   182  00102B  61                 	db	97	;'a'
   183  00102C  62                 	db	98	;'b'
   184  00102D  63                 	db	99	;'c'
   185  00102E  64                 	db	100	;'d'
   186  00102F  65                 	db	101	;'e'
   187  001030  66                 	db	102	;'f'
   188  001031  00                 	db	0
   189  001032  5B                 	db	91	;'['
   190  001033  25                 	db	37
   191  001034  78                 	db	120	;'x'
   192  001035  20                 	db	32
   193  001036  25                 	db	37
   194  001037  78                 	db	120	;'x'
   195  001038  5D                 	db	93	;']'
   196  001039  0A                 	db	10
   197  00103A  00                 	db	0
   198  00103B  74                 	db	116	;'t'
   199  00103C  31                 	db	49	;'1'
   200  00103D  3A                 	db	58	;':'
   201  00103E  20                 	db	32
   202  00103F  25                 	db	37
   203  001040  78                 	db	120	;'x'
   204  001041  20                 	db	32
   205  001042  00                 	db	0
   206                           
   207                           ; #config settings
   208  001043  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           	psect	cinit
   211  00174A                     __pcinit:
   212                           	opt stack 0
   213  00174A                     start_initialization:
   214                           	opt stack 0
   215  00174A                     __initialization:
   216                           	opt stack 0
   217                           
   218                           ; Initialize objects allocated to COMRAM (4 bytes)
   219                           ; load TBLPTR registers with __pidataCOMRAM
   220  00174A  0EE0               	movlw	low __pidataCOMRAM
   221  00174C  6EF6               	movwf	tblptrl,c
   222  00174E  0E17               	movlw	high __pidataCOMRAM
   223  001750  6EF7               	movwf	tblptrh,c
   224  001752  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   225  001754  6EF8               	movwf	tblptru,c
   226  001756  EE00  F04C         	lfsr	0,__pdataCOMRAM
   227  00175A  EE10 F004          	lfsr	1,4
   228  00175E                     copy_data0:
   229  00175E  0009               	tblrd		*+
   230  001760  CFF5 FFEE          	movff	tablat,postinc0
   231  001764  50E5               	movf	postdec1,w,c
   232  001766  50E1               	movf	fsr1l,w,c
   233  001768  E1FA               	bnz	copy_data0
   234                           
   235                           ; Clear objects allocated to COMRAM (20 bytes)
   236  00176A  EE00  F038         	lfsr	0,__pbssCOMRAM
   237  00176E  0E14               	movlw	20
   238  001770                     clear_0:
   239  001770  6AEE               	clrf	postinc0,c
   240  001772  06E8               	decf	wreg,f,c
   241  001774  E1FD               	bnz	clear_0
   242  001776                     end_of_initialization:
   243                           	opt stack 0
   244  001776                     __end_of__initialization:
   245                           	opt stack 0
   246  001776  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   247  001778  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   248  00177A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249  00177C  6EF8               	movwf	tblptru,c
   250  00177E  0100               	movlb	0
   251  001780  EF83  F00B         	goto	_main	;jump to C main() function
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           postdec1	equ	0xFE5
   259                           fsr1l	equ	0xFE1
   260                           
   261                           	psect	bssCOMRAM
   262  000038                     __pbssCOMRAM:
   263                           	opt stack 0
   264  000038                     _pin:
   265                           	opt stack 0
   266  000038                     	ds	8
   267  000040                     _port:
   268                           	opt stack 0
   269  000040                     	ds	8
   270  000048                     _count:
   271                           	opt stack 0
   272  000048                     	ds	2
   273  00004A                     _time:
   274                           	opt stack 0
   275  00004A                     	ds	2
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           postdec1	equ	0xFE5
   283                           fsr1l	equ	0xFE1
   284                           
   285                           	psect	dataCOMRAM
   286  00004C                     __pdataCOMRAM:
   287                           	opt stack 0
   288  00004C                     _angle:
   289                           	opt stack 0
   290  00004C                     	ds	4
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	cstackCOMRAM
   301  000001                     __pcstackCOMRAM:
   302                           	opt stack 0
   303  000001                     ?_digitalRead:
   304                           	opt stack 0
   305  000001                     digitalRead@port:
   306                           	opt stack 0
   307  000001                     i2digitalWrite@port:
   308                           	opt stack 0
   309  000001                     i2startTimer@timer:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x0
   313  000001                     	ds	2
   314  000003                     digitalRead@pin:
   315                           	opt stack 0
   316  000003                     i2digitalWrite@pin:
   317                           	opt stack 0
   318  000003                     i2startTimer@val:
   319                           	opt stack 0
   320                           
   321                           ; 4 bytes @ 0x2
   322  000003                     	ds	2
   323  000005                     ??_digitalRead:
   324  000005                     i2digitalWrite@val:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x4
   328  000005                     	ds	2
   329  000007                     ??i2_digitalWrite:
   330  000007                     ??i2_startTimer:
   331                           
   332                           ; 1 bytes @ 0x6
   333  000007                     	ds	3
   334  00000A                     servoInterruptService@time:
   335                           	opt stack 0
   336                           
   337                           ; 4 bytes @ 0x9
   338  00000A                     	ds	4
   339  00000E                     ??_servoInterruptService:
   340                           
   341                           ; 1 bytes @ 0xD
   342  00000E                     	ds	2
   343  000010                     servoInterruptService@flags:
   344                           	opt stack 0
   345                           
   346                           ; 8 bytes @ 0xF
   347  000010                     	ds	8
   348  000018                     servoInterruptService@i:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x17
   352  000018                     	ds	2
   353  00001A                     ??_service:
   354                           
   355                           ; 1 bytes @ 0x19
   356  00001A                     	ds	14
   357  000028                     service@key:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x27
   361  000028                     	ds	1
   362  000029                     lcdNibble@temp:
   363                           	opt stack 0
   364  000029                     digitalWrite@port:
   365                           	opt stack 0
   366  000029                     initTimer@timer:
   367                           	opt stack 0
   368  000029                     startTimer@timer:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x28
   372  000029                     	ds	1
   373  00002A                     lcdNibble@data:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x29
   377  00002A                     	ds	1
   378  00002B                     ??_lcdInst:
   379  00002B                     ??_initTimer:
   380  00002B                     digitalWrite@pin:
   381                           	opt stack 0
   382  00002B                     startTimer@val:
   383                           	opt stack 0
   384                           
   385                           ; 4 bytes @ 0x2A
   386  00002B                     	ds	1
   387  00002C                     lcdInst@data:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x2B
   391  00002C                     	ds	1
   392  00002D                     ??_initLCD:
   393  00002D                     digitalWrite@val:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x2C
   397  00002D                     	ds	2
   398  00002F                     ??_digitalWrite:
   399  00002F                     ??_startTimer:
   400                           
   401                           ; 1 bytes @ 0x2E
   402  00002F                     	ds	3
   403  000032                     initServo@timer:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x31
   407  000032                     	ds	2
   408  000034                     initServo@po:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x33
   412  000034                     	ds	2
   413  000036                     initServo@pi:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x35
   417  000036                     	ds	2
   418  000038                     tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           postdec1	equ	0xFE5
   425                           fsr1l	equ	0xFE1
   426                           
   427                           ; 1 bytes @ 0x37
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 59 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels required when called:    6
   453 ;; This function calls:
   454 ;;		_initLCD
   455 ;;		_initServo
   456 ;;		_pinSetup
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text0
   463  001706                     __ptext0:
   464                           	opt stack 0
   465  001706                     _main:
   466                           	opt stack 25
   467                           
   468                           ;main.c: 60: pinSetup();
   469                           
   470                           ;incstack = 0
   471  001706  ECC2  F00B         	call	_pinSetup	;wreg free
   472                           
   473                           ;main.c: 61: initLCD();
   474  00170A  EC60  F00B         	call	_initLCD	;wreg free
   475                           
   476                           ;main.c: 62: (INTCONbits.GIE = 1);
   477  00170E  8EF2               	bsf	intcon,7,c	;volatile
   478                           
   479                           ;main.c: 64: initServo(3,2,0);
   480  001710  0E00               	movlw	0
   481  001712  6E33               	movwf	initServo@timer+1,c
   482  001714  0E03               	movlw	3
   483  001716  6E32               	movwf	initServo@timer,c
   484  001718  0E00               	movlw	0
   485  00171A  6E35               	movwf	initServo@po+1,c
   486  00171C  0E02               	movlw	2
   487  00171E  6E34               	movwf	initServo@po,c
   488  001720  0E00               	movlw	0
   489  001722  6E37               	movwf	initServo@pi+1,c
   490  001724  0E00               	movlw	0
   491  001726  6E36               	movwf	initServo@pi,c
   492  001728  EC6F  F00A         	call	_initServo	;wreg free
   493                           
   494                           ;main.c: 65: initServo(1,2,1);
   495  00172C  0E00               	movlw	0
   496  00172E  6E33               	movwf	initServo@timer+1,c
   497  001730  0E01               	movlw	1
   498  001732  6E32               	movwf	initServo@timer,c
   499  001734  0E00               	movlw	0
   500  001736  6E35               	movwf	initServo@po+1,c
   501  001738  0E02               	movlw	2
   502  00173A  6E34               	movwf	initServo@po,c
   503  00173C  0E00               	movlw	0
   504  00173E  6E37               	movwf	initServo@pi+1,c
   505  001740  0E01               	movlw	1
   506  001742  6E36               	movwf	initServo@pi,c
   507  001744  EC6F  F00A         	call	_initServo	;wreg free
   508  001748                     l46:
   509  001748  D7FF               	goto	l46
   510  00174A                     __end_of_main:
   511                           	opt stack 0
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           intcon	equ	0xFF2
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           postdec1	equ	0xFE5
   520                           fsr1l	equ	0xFE1
   521                           
   522 ;; *************** function _pinSetup *****************
   523 ;; Defined at:
   524 ;;		line 25 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    3
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text1
   553  001784                     __ptext1:
   554                           	opt stack 0
   555  001784                     _pinSetup:
   556                           	opt stack 27
   557                           
   558                           ;main.c: 31: TRISA = 0xFF;
   559                           
   560                           ;incstack = 0
   561  001784  6892               	setf	3986,c	;volatile
   562                           
   563                           ;main.c: 32: TRISB = 0xFF;
   564  001786  6893               	setf	3987,c	;volatile
   565                           
   566                           ;main.c: 33: TRISC = 0x00;
   567  001788  0E00               	movlw	0
   568  00178A  6E94               	movwf	3988,c	;volatile
   569                           
   570                           ;main.c: 34: TRISD = 0x00;
   571  00178C  0E00               	movlw	0
   572  00178E  6E95               	movwf	3989,c	;volatile
   573                           
   574                           ;main.c: 35: TRISE = 0x00;
   575  001790  0E00               	movlw	0
   576  001792  6E96               	movwf	3990,c	;volatile
   577                           
   578                           ;main.c: 37: LATA = 0x00;
   579  001794  0E00               	movlw	0
   580  001796  6E89               	movwf	3977,c	;volatile
   581                           
   582                           ;main.c: 38: LATB = 0x00;
   583  001798  0E00               	movlw	0
   584  00179A  6E8A               	movwf	3978,c	;volatile
   585                           
   586                           ;main.c: 39: LATC = 0x00;
   587  00179C  0E00               	movlw	0
   588  00179E  6E8B               	movwf	3979,c	;volatile
   589                           
   590                           ;main.c: 40: LATD = 0x00;
   591  0017A0  0E00               	movlw	0
   592  0017A2  6E8C               	movwf	3980,c	;volatile
   593                           
   594                           ;main.c: 41: LATE = 0x00;
   595  0017A4  0E00               	movlw	0
   596  0017A6  6E8D               	movwf	3981,c	;volatile
   597                           
   598                           ;main.c: 43: ADCON0 = 0x00;
   599  0017A8  0E00               	movlw	0
   600  0017AA  6EC2               	movwf	4034,c	;volatile
   601                           
   602                           ;main.c: 44: ADCON1 |= 0x0A;
   603  0017AC  0E0A               	movlw	10
   604  0017AE  12C1               	iorwf	4033,f,c	;volatile
   605                           
   606                           ;main.c: 48: ADCON2 = 0;
   607  0017B0  0E00               	movlw	0
   608  0017B2  6EC0               	movwf	4032,c	;volatile
   609                           
   610                           ;main.c: 49: ADCON2 |= 0b010;
   611  0017B4  82C0               	bsf	4032,1,c	;volatile
   612                           
   613                           ;main.c: 50: ADCON2 |= 0b110<<3;
   614  0017B6  0E30               	movlw	48
   615  0017B8  12C0               	iorwf	4032,f,c	;volatile
   616                           
   617                           ;main.c: 51: ADCON2 |= 1<<7;
   618  0017BA  8EC0               	bsf	4032,7,c	;volatile
   619  0017BC  0012               	return		;funcret
   620  0017BE                     __end_of_pinSetup:
   621                           	opt stack 0
   622                           tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           intcon	equ	0xFF2
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           postdec1	equ	0xFE5
   630                           fsr1l	equ	0xFE1
   631                           
   632 ;; *************** function _initServo *****************
   633 ;; Defined at:
   634 ;;		line 15 in file "servo.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  timer           2   49[COMRAM] int 
   637 ;;  po              2   51[COMRAM] int 
   638 ;;  pi              2   53[COMRAM] int 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   650 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;Total ram usage:        6 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    4
   657 ;; This function calls:
   658 ;;		_digitalWrite
   659 ;;		_initTimer
   660 ;;		_startTimer
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text2
   667  0014DE                     __ptext2:
   668                           	opt stack 0
   669  0014DE                     _initServo:
   670                           	opt stack 26
   671                           
   672                           ;servo.c: 16: port[timer] = po;
   673                           
   674                           ;incstack = 0
   675  0014DE  90D8               	bcf	status,0,c
   676  0014E0  3432               	rlcf	initServo@timer,w,c
   677  0014E2  6ED9               	movwf	fsr2l,c
   678  0014E4  3433               	rlcf	initServo@timer+1,w,c
   679  0014E6  6EDA               	movwf	fsr2h,c
   680  0014E8  0E40               	movlw	low _port
   681  0014EA  26D9               	addwf	fsr2l,f,c
   682  0014EC  0E00               	movlw	high _port
   683  0014EE  22DA               	addwfc	fsr2h,f,c
   684  0014F0  C034  FFDE         	movff	initServo@po,postinc2
   685  0014F4  C035  FFDD         	movff	initServo@po+1,postdec2
   686                           
   687                           ;servo.c: 17: pin[timer] = pi;
   688  0014F8  90D8               	bcf	status,0,c
   689  0014FA  3432               	rlcf	initServo@timer,w,c
   690  0014FC  6ED9               	movwf	fsr2l,c
   691  0014FE  3433               	rlcf	initServo@timer+1,w,c
   692  001500  6EDA               	movwf	fsr2h,c
   693  001502  0E38               	movlw	low _pin
   694  001504  26D9               	addwf	fsr2l,f,c
   695  001506  0E00               	movlw	high _pin
   696  001508  22DA               	addwfc	fsr2h,f,c
   697  00150A  C036  FFDE         	movff	initServo@pi,postinc2
   698  00150E  C037  FFDD         	movff	initServo@pi+1,postdec2
   699                           
   700                           ;servo.c: 19: initTimer(timer);
   701  001512  C032  F029         	movff	initServo@timer,initTimer@timer
   702  001516  C033  F02A         	movff	initServo@timer+1,initTimer@timer+1
   703  00151A  EC3D  F00B         	call	_initTimer	;wreg free
   704                           
   705                           ;servo.c: 20: startTimer(timer,61785);
   706  00151E  C032  F029         	movff	initServo@timer,startTimer@timer
   707  001522  C033  F02A         	movff	initServo@timer+1,startTimer@timer+1
   708  001526  0E59               	movlw	89
   709  001528  6E2B               	movwf	startTimer@val,c
   710  00152A  0EF1               	movlw	241
   711  00152C  6E2C               	movwf	startTimer@val+1,c
   712  00152E  0E00               	movlw	0
   713  001530  6E2D               	movwf	startTimer@val+2,c
   714  001532  0E00               	movlw	0
   715  001534  6E2E               	movwf	startTimer@val+3,c
   716  001536  ECF1  F00A         	call	_startTimer	;wreg free
   717                           
   718                           ;servo.c: 21: digitalWrite(port[timer],pin[timer],1);
   719  00153A  90D8               	bcf	status,0,c
   720  00153C  3432               	rlcf	initServo@timer,w,c
   721  00153E  6ED9               	movwf	fsr2l,c
   722  001540  3433               	rlcf	initServo@timer+1,w,c
   723  001542  6EDA               	movwf	fsr2h,c
   724  001544  0E40               	movlw	low _port
   725  001546  26D9               	addwf	fsr2l,f,c
   726  001548  0E00               	movlw	high _port
   727  00154A  22DA               	addwfc	fsr2h,f,c
   728  00154C  CFDE F029          	movff	postinc2,digitalWrite@port
   729  001550  CFDD F02A          	movff	postdec2,digitalWrite@port+1
   730  001554  90D8               	bcf	status,0,c
   731  001556  3432               	rlcf	initServo@timer,w,c
   732  001558  6ED9               	movwf	fsr2l,c
   733  00155A  3433               	rlcf	initServo@timer+1,w,c
   734  00155C  6EDA               	movwf	fsr2h,c
   735  00155E  0E38               	movlw	low _pin
   736  001560  26D9               	addwf	fsr2l,f,c
   737  001562  0E00               	movlw	high _pin
   738  001564  22DA               	addwfc	fsr2h,f,c
   739  001566  CFDE F02B          	movff	postinc2,digitalWrite@pin
   740  00156A  CFDD F02C          	movff	postdec2,digitalWrite@pin+1
   741  00156E  0E00               	movlw	0
   742  001570  6E2E               	movwf	digitalWrite@val+1,c
   743  001572  0E01               	movlw	1
   744  001574  6E2D               	movwf	digitalWrite@val,c
   745  001576  ECC3  F009         	call	_digitalWrite	;wreg free
   746  00157A  0012               	return		;funcret
   747  00157C                     __end_of_initServo:
   748                           	opt stack 0
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           intcon	equ	0xFF2
   754                           postinc0	equ	0xFEE
   755                           wreg	equ	0xFE8
   756                           postdec1	equ	0xFE5
   757                           fsr1l	equ	0xFE1
   758                           postinc2	equ	0xFDE
   759                           postdec2	equ	0xFDD
   760                           fsr2h	equ	0xFDA
   761                           fsr2l	equ	0xFD9
   762                           status	equ	0xFD8
   763                           
   764 ;; *************** function _startTimer *****************
   765 ;; Defined at:
   766 ;;		line 75 in file "timer.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  timer           2   40[COMRAM] int 
   769 ;;  val             4   42[COMRAM] long 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   781 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;Total ram usage:        8 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    3
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_initServo
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text3
   796  0015E2                     __ptext3:
   797                           	opt stack 0
   798  0015E2                     _startTimer:
   799                           	opt stack 26
   800                           
   801                           ;timer.c: 76: switch(timer){
   802                           
   803                           ;incstack = 0
   804  0015E2  D012               	goto	l1720
   805  0015E4                     l291:
   806                           
   807                           ;timer.c: 78: TMR0H = val>>8;
   808  0015E4  C02C  FFD7         	movff	startTimer@val+1,4055	;volatile
   809                           
   810                           ;timer.c: 79: TMR0L = val;
   811  0015E8  C02B  FFD6         	movff	startTimer@val,4054	;volatile
   812                           
   813                           ;timer.c: 80: T0CON |= 1<<7;
   814  0015EC  8ED5               	bsf	4053,7,c	;volatile
   815                           
   816                           ;timer.c: 81: break;
   817  0015EE  0012               	return	
   818  0015F0                     l293:
   819                           
   820                           ;timer.c: 83: TMR1H = val>>8;
   821  0015F0  C02C  FFCF         	movff	startTimer@val+1,4047	;volatile
   822                           
   823                           ;timer.c: 84: TMR1L = val;
   824  0015F4  C02B  FFCE         	movff	startTimer@val,4046	;volatile
   825                           
   826                           ;timer.c: 85: T1CON |= 1<<0;
   827  0015F8  80CD               	bsf	4045,0,c	;volatile
   828                           
   829                           ;timer.c: 86: break;
   830  0015FA  0012               	return	
   831  0015FC                     l294:
   832                           
   833                           ;timer.c: 88: TMR3H = val>>8;
   834  0015FC  C02C  FFB3         	movff	startTimer@val+1,4019	;volatile
   835                           
   836                           ;timer.c: 89: TMR3L = val;
   837  001600  C02B  FFB2         	movff	startTimer@val,4018	;volatile
   838                           
   839                           ;timer.c: 90: T3CON |= 1<<0;
   840  001604  80B1               	bsf	4017,0,c	;volatile
   841                           
   842                           ;timer.c: 91: }
   843  001606  0012               	return	
   844  001608                     l1720:
   845  001608  C029  F02F         	movff	startTimer@timer,??_startTimer
   846  00160C  C02A  F030         	movff	startTimer@timer+1,??_startTimer+1
   847                           
   848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   849                           ; Switch size 1, requested type "space"
   850                           ; Number of cases is 1, Range of values is 0 to 0
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte            4     3 (average)
   854                           ;	Chosen strategy is simple_byte
   855  001610  5030               	movf	??_startTimer+1,w,c
   856  001612  0A00               	xorlw	0	; case 0
   857  001614  A4D8               	btfss	status,2,c
   858  001616  0012               	return	
   859                           
   860                           ; Switch size 1, requested type "space"
   861                           ; Number of cases is 3, Range of values is 0 to 3
   862                           ; switch strategies available:
   863                           ; Name         Instructions Cycles
   864                           ; simple_byte           10     6 (average)
   865                           ;	Chosen strategy is simple_byte
   866  001618  502F               	movf	??_startTimer,w,c
   867  00161A  0A00               	xorlw	0	; case 0
   868  00161C  B4D8               	btfsc	status,2,c
   869  00161E  D7E2               	goto	l291
   870  001620  0A01               	xorlw	1	; case 1
   871  001622  B4D8               	btfsc	status,2,c
   872  001624  D7E5               	goto	l293
   873  001626  0A02               	xorlw	2	; case 3
   874  001628  A4D8               	btfss	status,2,c
   875  00162A  0012               	return	
   876  00162C  D7E7               	goto	l294
   877  00162E                     __end_of_startTimer:
   878                           	opt stack 0
   879                           tblptru	equ	0xFF8
   880                           tblptrh	equ	0xFF7
   881                           tblptrl	equ	0xFF6
   882                           tablat	equ	0xFF5
   883                           intcon	equ	0xFF2
   884                           postinc0	equ	0xFEE
   885                           wreg	equ	0xFE8
   886                           postdec1	equ	0xFE5
   887                           fsr1l	equ	0xFE1
   888                           postinc2	equ	0xFDE
   889                           postdec2	equ	0xFDD
   890                           fsr2h	equ	0xFDA
   891                           fsr2l	equ	0xFD9
   892                           status	equ	0xFD8
   893                           
   894 ;; *************** function _initTimer *****************
   895 ;; Defined at:
   896 ;;		line 52 in file "timer.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  timer           2   40[COMRAM] int 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;Total ram usage:        4 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    3
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_initServo
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text4
   925  00167A                     __ptext4:
   926                           	opt stack 0
   927  00167A                     _initTimer:
   928                           	opt stack 26
   929                           
   930                           ;timer.c: 53: switch(timer){
   931                           
   932                           ;incstack = 0
   933  00167A  D00D               	goto	l1706
   934  00167C                     l1690:
   935                           
   936                           ;timer.c: 55: T0CON = 0;
   937  00167C  0E00               	movlw	0
   938  00167E  6ED5               	movwf	4053,c	;volatile
   939                           
   940                           ;timer.c: 56: T0CON |= 1<<3;
   941  001680  86D5               	bsf	4053,3,c	;volatile
   942                           
   943                           ;timer.c: 58: TMR0IE = 1;
   944  001682  8AF2               	bsf	intcon,5,c	;volatile
   945                           
   946                           ;timer.c: 59: break;
   947  001684  D01A               	goto	l284
   948  001686                     l1696:
   949                           
   950                           ;timer.c: 61: T1CON = 0;
   951  001686  0E00               	movlw	0
   952  001688  6ECD               	movwf	4045,c	;volatile
   953                           
   954                           ;timer.c: 63: TMR1IE = 1;
   955  00168A  809D               	bsf	3997,0,c	;volatile
   956                           
   957                           ;timer.c: 64: break;
   958  00168C  D016               	goto	l284
   959  00168E                     l1700:
   960                           
   961                           ;timer.c: 66: T3CON = 0;
   962  00168E  0E00               	movlw	0
   963  001690  6EB1               	movwf	4017,c	;volatile
   964                           
   965                           ;timer.c: 67: TMR3IE = 1;
   966  001692  82A0               	bsf	4000,1,c	;volatile
   967                           
   968                           ;timer.c: 69: }
   969                           
   970                           ;timer.c: 68: break;
   971  001694  D012               	goto	l284
   972  001696                     l1706:
   973  001696  C029  F02B         	movff	initTimer@timer,??_initTimer
   974  00169A  C02A  F02C         	movff	initTimer@timer+1,??_initTimer+1
   975                           
   976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   977                           ; Switch size 1, requested type "space"
   978                           ; Number of cases is 1, Range of values is 0 to 0
   979                           ; switch strategies available:
   980                           ; Name         Instructions Cycles
   981                           ; simple_byte            4     3 (average)
   982                           ;	Chosen strategy is simple_byte
   983  00169E  502C               	movf	??_initTimer+1,w,c
   984  0016A0  0A00               	xorlw	0	; case 0
   985  0016A2  A4D8               	btfss	status,2,c
   986  0016A4  D00A               	goto	l284
   987                           
   988                           ; Switch size 1, requested type "space"
   989                           ; Number of cases is 3, Range of values is 0 to 3
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte           10     6 (average)
   993                           ;	Chosen strategy is simple_byte
   994  0016A6  502B               	movf	??_initTimer,w,c
   995  0016A8  0A00               	xorlw	0	; case 0
   996  0016AA  B4D8               	btfsc	status,2,c
   997  0016AC  D7E7               	goto	l1690
   998  0016AE  0A01               	xorlw	1	; case 1
   999  0016B0  B4D8               	btfsc	status,2,c
  1000  0016B2  D7E9               	goto	l1696
  1001  0016B4  0A02               	xorlw	2	; case 3
  1002  0016B6  B4D8               	btfsc	status,2,c
  1003  0016B8  D7EA               	goto	l1700
  1004  0016BA                     l284:
  1005                           
  1006                           ;timer.c: 70: PEIE = 1;
  1007  0016BA  8CF2               	bsf	intcon,6,c	;volatile
  1008                           
  1009                           ;timer.c: 71: (INTCONbits.GIE = 1);
  1010  0016BC  8EF2               	bsf	intcon,7,c	;volatile
  1011  0016BE  0012               	return		;funcret
  1012  0016C0                     __end_of_initTimer:
  1013                           	opt stack 0
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           intcon	equ	0xFF2
  1019                           postinc0	equ	0xFEE
  1020                           wreg	equ	0xFE8
  1021                           postdec1	equ	0xFE5
  1022                           fsr1l	equ	0xFE1
  1023                           postinc2	equ	0xFDE
  1024                           postdec2	equ	0xFDD
  1025                           fsr2h	equ	0xFDA
  1026                           fsr2l	equ	0xFD9
  1027                           status	equ	0xFD8
  1028                           
  1029 ;; *************** function _digitalWrite *****************
  1030 ;; Defined at:
  1031 ;;		line 53 in file "iopin.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  port            2   40[COMRAM] int 
  1034 ;;  pin             2   42[COMRAM] int 
  1035 ;;  val             2   44[COMRAM] int 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1047 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;Total ram usage:        9 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    3
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_initServo
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text5
  1062  001386                     __ptext5:
  1063                           	opt stack 0
  1064  001386                     _digitalWrite:
  1065                           	opt stack 26
  1066                           
  1067                           ;iopin.c: 54: pin = 1 << pin;
  1068                           
  1069                           ;incstack = 0
  1070  001386  C02B  F02F         	movff	digitalWrite@pin,??_digitalWrite
  1071  00138A  0E01               	movlw	1
  1072  00138C  6E30               	movwf	(??_digitalWrite+1)& (0+255),c
  1073  00138E  0E00               	movlw	0
  1074  001390  6E31               	movwf	(??_digitalWrite+2)& (0+255),c
  1075  001392  2A2F               	incf	??_digitalWrite,f,c
  1076  001394  D003               	goto	u654
  1077  001396                     u655:
  1078  001396  90D8               	bcf	status,0,c
  1079  001398  3630               	rlcf	??_digitalWrite+1,f,c
  1080  00139A  3631               	rlcf	??_digitalWrite+2,f,c
  1081  00139C                     u654:
  1082  00139C  2E2F               	decfsz	??_digitalWrite,f,c
  1083  00139E  D7FB               	goto	u655
  1084  0013A0  C030  F02B         	movff	??_digitalWrite+1,digitalWrite@pin
  1085  0013A4  C031  F02C         	movff	??_digitalWrite+2,digitalWrite@pin+1
  1086                           
  1087                           ;iopin.c: 55: if(val == 0){
  1088  0013A8  502D               	movf	digitalWrite@val,w,c
  1089  0013AA  102E               	iorwf	digitalWrite@val+1,w,c
  1090  0013AC  A4D8               	btfss	status,2,c
  1091  0013AE  D02B               	goto	l1682
  1092                           
  1093                           ;iopin.c: 56: pin ^= 0xff;
  1094  0013B0  0EFF               	movlw	255
  1095  0013B2  1A2B               	xorwf	digitalWrite@pin,f,c
  1096                           
  1097                           ;iopin.c: 57: }
  1098                           ;iopin.c: 59: switch(port){
  1099  0013B4  D028               	goto	l1682
  1100  0013B6                     l1658:
  1101  0013B6  042D               	decf	digitalWrite@val,w,c
  1102  0013B8  102E               	iorwf	digitalWrite@val+1,w,c
  1103  0013BA  A4D8               	btfss	status,2,c
  1104  0013BC  D003               	goto	l1662
  1105  0013BE  502B               	movf	digitalWrite@pin,w,c
  1106  0013C0  1289               	iorwf	3977,f,c	;volatile
  1107  0013C2  0012               	return	
  1108  0013C4                     l1662:
  1109                           
  1110                           ;iopin.c: 61: else LATA &= pin;
  1111  0013C4  502B               	movf	digitalWrite@pin,w,c
  1112  0013C6  1689               	andwf	3977,f,c	;volatile
  1113                           
  1114                           ;iopin.c: 62: break;
  1115  0013C8  0012               	return	
  1116  0013CA                     l1664:
  1117  0013CA  042D               	decf	digitalWrite@val,w,c
  1118  0013CC  102E               	iorwf	digitalWrite@val+1,w,c
  1119  0013CE  A4D8               	btfss	status,2,c
  1120  0013D0  D003               	goto	l1668
  1121  0013D2  502B               	movf	digitalWrite@pin,w,c
  1122  0013D4  128A               	iorwf	3978,f,c	;volatile
  1123  0013D6  0012               	return	
  1124  0013D8                     l1668:
  1125                           
  1126                           ;iopin.c: 64: else LATB &= pin;
  1127  0013D8  502B               	movf	digitalWrite@pin,w,c
  1128  0013DA  168A               	andwf	3978,f,c	;volatile
  1129                           
  1130                           ;iopin.c: 65: break;
  1131  0013DC  0012               	return	
  1132  0013DE                     l1670:
  1133  0013DE  042D               	decf	digitalWrite@val,w,c
  1134  0013E0  102E               	iorwf	digitalWrite@val+1,w,c
  1135  0013E2  A4D8               	btfss	status,2,c
  1136  0013E4  D003               	goto	l1674
  1137  0013E6  502B               	movf	digitalWrite@pin,w,c
  1138  0013E8  128B               	iorwf	3979,f,c	;volatile
  1139  0013EA  0012               	return	
  1140  0013EC                     l1674:
  1141                           
  1142                           ;iopin.c: 67: else LATC &= pin;
  1143  0013EC  502B               	movf	digitalWrite@pin,w,c
  1144  0013EE  168B               	andwf	3979,f,c	;volatile
  1145                           
  1146                           ;iopin.c: 68: break;
  1147  0013F0  0012               	return	
  1148  0013F2                     l1676:
  1149  0013F2  042D               	decf	digitalWrite@val,w,c
  1150  0013F4  102E               	iorwf	digitalWrite@val+1,w,c
  1151  0013F6  A4D8               	btfss	status,2,c
  1152  0013F8  D003               	goto	l1680
  1153  0013FA  502B               	movf	digitalWrite@pin,w,c
  1154  0013FC  128C               	iorwf	3980,f,c	;volatile
  1155  0013FE  0012               	return	
  1156  001400                     l1680:
  1157                           
  1158                           ;iopin.c: 70: else LATD &= pin;
  1159  001400  502B               	movf	digitalWrite@pin,w,c
  1160  001402  168C               	andwf	3980,f,c	;volatile
  1161                           
  1162                           ;iopin.c: 71: }
  1163  001404  0012               	return	
  1164  001406                     l1682:
  1165  001406  C029  F02F         	movff	digitalWrite@port,??_digitalWrite
  1166  00140A  C02A  F030         	movff	digitalWrite@port+1,??_digitalWrite+1
  1167                           
  1168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1169                           ; Switch size 1, requested type "space"
  1170                           ; Number of cases is 1, Range of values is 0 to 0
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            4     3 (average)
  1174                           ;	Chosen strategy is simple_byte
  1175  00140E  5030               	movf	??_digitalWrite+1,w,c
  1176  001410  0A00               	xorlw	0	; case 0
  1177  001412  A4D8               	btfss	status,2,c
  1178  001414  0012               	return	
  1179                           
  1180                           ; Switch size 1, requested type "space"
  1181                           ; Number of cases is 4, Range of values is 0 to 3
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte           13     7 (average)
  1185                           ;	Chosen strategy is simple_byte
  1186  001416  502F               	movf	??_digitalWrite,w,c
  1187  001418  0A00               	xorlw	0	; case 0
  1188  00141A  B4D8               	btfsc	status,2,c
  1189  00141C  D7CC               	goto	l1658
  1190  00141E  0A01               	xorlw	1	; case 1
  1191  001420  B4D8               	btfsc	status,2,c
  1192  001422  D7D3               	goto	l1664
  1193  001424  0A03               	xorlw	3	; case 2
  1194  001426  B4D8               	btfsc	status,2,c
  1195  001428  D7DA               	goto	l1670
  1196  00142A  0A01               	xorlw	1	; case 3
  1197  00142C  A4D8               	btfss	status,2,c
  1198  00142E  0012               	return	
  1199  001430  D7E0               	goto	l1676
  1200  001432                     __end_of_digitalWrite:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           intcon	equ	0xFF2
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1l	equ	0xFE1
  1211                           postinc2	equ	0xFDE
  1212                           postdec2	equ	0xFDD
  1213                           fsr2h	equ	0xFDA
  1214                           fsr2l	equ	0xFD9
  1215                           status	equ	0xFD8
  1216                           
  1217 ;; *************** function _initLCD *****************
  1218 ;; Defined at:
  1219 ;;		line 15 in file "lcd.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;Total ram usage:        1 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    5
  1240 ;; This function calls:
  1241 ;;		_lcdInst
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text6
  1248  0016C0                     __ptext6:
  1249                           	opt stack 0
  1250  0016C0                     _initLCD:
  1251                           	opt stack 25
  1252                           
  1253                           ;lcd.c: 17: _delay((unsigned long)((15)*(10000000/4000.0)));
  1254                           
  1255                           ;incstack = 0
  1256  0016C0  0E31               	movlw	49
  1257  0016C2  6E2D               	movwf	??_initLCD& (0+255),c
  1258  0016C4  0EB2               	movlw	178
  1259  0016C6                     u937:
  1260  0016C6  2EE8               	decfsz	wreg,f,c
  1261  0016C8  D7FE               	bra	u937
  1262  0016CA  2E2D               	decfsz	??_initLCD& (0+255),f,c
  1263  0016CC  D7FC               	bra	u937
  1264  0016CE  D000               	nop2	
  1265                           
  1266                           ;lcd.c: 18: lcdInst(0b00110011);
  1267  0016D0  0E33               	movlw	51
  1268  0016D2  ECDF  F00B         	call	_lcdInst
  1269                           
  1270                           ;lcd.c: 19: lcdInst(0b00110010);
  1271  0016D6  0E32               	movlw	50
  1272  0016D8  ECDF  F00B         	call	_lcdInst
  1273                           
  1274                           ;lcd.c: 20: lcdInst(0b00101000);
  1275  0016DC  0E28               	movlw	40
  1276  0016DE  ECDF  F00B         	call	_lcdInst
  1277                           
  1278                           ;lcd.c: 21: lcdInst(0b00001111);
  1279  0016E2  0E0F               	movlw	15
  1280  0016E4  ECDF  F00B         	call	_lcdInst
  1281                           
  1282                           ;lcd.c: 22: lcdInst(0b00000110);
  1283  0016E8  0E06               	movlw	6
  1284  0016EA  ECDF  F00B         	call	_lcdInst
  1285                           
  1286                           ;lcd.c: 23: lcdInst(0b00000001);
  1287  0016EE  0E01               	movlw	1
  1288  0016F0  ECDF  F00B         	call	_lcdInst
  1289                           
  1290                           ;lcd.c: 24: _delay((unsigned long)((15)*(10000000/4000.0)));
  1291  0016F4  0E31               	movlw	49
  1292  0016F6  6E2D               	movwf	??_initLCD& (0+255),c
  1293  0016F8  0EB2               	movlw	178
  1294  0016FA                     u947:
  1295  0016FA  2EE8               	decfsz	wreg,f,c
  1296  0016FC  D7FE               	bra	u947
  1297  0016FE  2E2D               	decfsz	??_initLCD& (0+255),f,c
  1298  001700  D7FC               	bra	u947
  1299  001702  D000               	nop2	
  1300  001704  0012               	return		;funcret
  1301  001706                     __end_of_initLCD:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           intcon	equ	0xFF2
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           fsr1l	equ	0xFE1
  1312                           postinc2	equ	0xFDE
  1313                           postdec2	equ	0xFDD
  1314                           fsr2h	equ	0xFDA
  1315                           fsr2l	equ	0xFD9
  1316                           status	equ	0xFD8
  1317                           
  1318 ;; *************** function _lcdInst *****************
  1319 ;; Defined at:
  1320 ;;		line 27 in file "lcd.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  data            1    wreg     unsigned char 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  data            1   43[COMRAM] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    4
  1341 ;; This function calls:
  1342 ;;		_lcdNibble
  1343 ;; This function is called by:
  1344 ;;		_initLCD
  1345 ;;		_lcdHome
  1346 ;;		_lcdClear
  1347 ;;		_lcdNewline
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text7
  1352  0017BE                     __ptext7:
  1353                           	opt stack 0
  1354  0017BE                     _lcdInst:
  1355                           	opt stack 25
  1356                           
  1357                           ;incstack = 0
  1358                           ;lcdInst@data stored from wreg
  1359  0017BE  6E2C               	movwf	lcdInst@data,c
  1360                           
  1361                           ;lcd.c: 28: LATDbits.LATD2 = 0;
  1362  0017C0  948C               	bcf	3980,2,c	;volatile
  1363                           
  1364                           ;lcd.c: 29: _delay((unsigned long)((140)*(10000000/4000000.0)));
  1365  0017C2  0E74               	movlw	116
  1366  0017C4                     u957:
  1367  0017C4  2EE8               	decfsz	wreg,f,c
  1368  0017C6  D7FE               	bra	u957
  1369  0017C8  D000               	nop2	
  1370                           
  1371                           ;lcd.c: 30: lcdNibble(data);
  1372  0017CA  502C               	movf	lcdInst@data,w,c
  1373  0017CC  ECBE  F00A         	call	_lcdNibble
  1374                           
  1375                           ;lcd.c: 31: _delay((unsigned long)((1000)*(10000000/4000000.0)));
  1376  0017D0  0E04               	movlw	4
  1377  0017D2  6E2B               	movwf	??_lcdInst& (0+255),c
  1378  0017D4  0E3E               	movlw	62
  1379  0017D6                     u967:
  1380  0017D6  2EE8               	decfsz	wreg,f,c
  1381  0017D8  D7FE               	bra	u967
  1382  0017DA  2E2B               	decfsz	??_lcdInst& (0+255),f,c
  1383  0017DC  D7FC               	bra	u967
  1384  0017DE  0012               	return		;funcret
  1385  0017E0                     __end_of_lcdInst:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           intcon	equ	0xFF2
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           postdec1	equ	0xFE5
  1395                           fsr1l	equ	0xFE1
  1396                           postinc2	equ	0xFDE
  1397                           postdec2	equ	0xFDD
  1398                           fsr2h	equ	0xFDA
  1399                           fsr2l	equ	0xFD9
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _lcdNibble *****************
  1403 ;; Defined at:
  1404 ;;		line 46 in file "lcd.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  data            1    wreg     unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  data            1   41[COMRAM] unsigned char 
  1409 ;;  temp            1   40[COMRAM] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;Total ram usage:        2 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    3
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_lcdInst
  1430 ;;		_putch
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text8
  1435  00157C                     __ptext8:
  1436                           	opt stack 0
  1437  00157C                     _lcdNibble:
  1438                           	opt stack 25
  1439                           
  1440                           ;incstack = 0
  1441                           ;lcdNibble@data stored from wreg
  1442  00157C  6E2A               	movwf	lcdNibble@data,c
  1443                           
  1444                           ;lcd.c: 48: char temp = data & 0xF0;
  1445  00157E  502A               	movf	lcdNibble@data,w,c
  1446  001580  0BF0               	andlw	240
  1447  001582  6E29               	movwf	lcdNibble@temp,c
  1448                           
  1449                           ;lcd.c: 49: LATD = LATD & 0x0F;
  1450  001584  508C               	movf	3980,w,c	;volatile
  1451  001586  0B0F               	andlw	15
  1452  001588  6E8C               	movwf	3980,c	;volatile
  1453                           
  1454                           ;lcd.c: 50: LATD = temp | LATD;
  1455  00158A  5029               	movf	lcdNibble@temp,w,c
  1456  00158C  108C               	iorwf	3980,w,c	;volatile
  1457  00158E  6E8C               	movwf	3980,c	;volatile
  1458                           
  1459                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  1460  001590  968C               	bcf	3980,3,c	;volatile
  1461                           
  1462                           ;lcd.c: 53: _delay((unsigned long)((600)*(10000000/4000000.0)));
  1463  001592  0ED6               	movlw	214
  1464  001594                     u977:
  1465  001594  D000               	nop2	
  1466  001596  D000               	nop2	
  1467  001598  2EE8               	decfsz	wreg,f,c
  1468  00159A  D7FC               	bra	u977
  1469  00159C  D000               	nop2	
  1470                           
  1471                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  1472  00159E  868C               	bsf	3980,3,c	;volatile
  1473                           
  1474                           ;lcd.c: 55: _delay((unsigned long)((600)*(10000000/4000000.0)));
  1475  0015A0  0ED6               	movlw	214
  1476  0015A2                     u987:
  1477  0015A2  D000               	nop2	
  1478  0015A4  D000               	nop2	
  1479  0015A6  2EE8               	decfsz	wreg,f,c
  1480  0015A8  D7FC               	bra	u987
  1481  0015AA  D000               	nop2	
  1482                           
  1483                           ;lcd.c: 58: data = data << 4;
  1484  0015AC  382A               	swapf	lcdNibble@data,w,c
  1485  0015AE  0BF0               	andlw	240
  1486  0015B0  6E2A               	movwf	lcdNibble@data,c
  1487                           
  1488                           ;lcd.c: 60: temp = data & 0xF0;
  1489  0015B2  502A               	movf	lcdNibble@data,w,c
  1490  0015B4  0BF0               	andlw	240
  1491  0015B6  6E29               	movwf	lcdNibble@temp,c
  1492                           
  1493                           ;lcd.c: 61: LATD = LATD & 0x0F;
  1494  0015B8  508C               	movf	3980,w,c	;volatile
  1495  0015BA  0B0F               	andlw	15
  1496  0015BC  6E8C               	movwf	3980,c	;volatile
  1497                           
  1498                           ;lcd.c: 62: LATD = temp | LATD;
  1499  0015BE  5029               	movf	lcdNibble@temp,w,c
  1500  0015C0  108C               	iorwf	3980,w,c	;volatile
  1501  0015C2  6E8C               	movwf	3980,c	;volatile
  1502                           
  1503                           ;lcd.c: 64: LATDbits.LATD3 = 0;
  1504  0015C4  968C               	bcf	3980,3,c	;volatile
  1505                           
  1506                           ;lcd.c: 65: _delay((unsigned long)((600)*(10000000/4000000.0)));
  1507  0015C6  0ED6               	movlw	214
  1508  0015C8                     u997:
  1509  0015C8  D000               	nop2	
  1510  0015CA  D000               	nop2	
  1511  0015CC  2EE8               	decfsz	wreg,f,c
  1512  0015CE  D7FC               	bra	u997
  1513  0015D0  D000               	nop2	
  1514                           
  1515                           ;lcd.c: 66: LATDbits.LATD3 = 1;
  1516  0015D2  868C               	bsf	3980,3,c	;volatile
  1517                           
  1518                           ;lcd.c: 67: _delay((unsigned long)((600)*(10000000/4000000.0)));
  1519  0015D4  0ED6               	movlw	214
  1520  0015D6                     u1007:
  1521  0015D6  D000               	nop2	
  1522  0015D8  D000               	nop2	
  1523  0015DA  2EE8               	decfsz	wreg,f,c
  1524  0015DC  D7FC               	bra	u1007
  1525  0015DE  D000               	nop2	
  1526  0015E0  0012               	return		;funcret
  1527  0015E2                     __end_of_lcdNibble:
  1528                           	opt stack 0
  1529                           tblptru	equ	0xFF8
  1530                           tblptrh	equ	0xFF7
  1531                           tblptrl	equ	0xFF6
  1532                           tablat	equ	0xFF5
  1533                           intcon	equ	0xFF2
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           postdec1	equ	0xFE5
  1537                           fsr1l	equ	0xFE1
  1538                           postinc2	equ	0xFDE
  1539                           postdec2	equ	0xFDD
  1540                           fsr2h	equ	0xFDA
  1541                           fsr2l	equ	0xFD9
  1542                           status	equ	0xFD8
  1543                           
  1544 ;; *************** function _service *****************
  1545 ;; Defined at:
  1546 ;;		line 71 in file "main.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  key             1   39[COMRAM] unsigned char 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;Total ram usage:       15 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    2
  1567 ;; This function calls:
  1568 ;;		_servoInterruptService
  1569 ;; This function is called by:
  1570 ;;		Interrupt level 2
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	intcode
  1575  000008                     __pintcode:
  1576                           	opt stack 0
  1577  000008                     _service:
  1578                           	opt stack 25
  1579                           
  1580                           ;incstack = 0
  1581  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1582  00000A  EDFC  F008         	call	int_func,f	;refresh shadow registers
  1583                           tblptru	equ	0xFF8
  1584                           tblptrh	equ	0xFF7
  1585                           tblptrl	equ	0xFF6
  1586                           tablat	equ	0xFF5
  1587                           intcon	equ	0xFF2
  1588                           postinc0	equ	0xFEE
  1589                           wreg	equ	0xFE8
  1590                           postdec1	equ	0xFE5
  1591                           fsr1l	equ	0xFE1
  1592                           postinc2	equ	0xFDE
  1593                           postdec2	equ	0xFDD
  1594                           fsr2h	equ	0xFDA
  1595                           fsr2l	equ	0xFD9
  1596                           status	equ	0xFD8
  1597                           
  1598                           	psect	intcode_body
  1599  0011F8                     __pintcode_body:
  1600                           	opt stack 25
  1601  0011F8                     int_func:
  1602                           	opt stack 25
  1603  0011F8  0006               	pop		; remove dummy address from shadow register refresh
  1604  0011FA  CFFA F01A          	movff	pclath,??_service
  1605  0011FE  CFFB F01B          	movff	pclatu,??_service+1
  1606  001202  CFE9 F01C          	movff	fsr0l,??_service+2
  1607  001206  CFEA F01D          	movff	fsr0h,??_service+3
  1608  00120A  CFE1 F01E          	movff	fsr1l,??_service+4
  1609  00120E  CFE2 F01F          	movff	fsr1h,??_service+5
  1610  001212  CFD9 F020          	movff	fsr2l,??_service+6
  1611  001216  CFDA F021          	movff	fsr2h,??_service+7
  1612  00121A  CFF3 F022          	movff	prodl,??_service+8
  1613  00121E  CFF4 F023          	movff	prodh,??_service+9
  1614  001222  CFF6 F024          	movff	tblptrl,??_service+10
  1615  001226  CFF7 F025          	movff	tblptrh,??_service+11
  1616  00122A  CFF8 F026          	movff	tblptru,??_service+12
  1617  00122E  CFF5 F027          	movff	tablat,??_service+13
  1618                           
  1619                           ;main.c: 73: servoInterruptService(angle);
  1620  001232  C04C  F00A         	movff	_angle,servoInterruptService@time
  1621  001236  C04D  F00B         	movff	_angle+1,servoInterruptService@time+1
  1622  00123A  C04E  F00C         	movff	_angle+2,servoInterruptService@time+2
  1623  00123E  C04F  F00D         	movff	_angle+3,servoInterruptService@time+3
  1624  001242  EC22  F008         	call	_servoInterruptService	;wreg free
  1625                           
  1626                           ;main.c: 76: if(INT1IF){INT1IF = 0;
  1627  001246  A0F0               	btfss	intcon3,0,c	;volatile
  1628  001248  D027               	goto	i2l60
  1629  00124A  90F0               	bcf	intcon3,0,c	;volatile
  1630                           
  1631                           ;main.c: 77: char key = (PORTB & 0xF0) >> 4;
  1632  00124C  3881               	swapf	3969,w,c	;volatile
  1633  00124E  0B0F               	andlw	15
  1634  001250  0B0F               	andlw	15
  1635  001252  6E28               	movwf	service@key,c
  1636                           
  1637                           ;main.c: 78: if(key == 0)angle = 64285;
  1638  001254  5028               	movf	service@key,w,c
  1639  001256  A4D8               	btfss	status,2,c
  1640  001258  D008               	goto	i2l1832
  1641  00125A  0E1D               	movlw	29
  1642  00125C  6E4C               	movwf	_angle,c
  1643  00125E  0EFB               	movlw	251
  1644  001260  6E4D               	movwf	_angle+1,c
  1645  001262  0E00               	movlw	0
  1646  001264  6E4E               	movwf	_angle+2,c
  1647  001266  0E00               	movlw	0
  1648  001268  6E4F               	movwf	_angle+3,c
  1649  00126A                     i2l1832:
  1650                           
  1651                           ;main.c: 79: if(key == 1)angle = 61785;
  1652  00126A  0428               	decf	service@key,w,c
  1653  00126C  A4D8               	btfss	status,2,c
  1654  00126E  D008               	goto	i2l1836
  1655  001270  0E59               	movlw	89
  1656  001272  6E4C               	movwf	_angle,c
  1657  001274  0EF1               	movlw	241
  1658  001276  6E4D               	movwf	_angle+1,c
  1659  001278  0E00               	movlw	0
  1660  00127A  6E4E               	movwf	_angle+2,c
  1661  00127C  0E00               	movlw	0
  1662  00127E  6E4F               	movwf	_angle+3,c
  1663  001280                     i2l1836:
  1664                           
  1665                           ;main.c: 80: if(key == 2)angle = 59285;
  1666  001280  0E02               	movlw	2
  1667  001282  1828               	xorwf	service@key,w,c
  1668  001284  A4D8               	btfss	status,2,c
  1669  001286  D008               	goto	i2l60
  1670  001288  0E95               	movlw	149
  1671  00128A  6E4C               	movwf	_angle,c
  1672  00128C  0EE7               	movlw	231
  1673  00128E  6E4D               	movwf	_angle+1,c
  1674  001290  0E00               	movlw	0
  1675  001292  6E4E               	movwf	_angle+2,c
  1676  001294  0E00               	movlw	0
  1677  001296  6E4F               	movwf	_angle+3,c
  1678  001298                     i2l60:
  1679  001298  C027  FFF5         	movff	??_service+13,tablat
  1680  00129C  C026  FFF8         	movff	??_service+12,tblptru
  1681  0012A0  C025  FFF7         	movff	??_service+11,tblptrh
  1682  0012A4  C024  FFF6         	movff	??_service+10,tblptrl
  1683  0012A8  C023  FFF4         	movff	??_service+9,prodh
  1684  0012AC  C022  FFF3         	movff	??_service+8,prodl
  1685  0012B0  C021  FFDA         	movff	??_service+7,fsr2h
  1686  0012B4  C020  FFD9         	movff	??_service+6,fsr2l
  1687  0012B8  C01F  FFE2         	movff	??_service+5,fsr1h
  1688  0012BC  C01E  FFE1         	movff	??_service+4,fsr1l
  1689  0012C0  C01D  FFEA         	movff	??_service+3,fsr0h
  1690  0012C4  C01C  FFE9         	movff	??_service+2,fsr0l
  1691  0012C8  C01B  FFFB         	movff	??_service+1,pclatu
  1692  0012CC  C01A  FFFA         	movff	??_service,pclath
  1693  0012D0  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1694  0012D2  0011               	retfie		f
  1695  0012D4                     __end_of_service:
  1696                           	opt stack 0
  1697                           pclatu	equ	0xFFB
  1698                           pclath	equ	0xFFA
  1699                           tblptru	equ	0xFF8
  1700                           tblptrh	equ	0xFF7
  1701                           tblptrl	equ	0xFF6
  1702                           tablat	equ	0xFF5
  1703                           prodh	equ	0xFF4
  1704                           prodl	equ	0xFF3
  1705                           intcon	equ	0xFF2
  1706                           intcon3	equ	0xFF0
  1707                           postinc0	equ	0xFEE
  1708                           fsr0h	equ	0xFEA
  1709                           fsr0l	equ	0xFE9
  1710                           wreg	equ	0xFE8
  1711                           postdec1	equ	0xFE5
  1712                           fsr1h	equ	0xFE2
  1713                           fsr1l	equ	0xFE1
  1714                           postinc2	equ	0xFDE
  1715                           postdec2	equ	0xFDD
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _servoInterruptService *****************
  1721 ;; Defined at:
  1722 ;;		line 24 in file "servo.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  time            4    9[COMRAM] long 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  i               2   23[COMRAM] int 
  1727 ;;  flags           8   15[COMRAM] int [4]
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:       16 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		_digitalRead
  1746 ;;		i2_digitalWrite
  1747 ;;		i2_startTimer
  1748 ;; This function is called by:
  1749 ;;		_service
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text10
  1754  001044                     __ptext10:
  1755                           	opt stack 0
  1756  001044                     _servoInterruptService:
  1757                           	opt stack 25
  1758                           
  1759                           ;servo.c: 26: int flags[4];
  1760                           ;servo.c: 27: flags[0] = TMR0IF;
  1761                           
  1762                           ;incstack = 0
  1763  001044  A4F2               	btfss	intcon,2,c	;volatile
  1764  001046  D002               	goto	i2u77_40
  1765  001048  0E01               	movlw	1
  1766  00104A  D001               	goto	i2u78_40
  1767  00104C                     i2u77_40:
  1768  00104C  0E00               	movlw	0
  1769  00104E                     i2u78_40:
  1770  00104E  6E10               	movwf	servoInterruptService@flags,c
  1771  001050  6A11               	clrf	servoInterruptService@flags+1,c
  1772                           
  1773                           ;servo.c: 28: flags[1] = TMR1IF;
  1774  001052  A09E               	btfss	3998,0,c	;volatile
  1775  001054  D002               	goto	i2u79_40
  1776  001056  0E01               	movlw	1
  1777  001058  D001               	goto	i2u80_40
  1778  00105A                     i2u79_40:
  1779  00105A  0E00               	movlw	0
  1780  00105C                     i2u80_40:
  1781  00105C  6E12               	movwf	servoInterruptService@flags+2,c
  1782  00105E  6A13               	clrf	servoInterruptService@flags+3,c
  1783                           
  1784                           ;servo.c: 29: flags[2] = TMR2IF;
  1785  001060  A29E               	btfss	3998,1,c	;volatile
  1786  001062  D002               	goto	i2u81_40
  1787  001064  0E01               	movlw	1
  1788  001066  D001               	goto	i2u82_40
  1789  001068                     i2u81_40:
  1790  001068  0E00               	movlw	0
  1791  00106A                     i2u82_40:
  1792  00106A  6E14               	movwf	servoInterruptService@flags+4,c
  1793  00106C  6A15               	clrf	servoInterruptService@flags+5,c
  1794                           
  1795                           ;servo.c: 30: flags[3] = TMR3IF;
  1796  00106E  A2A1               	btfss	4001,1,c	;volatile
  1797  001070  D002               	goto	i2u83_40
  1798  001072  0E01               	movlw	1
  1799  001074  D001               	goto	i2u84_40
  1800  001076                     i2u83_40:
  1801  001076  0E00               	movlw	0
  1802  001078                     i2u84_40:
  1803  001078  6E16               	movwf	servoInterruptService@flags+6,c
  1804  00107A  6A17               	clrf	servoInterruptService@flags+7,c
  1805                           
  1806                           ;servo.c: 32: for(int i = 0; i < 4; i++){
  1807  00107C  0E00               	movlw	0
  1808  00107E  6E19               	movwf	servoInterruptService@i+1,c
  1809  001080  0E00               	movlw	0
  1810  001082  6E18               	movwf	servoInterruptService@i,c
  1811  001084  BE19               	btfsc	servoInterruptService@i+1,7,c
  1812  001086  D008               	goto	i2l1788
  1813  001088  5019               	movf	servoInterruptService@i+1,w,c
  1814  00108A  E105               	bnz	i2u85_40
  1815  00108C  0E04               	movlw	4
  1816  00108E  5C18               	subwf	servoInterruptService@i,w,c
  1817  001090  B0D8               	btfsc	status,0,c
  1818  001092  0012               	return	
  1819  001094  D001               	goto	i2l1788
  1820  001096                     i2u85_40:
  1821  001096  0012               	return	
  1822  001098                     i2l1788:
  1823                           
  1824                           ;servo.c: 33: if(flags[i]){
  1825  001098  90D8               	bcf	status,0,c
  1826  00109A  3418               	rlcf	servoInterruptService@i,w,c
  1827  00109C  6ED9               	movwf	fsr2l,c
  1828  00109E  3419               	rlcf	servoInterruptService@i+1,w,c
  1829  0010A0  6EDA               	movwf	fsr2h,c
  1830  0010A2  0E10               	movlw	low servoInterruptService@flags
  1831  0010A4  26D9               	addwf	fsr2l,f,c
  1832  0010A6  0E00               	movlw	high servoInterruptService@flags
  1833  0010A8  22DA               	addwfc	fsr2h,f,c
  1834  0010AA  50DE               	movf	postinc2,w,c
  1835  0010AC  10DE               	iorwf	postinc2,w,c
  1836  0010AE  B4D8               	btfsc	status,2,c
  1837  0010B0  D09B               	goto	i2l1804
  1838                           
  1839                           ;servo.c: 35: if(digitalRead(port[i],pin[i])){
  1840  0010B2  90D8               	bcf	status,0,c
  1841  0010B4  3418               	rlcf	servoInterruptService@i,w,c
  1842  0010B6  6ED9               	movwf	fsr2l,c
  1843  0010B8  3419               	rlcf	servoInterruptService@i+1,w,c
  1844  0010BA  6EDA               	movwf	fsr2h,c
  1845  0010BC  0E40               	movlw	low _port
  1846  0010BE  26D9               	addwf	fsr2l,f,c
  1847  0010C0  0E00               	movlw	high _port
  1848  0010C2  22DA               	addwfc	fsr2h,f,c
  1849  0010C4  CFDE F001          	movff	postinc2,digitalRead@port
  1850  0010C8  CFDD F002          	movff	postdec2,digitalRead@port+1
  1851  0010CC  90D8               	bcf	status,0,c
  1852  0010CE  3418               	rlcf	servoInterruptService@i,w,c
  1853  0010D0  6ED9               	movwf	fsr2l,c
  1854  0010D2  3419               	rlcf	servoInterruptService@i+1,w,c
  1855  0010D4  6EDA               	movwf	fsr2h,c
  1856  0010D6  0E38               	movlw	low _pin
  1857  0010D8  26D9               	addwf	fsr2l,f,c
  1858  0010DA  0E00               	movlw	high _pin
  1859  0010DC  22DA               	addwfc	fsr2h,f,c
  1860  0010DE  CFDE F003          	movff	postinc2,digitalRead@pin
  1861  0010E2  CFDD F004          	movff	postdec2,digitalRead@pin+1
  1862  0010E6  EC6A  F009         	call	_digitalRead	;wreg free
  1863  0010EA  5001               	movf	?_digitalRead,w,c
  1864  0010EC  1002               	iorwf	?_digitalRead+1,w,c
  1865  0010EE  B4D8               	btfsc	status,2,c
  1866  0010F0  D02F               	goto	i2l1796
  1867                           
  1868                           ;servo.c: 36: startTimer(i,15535);
  1869  0010F2  C018  F001         	movff	servoInterruptService@i,i2startTimer@timer
  1870  0010F6  C019  F002         	movff	servoInterruptService@i+1,i2startTimer@timer+1
  1871  0010FA  0EAF               	movlw	175
  1872  0010FC  6E03               	movwf	i2startTimer@val,c
  1873  0010FE  0E3C               	movlw	60
  1874  001100  6E04               	movwf	i2startTimer@val+1,c
  1875  001102  0E00               	movlw	0
  1876  001104  6E05               	movwf	i2startTimer@val+2,c
  1877  001106  0E00               	movlw	0
  1878  001108  6E06               	movwf	i2startTimer@val+3,c
  1879  00110A  EC17  F00B         	call	i2_startTimer	;wreg free
  1880                           
  1881                           ;servo.c: 37: digitalWrite(port[i],pin[i],0);
  1882  00110E  90D8               	bcf	status,0,c
  1883  001110  3418               	rlcf	servoInterruptService@i,w,c
  1884  001112  6ED9               	movwf	fsr2l,c
  1885  001114  3419               	rlcf	servoInterruptService@i+1,w,c
  1886  001116  6EDA               	movwf	fsr2h,c
  1887  001118  0E40               	movlw	low _port
  1888  00111A  26D9               	addwf	fsr2l,f,c
  1889  00111C  0E00               	movlw	high _port
  1890  00111E  22DA               	addwfc	fsr2h,f,c
  1891  001120  CFDE F001          	movff	postinc2,i2digitalWrite@port
  1892  001124  CFDD F002          	movff	postdec2,i2digitalWrite@port+1
  1893  001128  90D8               	bcf	status,0,c
  1894  00112A  3418               	rlcf	servoInterruptService@i,w,c
  1895  00112C  6ED9               	movwf	fsr2l,c
  1896  00112E  3419               	rlcf	servoInterruptService@i+1,w,c
  1897  001130  6EDA               	movwf	fsr2h,c
  1898  001132  0E38               	movlw	low _pin
  1899  001134  26D9               	addwf	fsr2l,f,c
  1900  001136  0E00               	movlw	high _pin
  1901  001138  22DA               	addwfc	fsr2h,f,c
  1902  00113A  CFDE F003          	movff	postinc2,i2digitalWrite@pin
  1903  00113E  CFDD F004          	movff	postdec2,i2digitalWrite@pin+1
  1904  001142  0E00               	movlw	0
  1905  001144  6E06               	movwf	i2digitalWrite@val+1,c
  1906  001146  0E00               	movlw	0
  1907  001148  6E05               	movwf	i2digitalWrite@val,c
  1908  00114A  EC19  F00A         	call	i2_digitalWrite	;wreg free
  1909                           
  1910                           ;servo.c: 38: }
  1911  00114E  D037               	goto	i2l1802
  1912  001150                     i2l1796:
  1913                           
  1914                           ;servo.c: 39: else{
  1915                           ;servo.c: 40: startTimer(i,time);
  1916  001150  C018  F001         	movff	servoInterruptService@i,i2startTimer@timer
  1917  001154  C019  F002         	movff	servoInterruptService@i+1,i2startTimer@timer+1
  1918  001158  C00A  F003         	movff	servoInterruptService@time,i2startTimer@val
  1919  00115C  C00B  F004         	movff	servoInterruptService@time+1,i2startTimer@val+1
  1920  001160  C00C  F005         	movff	servoInterruptService@time+2,i2startTimer@val+2
  1921  001164  C00D  F006         	movff	servoInterruptService@time+3,i2startTimer@val+3
  1922  001168  EC17  F00B         	call	i2_startTimer	;wreg free
  1923                           
  1924                           ;servo.c: 41: digitalWrite(port[i],pin[i],1);
  1925  00116C  90D8               	bcf	status,0,c
  1926  00116E  3418               	rlcf	servoInterruptService@i,w,c
  1927  001170  6ED9               	movwf	fsr2l,c
  1928  001172  3419               	rlcf	servoInterruptService@i+1,w,c
  1929  001174  6EDA               	movwf	fsr2h,c
  1930  001176  0E40               	movlw	low _port
  1931  001178  26D9               	addwf	fsr2l,f,c
  1932  00117A  0E00               	movlw	high _port
  1933  00117C  22DA               	addwfc	fsr2h,f,c
  1934  00117E  CFDE F001          	movff	postinc2,i2digitalWrite@port
  1935  001182  CFDD F002          	movff	postdec2,i2digitalWrite@port+1
  1936  001186  90D8               	bcf	status,0,c
  1937  001188  3418               	rlcf	servoInterruptService@i,w,c
  1938  00118A  6ED9               	movwf	fsr2l,c
  1939  00118C  3419               	rlcf	servoInterruptService@i+1,w,c
  1940  00118E  6EDA               	movwf	fsr2h,c
  1941  001190  0E38               	movlw	low _pin
  1942  001192  26D9               	addwf	fsr2l,f,c
  1943  001194  0E00               	movlw	high _pin
  1944  001196  22DA               	addwfc	fsr2h,f,c
  1945  001198  CFDE F003          	movff	postinc2,i2digitalWrite@pin
  1946  00119C  CFDD F004          	movff	postdec2,i2digitalWrite@pin+1
  1947  0011A0  0E00               	movlw	0
  1948  0011A2  6E06               	movwf	i2digitalWrite@val+1,c
  1949  0011A4  0E01               	movlw	1
  1950  0011A6  6E05               	movwf	i2digitalWrite@val,c
  1951  0011A8  EC19  F00A         	call	i2_digitalWrite	;wreg free
  1952                           
  1953                           ;servo.c: 42: }
  1954                           ;servo.c: 45: switch(i){
  1955  0011AC  D008               	goto	i2l1802
  1956  0011AE                     i2l404:
  1957  0011AE  94F2               	bcf	intcon,2,c	;volatile
  1958  0011B0  D01B               	goto	i2l1804
  1959  0011B2                     i2l406:
  1960  0011B2  909E               	bcf	3998,0,c	;volatile
  1961  0011B4  D019               	goto	i2l1804
  1962  0011B6                     i2l407:
  1963  0011B6  929E               	bcf	3998,1,c	;volatile
  1964  0011B8  D017               	goto	i2l1804
  1965  0011BA                     i2l408:
  1966  0011BA  92A1               	bcf	4001,1,c	;volatile
  1967                           
  1968                           ;servo.c: 50: }
  1969  0011BC  D015               	goto	i2l1804
  1970  0011BE                     i2l1802:
  1971  0011BE  C018  F00E         	movff	servoInterruptService@i,??_servoInterruptService
  1972  0011C2  C019  F00F         	movff	servoInterruptService@i+1,??_servoInterruptService+1
  1973                           
  1974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1975                           ; Switch size 1, requested type "space"
  1976                           ; Number of cases is 1, Range of values is 0 to 0
  1977                           ; switch strategies available:
  1978                           ; Name         Instructions Cycles
  1979                           ; simple_byte            4     3 (average)
  1980                           ;	Chosen strategy is simple_byte
  1981  0011C6  500F               	movf	??_servoInterruptService+1,w,c
  1982  0011C8  0A00               	xorlw	0	; case 0
  1983  0011CA  A4D8               	btfss	status,2,c
  1984  0011CC  D00D               	goto	i2l1804
  1985                           
  1986                           ; Switch size 1, requested type "space"
  1987                           ; Number of cases is 4, Range of values is 0 to 3
  1988                           ; switch strategies available:
  1989                           ; Name         Instructions Cycles
  1990                           ; simple_byte           13     7 (average)
  1991                           ;	Chosen strategy is simple_byte
  1992  0011CE  500E               	movf	??_servoInterruptService,w,c
  1993  0011D0  0A00               	xorlw	0	; case 0
  1994  0011D2  B4D8               	btfsc	status,2,c
  1995  0011D4  D7EC               	goto	i2l404
  1996  0011D6  0A01               	xorlw	1	; case 1
  1997  0011D8  B4D8               	btfsc	status,2,c
  1998  0011DA  D7EB               	goto	i2l406
  1999  0011DC  0A03               	xorlw	3	; case 2
  2000  0011DE  B4D8               	btfsc	status,2,c
  2001  0011E0  D7EA               	goto	i2l407
  2002  0011E2  0A01               	xorlw	1	; case 3
  2003  0011E4  B4D8               	btfsc	status,2,c
  2004  0011E6  D7E9               	goto	i2l408
  2005  0011E8                     i2l1804:
  2006  0011E8  4A18               	infsnz	servoInterruptService@i,f,c
  2007  0011EA  2A19               	incf	servoInterruptService@i+1,f,c
  2008  0011EC  BE19               	btfsc	servoInterruptService@i+1,7,c
  2009  0011EE  D754               	goto	i2l1788
  2010  0011F0  5019               	movf	servoInterruptService@i+1,w,c
  2011  0011F2  E101               	bnz	i2l409
  2012  0011F4  D74B               	goto	L1
  2013  0011F6                     i2l409:
  2014  0011F6  0012               	return		;funcret
  2015  0011F8                     __end_of_servoInterruptService:
  2016                           	opt stack 0
  2017                           pclatu	equ	0xFFB
  2018                           pclath	equ	0xFFA
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           intcon	equ	0xFF2
  2026                           intcon3	equ	0xFF0
  2027                           postinc0	equ	0xFEE
  2028                           fsr0h	equ	0xFEA
  2029                           fsr0l	equ	0xFE9
  2030                           wreg	equ	0xFE8
  2031                           postdec1	equ	0xFE5
  2032                           fsr1h	equ	0xFE2
  2033                           fsr1l	equ	0xFE1
  2034                           postinc2	equ	0xFDE
  2035                           postdec2	equ	0xFDD
  2036                           fsr2h	equ	0xFDA
  2037                           fsr2l	equ	0xFD9
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function i2_startTimer *****************
  2041 ;; Defined at:
  2042 ;;		line 75 in file "timer.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  timer           2    0[COMRAM] int 
  2045 ;;  val             4    2[COMRAM] long 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2057 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;Total ram usage:        8 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_servoInterruptService
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text11
  2071  00162E                     __ptext11:
  2072                           	opt stack 0
  2073  00162E                     i2_startTimer:
  2074                           	opt stack 25
  2075                           
  2076                           ;timer.c: 76: switch(timer){
  2077                           
  2078                           ;incstack = 0
  2079  00162E  D012               	goto	i2l1768
  2080  001630                     i2l291:
  2081                           
  2082                           ;timer.c: 78: TMR0H = val>>8;
  2083  001630  C004  FFD7         	movff	i2startTimer@val+1,4055	;volatile
  2084                           
  2085                           ;timer.c: 79: TMR0L = val;
  2086  001634  C003  FFD6         	movff	i2startTimer@val,4054	;volatile
  2087                           
  2088                           ;timer.c: 80: T0CON |= 1<<7;
  2089  001638  8ED5               	bsf	4053,7,c	;volatile
  2090                           
  2091                           ;timer.c: 81: break;
  2092  00163A  0012               	return	
  2093  00163C                     i2l293:
  2094                           
  2095                           ;timer.c: 83: TMR1H = val>>8;
  2096  00163C  C004  FFCF         	movff	i2startTimer@val+1,4047	;volatile
  2097                           
  2098                           ;timer.c: 84: TMR1L = val;
  2099  001640  C003  FFCE         	movff	i2startTimer@val,4046	;volatile
  2100                           
  2101                           ;timer.c: 85: T1CON |= 1<<0;
  2102  001644  80CD               	bsf	4045,0,c	;volatile
  2103                           
  2104                           ;timer.c: 86: break;
  2105  001646  0012               	return	
  2106  001648                     i2l294:
  2107                           
  2108                           ;timer.c: 88: TMR3H = val>>8;
  2109  001648  C004  FFB3         	movff	i2startTimer@val+1,4019	;volatile
  2110                           
  2111                           ;timer.c: 89: TMR3L = val;
  2112  00164C  C003  FFB2         	movff	i2startTimer@val,4018	;volatile
  2113                           
  2114                           ;timer.c: 90: T3CON |= 1<<0;
  2115  001650  80B1               	bsf	4017,0,c	;volatile
  2116                           
  2117                           ;timer.c: 91: }
  2118  001652  0012               	return	
  2119  001654                     i2l1768:
  2120  001654  C001  F007         	movff	i2startTimer@timer,??i2_startTimer
  2121  001658  C002  F008         	movff	i2startTimer@timer+1,??i2_startTimer+1
  2122                           
  2123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2124                           ; Switch size 1, requested type "space"
  2125                           ; Number of cases is 1, Range of values is 0 to 0
  2126                           ; switch strategies available:
  2127                           ; Name         Instructions Cycles
  2128                           ; simple_byte            4     3 (average)
  2129                           ;	Chosen strategy is simple_byte
  2130  00165C  5008               	movf	??i2_startTimer+1,w,c
  2131  00165E  0A00               	xorlw	0	; case 0
  2132  001660  A4D8               	btfss	status,2,c
  2133  001662  0012               	return	
  2134                           
  2135                           ; Switch size 1, requested type "space"
  2136                           ; Number of cases is 3, Range of values is 0 to 3
  2137                           ; switch strategies available:
  2138                           ; Name         Instructions Cycles
  2139                           ; simple_byte           10     6 (average)
  2140                           ;	Chosen strategy is simple_byte
  2141  001664  5007               	movf	??i2_startTimer,w,c
  2142  001666  0A00               	xorlw	0	; case 0
  2143  001668  B4D8               	btfsc	status,2,c
  2144  00166A  D7E2               	goto	i2l291
  2145  00166C  0A01               	xorlw	1	; case 1
  2146  00166E  B4D8               	btfsc	status,2,c
  2147  001670  D7E5               	goto	i2l293
  2148  001672  0A02               	xorlw	2	; case 3
  2149  001674  A4D8               	btfss	status,2,c
  2150  001676  0012               	return	
  2151  001678  D7E7               	goto	i2l294
  2152  00167A                     __end_ofi2_startTimer:
  2153                           	opt stack 0
  2154                           pclatu	equ	0xFFB
  2155                           pclath	equ	0xFFA
  2156                           tblptru	equ	0xFF8
  2157                           tblptrh	equ	0xFF7
  2158                           tblptrl	equ	0xFF6
  2159                           tablat	equ	0xFF5
  2160                           prodh	equ	0xFF4
  2161                           prodl	equ	0xFF3
  2162                           intcon	equ	0xFF2
  2163                           intcon3	equ	0xFF0
  2164                           postinc0	equ	0xFEE
  2165                           fsr0h	equ	0xFEA
  2166                           fsr0l	equ	0xFE9
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1h	equ	0xFE2
  2170                           fsr1l	equ	0xFE1
  2171                           postinc2	equ	0xFDE
  2172                           postdec2	equ	0xFDD
  2173                           fsr2h	equ	0xFDA
  2174                           fsr2l	equ	0xFD9
  2175                           status	equ	0xFD8
  2176                           
  2177 ;; *************** function i2_digitalWrite *****************
  2178 ;; Defined at:
  2179 ;;		line 53 in file "iopin.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  port            2    0[COMRAM] int 
  2182 ;;  pin             2    2[COMRAM] int 
  2183 ;;  val             2    4[COMRAM] int 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2195 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;Total ram usage:        9 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_servoInterruptService
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text12
  2209  001432                     __ptext12:
  2210                           	opt stack 0
  2211  001432                     i2_digitalWrite:
  2212                           	opt stack 25
  2213                           
  2214                           ;iopin.c: 54: pin = 1 << pin;
  2215                           
  2216                           ;incstack = 0
  2217  001432  C003  F007         	movff	i2digitalWrite@pin,??i2_digitalWrite
  2218  001436  0E01               	movlw	1
  2219  001438  6E08               	movwf	(??i2_digitalWrite+1)& (0+255),c
  2220  00143A  0E00               	movlw	0
  2221  00143C  6E09               	movwf	(??i2_digitalWrite+2)& (0+255),c
  2222  00143E  2A07               	incf	??i2_digitalWrite,f,c
  2223  001440  D003               	goto	i2u71_44
  2224  001442                     i2u71_45:
  2225  001442  90D8               	bcf	status,0,c
  2226  001444  3608               	rlcf	??i2_digitalWrite+1,f,c
  2227  001446  3609               	rlcf	??i2_digitalWrite+2,f,c
  2228  001448                     i2u71_44:
  2229  001448  2E07               	decfsz	??i2_digitalWrite,f,c
  2230  00144A  D7FB               	goto	i2u71_45
  2231  00144C  C008  F003         	movff	??i2_digitalWrite+1,i2digitalWrite@pin
  2232  001450  C009  F004         	movff	??i2_digitalWrite+2,i2digitalWrite@pin+1
  2233                           
  2234                           ;iopin.c: 55: if(val == 0){
  2235  001454  5005               	movf	i2digitalWrite@val,w,c
  2236  001456  1006               	iorwf	i2digitalWrite@val+1,w,c
  2237  001458  A4D8               	btfss	status,2,c
  2238  00145A  D02B               	goto	i2l1754
  2239                           
  2240                           ;iopin.c: 56: pin ^= 0xff;
  2241  00145C  0EFF               	movlw	255
  2242  00145E  1A03               	xorwf	i2digitalWrite@pin,f,c
  2243                           
  2244                           ;iopin.c: 57: }
  2245                           ;iopin.c: 59: switch(port){
  2246  001460  D028               	goto	i2l1754
  2247  001462                     i2l1730:
  2248  001462  0405               	decf	i2digitalWrite@val,w,c
  2249  001464  1006               	iorwf	i2digitalWrite@val+1,w,c
  2250  001466  A4D8               	btfss	status,2,c
  2251  001468  D003               	goto	i2l1734
  2252  00146A  5003               	movf	i2digitalWrite@pin,w,c
  2253  00146C  1289               	iorwf	3977,f,c	;volatile
  2254  00146E  0012               	return	
  2255  001470                     i2l1734:
  2256                           
  2257                           ;iopin.c: 61: else LATA &= pin;
  2258  001470  5003               	movf	i2digitalWrite@pin,w,c
  2259  001472  1689               	andwf	3977,f,c	;volatile
  2260                           
  2261                           ;iopin.c: 62: break;
  2262  001474  0012               	return	
  2263  001476                     i2l1736:
  2264  001476  0405               	decf	i2digitalWrite@val,w,c
  2265  001478  1006               	iorwf	i2digitalWrite@val+1,w,c
  2266  00147A  A4D8               	btfss	status,2,c
  2267  00147C  D003               	goto	i2l1740
  2268  00147E  5003               	movf	i2digitalWrite@pin,w,c
  2269  001480  128A               	iorwf	3978,f,c	;volatile
  2270  001482  0012               	return	
  2271  001484                     i2l1740:
  2272                           
  2273                           ;iopin.c: 64: else LATB &= pin;
  2274  001484  5003               	movf	i2digitalWrite@pin,w,c
  2275  001486  168A               	andwf	3978,f,c	;volatile
  2276                           
  2277                           ;iopin.c: 65: break;
  2278  001488  0012               	return	
  2279  00148A                     i2l1742:
  2280  00148A  0405               	decf	i2digitalWrite@val,w,c
  2281  00148C  1006               	iorwf	i2digitalWrite@val+1,w,c
  2282  00148E  A4D8               	btfss	status,2,c
  2283  001490  D003               	goto	i2l1746
  2284  001492  5003               	movf	i2digitalWrite@pin,w,c
  2285  001494  128B               	iorwf	3979,f,c	;volatile
  2286  001496  0012               	return	
  2287  001498                     i2l1746:
  2288                           
  2289                           ;iopin.c: 67: else LATC &= pin;
  2290  001498  5003               	movf	i2digitalWrite@pin,w,c
  2291  00149A  168B               	andwf	3979,f,c	;volatile
  2292                           
  2293                           ;iopin.c: 68: break;
  2294  00149C  0012               	return	
  2295  00149E                     i2l1748:
  2296  00149E  0405               	decf	i2digitalWrite@val,w,c
  2297  0014A0  1006               	iorwf	i2digitalWrite@val+1,w,c
  2298  0014A2  A4D8               	btfss	status,2,c
  2299  0014A4  D003               	goto	i2l1752
  2300  0014A6  5003               	movf	i2digitalWrite@pin,w,c
  2301  0014A8  128C               	iorwf	3980,f,c	;volatile
  2302  0014AA  0012               	return	
  2303  0014AC                     i2l1752:
  2304                           
  2305                           ;iopin.c: 70: else LATD &= pin;
  2306  0014AC  5003               	movf	i2digitalWrite@pin,w,c
  2307  0014AE  168C               	andwf	3980,f,c	;volatile
  2308                           
  2309                           ;iopin.c: 71: }
  2310  0014B0  0012               	return	
  2311  0014B2                     i2l1754:
  2312  0014B2  C001  F007         	movff	i2digitalWrite@port,??i2_digitalWrite
  2313  0014B6  C002  F008         	movff	i2digitalWrite@port+1,??i2_digitalWrite+1
  2314                           
  2315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2316                           ; Switch size 1, requested type "space"
  2317                           ; Number of cases is 1, Range of values is 0 to 0
  2318                           ; switch strategies available:
  2319                           ; Name         Instructions Cycles
  2320                           ; simple_byte            4     3 (average)
  2321                           ;	Chosen strategy is simple_byte
  2322  0014BA  5008               	movf	??i2_digitalWrite+1,w,c
  2323  0014BC  0A00               	xorlw	0	; case 0
  2324  0014BE  A4D8               	btfss	status,2,c
  2325  0014C0  0012               	return	
  2326                           
  2327                           ; Switch size 1, requested type "space"
  2328                           ; Number of cases is 4, Range of values is 0 to 3
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte           13     7 (average)
  2332                           ;	Chosen strategy is simple_byte
  2333  0014C2  5007               	movf	??i2_digitalWrite,w,c
  2334  0014C4  0A00               	xorlw	0	; case 0
  2335  0014C6  B4D8               	btfsc	status,2,c
  2336  0014C8  D7CC               	goto	i2l1730
  2337  0014CA  0A01               	xorlw	1	; case 1
  2338  0014CC  B4D8               	btfsc	status,2,c
  2339  0014CE  D7D3               	goto	i2l1736
  2340  0014D0  0A03               	xorlw	3	; case 2
  2341  0014D2  B4D8               	btfsc	status,2,c
  2342  0014D4  D7DA               	goto	i2l1742
  2343  0014D6  0A01               	xorlw	1	; case 3
  2344  0014D8  A4D8               	btfss	status,2,c
  2345  0014DA  0012               	return	
  2346  0014DC  D7E0               	goto	i2l1748
  2347  0014DE                     __end_ofi2_digitalWrite:
  2348                           	opt stack 0
  2349                           pclatu	equ	0xFFB
  2350                           pclath	equ	0xFFA
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           prodh	equ	0xFF4
  2356                           prodl	equ	0xFF3
  2357                           intcon	equ	0xFF2
  2358                           intcon3	equ	0xFF0
  2359                           postinc0	equ	0xFEE
  2360                           fsr0h	equ	0xFEA
  2361                           fsr0l	equ	0xFE9
  2362                           wreg	equ	0xFE8
  2363                           postdec1	equ	0xFE5
  2364                           fsr1h	equ	0xFE2
  2365                           fsr1l	equ	0xFE1
  2366                           postinc2	equ	0xFDE
  2367                           postdec2	equ	0xFDD
  2368                           fsr2h	equ	0xFDA
  2369                           fsr2l	equ	0xFD9
  2370                           status	equ	0xFD8
  2371                           
  2372 ;; *************** function _digitalRead *****************
  2373 ;; Defined at:
  2374 ;;		line 43 in file "iopin.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  port            2    0[COMRAM] int 
  2377 ;;  pin             2    2[COMRAM] int 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  2    0[COMRAM] int 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;Total ram usage:        6 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_servoInterruptService
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text13
  2403  0012D4                     __ptext13:
  2404                           	opt stack 0
  2405  0012D4                     _digitalRead:
  2406                           	opt stack 25
  2407                           
  2408                           ;iopin.c: 44: switch(port){
  2409                           
  2410                           ;incstack = 0
  2411  0012D4  D040               	goto	i2l1648
  2412  0012D6                     i2l1630:
  2413  0012D6  C003  F005         	movff	digitalRead@pin,??_digitalRead
  2414  0012DA  CF80 F006          	movff	3968,??_digitalRead+1	;volatile
  2415  0012DE  2A05               	incf	??_digitalRead,f,c
  2416  0012E0  D002               	goto	i2u61_44
  2417  0012E2                     i2u61_45:
  2418  0012E2  90D8               	bcf	status,0,c
  2419  0012E4  3206               	rrcf	??_digitalRead+1,f,c
  2420  0012E6                     i2u61_44:
  2421  0012E6  2E05               	decfsz	??_digitalRead,f,c
  2422  0012E8  D7FC               	goto	i2u61_45
  2423  0012EA  0E01               	movlw	1
  2424  0012EC  1606               	andwf	??_digitalRead+1,f,c
  2425  0012EE  5006               	movf	??_digitalRead+1,w,c
  2426  0012F0  6E01               	movwf	?_digitalRead,c
  2427  0012F2  6A02               	clrf	?_digitalRead+1,c
  2428  0012F4  0012               	return	
  2429  0012F6                     i2l1634:
  2430  0012F6  C003  F005         	movff	digitalRead@pin,??_digitalRead
  2431  0012FA  CF81 F006          	movff	3969,??_digitalRead+1	;volatile
  2432  0012FE  2A05               	incf	??_digitalRead,f,c
  2433  001300  D002               	goto	i2u62_44
  2434  001302                     i2u62_45:
  2435  001302  90D8               	bcf	status,0,c
  2436  001304  3206               	rrcf	??_digitalRead+1,f,c
  2437  001306                     i2u62_44:
  2438  001306  2E05               	decfsz	??_digitalRead,f,c
  2439  001308  D7FC               	goto	i2u62_45
  2440  00130A  0E01               	movlw	1
  2441  00130C  1606               	andwf	??_digitalRead+1,f,c
  2442  00130E  5006               	movf	??_digitalRead+1,w,c
  2443  001310  6E01               	movwf	?_digitalRead,c
  2444  001312  6A02               	clrf	?_digitalRead+1,c
  2445  001314  0012               	return	
  2446  001316                     i2l1638:
  2447  001316  C003  F005         	movff	digitalRead@pin,??_digitalRead
  2448  00131A  CF82 F006          	movff	3970,??_digitalRead+1	;volatile
  2449  00131E  2A05               	incf	??_digitalRead,f,c
  2450  001320  D002               	goto	i2u63_44
  2451  001322                     i2u63_45:
  2452  001322  90D8               	bcf	status,0,c
  2453  001324  3206               	rrcf	??_digitalRead+1,f,c
  2454  001326                     i2u63_44:
  2455  001326  2E05               	decfsz	??_digitalRead,f,c
  2456  001328  D7FC               	goto	i2u63_45
  2457  00132A  0E01               	movlw	1
  2458  00132C  1606               	andwf	??_digitalRead+1,f,c
  2459  00132E  5006               	movf	??_digitalRead+1,w,c
  2460  001330  6E01               	movwf	?_digitalRead,c
  2461  001332  6A02               	clrf	?_digitalRead+1,c
  2462  001334  0012               	return	
  2463  001336                     i2l1642:
  2464  001336  C003  F005         	movff	digitalRead@pin,??_digitalRead
  2465  00133A  CF83 F006          	movff	3971,??_digitalRead+1	;volatile
  2466  00133E  2A05               	incf	??_digitalRead,f,c
  2467  001340  D002               	goto	i2u64_44
  2468  001342                     i2u64_45:
  2469  001342  90D8               	bcf	status,0,c
  2470  001344  3206               	rrcf	??_digitalRead+1,f,c
  2471  001346                     i2u64_44:
  2472  001346  2E05               	decfsz	??_digitalRead,f,c
  2473  001348  D7FC               	goto	i2u64_45
  2474  00134A  0E01               	movlw	1
  2475  00134C  1606               	andwf	??_digitalRead+1,f,c
  2476  00134E  5006               	movf	??_digitalRead+1,w,c
  2477  001350  6E01               	movwf	?_digitalRead,c
  2478  001352  6A02               	clrf	?_digitalRead+1,c
  2479  001354  0012               	return	
  2480  001356                     i2l1648:
  2481  001356  C001  F005         	movff	digitalRead@port,??_digitalRead
  2482  00135A  C002  F006         	movff	digitalRead@port+1,??_digitalRead+1
  2483                           
  2484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2485                           ; Switch size 1, requested type "space"
  2486                           ; Number of cases is 1, Range of values is 0 to 0
  2487                           ; switch strategies available:
  2488                           ; Name         Instructions Cycles
  2489                           ; simple_byte            4     3 (average)
  2490                           ;	Chosen strategy is simple_byte
  2491  00135E  5006               	movf	??_digitalRead+1,w,c
  2492  001360  0A00               	xorlw	0	; case 0
  2493  001362  A4D8               	btfss	status,2,c
  2494  001364  D00D               	goto	i2l182
  2495                           
  2496                           ; Switch size 1, requested type "space"
  2497                           ; Number of cases is 4, Range of values is 0 to 3
  2498                           ; switch strategies available:
  2499                           ; Name         Instructions Cycles
  2500                           ; simple_byte           13     7 (average)
  2501                           ;	Chosen strategy is simple_byte
  2502  001366  5005               	movf	??_digitalRead,w,c
  2503  001368  0A00               	xorlw	0	; case 0
  2504  00136A  B4D8               	btfsc	status,2,c
  2505  00136C  D7B4               	goto	i2l1630
  2506  00136E  0A01               	xorlw	1	; case 1
  2507  001370  B4D8               	btfsc	status,2,c
  2508  001372  D7C1               	goto	i2l1634
  2509  001374  0A03               	xorlw	3	; case 2
  2510  001376  B4D8               	btfsc	status,2,c
  2511  001378  D7CE               	goto	i2l1638
  2512  00137A  0A01               	xorlw	1	; case 3
  2513  00137C  B4D8               	btfsc	status,2,c
  2514  00137E  D7DB               	goto	i2l1642
  2515  001380                     i2l182:
  2516                           
  2517                           ;iopin.c: 50: return -1;
  2518  001380  6801               	setf	?_digitalRead,c
  2519  001382  6802               	setf	?_digitalRead+1,c
  2520  001384  0012               	return		;funcret
  2521  001386                     __end_of_digitalRead:
  2522                           	opt stack 0
  2523                           pclatu	equ	0xFFB
  2524                           pclath	equ	0xFFA
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           prodh	equ	0xFF4
  2530                           prodl	equ	0xFF3
  2531                           intcon	equ	0xFF2
  2532                           intcon3	equ	0xFF0
  2533                           postinc0	equ	0xFEE
  2534                           fsr0h	equ	0xFEA
  2535                           fsr0l	equ	0xFE9
  2536                           wreg	equ	0xFE8
  2537                           postdec1	equ	0xFE5
  2538                           fsr1h	equ	0xFE2
  2539                           fsr1l	equ	0xFE1
  2540                           postinc2	equ	0xFDE
  2541                           postdec2	equ	0xFDD
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           pclatu	equ	0xFFB
  2546                           pclath	equ	0xFFA
  2547                           tblptru	equ	0xFF8
  2548                           tblptrh	equ	0xFF7
  2549                           tblptrl	equ	0xFF6
  2550                           tablat	equ	0xFF5
  2551                           prodh	equ	0xFF4
  2552                           prodl	equ	0xFF3
  2553                           intcon	equ	0xFF2
  2554                           intcon3	equ	0xFF0
  2555                           postinc0	equ	0xFEE
  2556                           fsr0h	equ	0xFEA
  2557                           fsr0l	equ	0xFE9
  2558                           wreg	equ	0xFE8
  2559                           postdec1	equ	0xFE5
  2560                           fsr1h	equ	0xFE2
  2561                           fsr1l	equ	0xFE1
  2562                           postinc2	equ	0xFDE
  2563                           postdec2	equ	0xFDD
  2564                           fsr2h	equ	0xFDA
  2565                           fsr2l	equ	0xFD9
  2566                           status	equ	0xFD8
  2567                           
  2568                           	psect	rparam
  2569  0000                     pclatu	equ	0xFFB
  2570                           pclath	equ	0xFFA
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           prodh	equ	0xFF4
  2576                           prodl	equ	0xFF3
  2577                           intcon	equ	0xFF2
  2578                           intcon3	equ	0xFF0
  2579                           postinc0	equ	0xFEE
  2580                           fsr0h	equ	0xFEA
  2581                           fsr0l	equ	0xFE9
  2582                           wreg	equ	0xFE8
  2583                           postdec1	equ	0xFE5
  2584                           fsr1h	equ	0xFE2
  2585                           fsr1l	equ	0xFE1
  2586                           postinc2	equ	0xFDE
  2587                           postdec2	equ	0xFDD
  2588                           fsr2h	equ	0xFDA
  2589                           fsr2l	equ	0xFD9
  2590                           status	equ	0xFD8
  2591                           
  2592                           	psect	temp
  2593  000050                     btemp:
  2594                           	opt stack 0
  2595  000050                     	ds	1
  2596  0000                     int$flags	set	btemp
  2597                           pclatu	equ	0xFFB
  2598                           pclath	equ	0xFFA
  2599                           tblptru	equ	0xFF8
  2600                           tblptrh	equ	0xFF7
  2601                           tblptrl	equ	0xFF6
  2602                           tablat	equ	0xFF5
  2603                           prodh	equ	0xFF4
  2604                           prodl	equ	0xFF3
  2605                           intcon	equ	0xFF2
  2606                           intcon3	equ	0xFF0
  2607                           postinc0	equ	0xFEE
  2608                           fsr0h	equ	0xFEA
  2609                           fsr0l	equ	0xFE9
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1h	equ	0xFE2
  2613                           fsr1l	equ	0xFE1
  2614                           postinc2	equ	0xFDE
  2615                           postdec2	equ	0xFDD
  2616                           fsr2h	equ	0xFDA
  2617                           fsr2l	equ	0xFD9
  2618                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    32
    Data        4
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sp__getTime	PTR int  size(2) Largest target is 7
		 -> getTime@time(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_initServo
    _initServo->_digitalWrite
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _service in COMRAM

    _service->_servoInterruptService
    _servoInterruptService->i2_digitalWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1922
                            _initLCD
                          _initServo
                           _pinSetup
 ---------------------------------------------------------------------------------
 (1) _pinSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initServo                                            6     0      6    1832
                                             49 COMRAM     6     0      6
                       _digitalWrite
                          _initTimer
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _startTimer                                           8     2      6     434
                                             40 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _initTimer                                            4     2      2      86
                                             40 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         9     3      6     752
                                             40 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                             44 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              2     2      0      90
                                             42 COMRAM     2     2      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                             40 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                             15    15      0    1499
                                             25 COMRAM    15    15      0
              _servoInterruptService
 ---------------------------------------------------------------------------------
 (5) _servoInterruptService                               16    12      4    1432
                                              9 COMRAM    16    12      4
                        _digitalRead
                     i2_digitalWrite
                       i2_startTimer
 ---------------------------------------------------------------------------------
 (6) i2_startTimer                                         8     2      6     258
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) i2_digitalWrite                                       9     3      6     488
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) _digitalRead                                          6     2      4     238
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _lcdInst
       _lcdNibble
   _initServo
     _digitalWrite
     _initTimer
     _startTimer
   _pinSetup

 _service (ROOT)
   _servoInterruptService
     _digitalRead
     i2_digitalWrite
     i2_startTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      4F       1       62.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      34        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Fri Mar 10 23:50:06 2017

                            l46 1748                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000                             l291 15E4                             l284 16BA  
                           l293 15F0                             l294 15FC                    __CFG_CPB$OFF 000000  
                           _PEN 007E2A                    __CFG_CPD$OFF 000000                             _SEN 007E28  
                           u654 139C                             u655 1396                             u937 16C6  
                           u947 16FA                             u957 17C4                             u967 17D6  
                           u977 1594                             u987 15A2                             u997 15C8  
                           _pin 0038                             wreg 000FE8                    __CFG_LVP$OFF 000000  
                  __CFG_WDT$OFF 000000                            l1700 168E                            l1720 1608  
                          l1706 1696                            l1670 13DE                            l1662 13C4  
                          l1680 1400                            l1664 13CA                            l1674 13EC  
                          l1658 13B6                            l1682 1406                            l1690 167C  
                          l1676 13F2                            l1668 13D8                            l1696 1686  
                          _EEIF 007D0C                            STR_1 103B                            STR_2 1032  
                          STR_3 1021                            u1007 15D6                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            _PEIE 007F96                            _RCEN 007E2B  
                          i2l60 1298                            _RSEN 007E29                            _main 1706  
                          _keys 1001                            _time 004A                            _port 0040  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr2h 000FDA  
                          fsr0l 000FE9                            fsr1l 000FE1                            fsr2l 000FD9  
                          btemp 0050                            prodh 000FF4                            prodl 000FF3  
                          start 000E                   __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000000            __end_ofi2_startTimer 167A                           ?_main 0001  
                         _ACKEN 007E2C                           _ACKDT 007E2D                           _EEADR 000FA9  
       ??_servoInterruptService 000E                           _T0CON 000FD5                           _T1CON 000FCD  
                         _T3CON 000FB1                           i2l404 11AE                           i2l182 1380  
                         i2l406 11B2                           i2l407 11B6                           i2l408 11BA  
                         i2l409 11F6                           i2l291 1630                           i2l293 163C  
                         i2l294 1648                           _TMR0H 000FD7                           _TMR1H 000FCF  
                         _TMR0L 000FD6                           _TMR3H 000FB3                           _TMR1L 000FCE  
                         _TMR3L 000FB2                           _PORTA 000F80                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTD 000F83                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                   __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
               __end_of_lcdInst 17E0                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
        servoInterruptService@i 0018                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                 __end_of_initLCD 1706                  __CFG_EBTRB$OFF 000000  
                         _angle 004C                           _count 0048                           pclath 000FFA  
                         tablat 000FF5                 __end_of_service 12D4                           status 000FD8  
                __CFG_PBADEN$ON 000000            __end_of_digitalWrite 1432                 __initialization 174A  
                  __end_of_main 174A                    __end_of_keys 1012                          ??_main 0038  
                 __activetblptr 000002            __size_of_digitalRead 00B2                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                          _ADRESH 000FC4  
                        _EEADRH 000FAA                          _ADRESL 000FC3                          _EEDATA 000FA8  
                        _EECON1 000FA6                          _EECON2 000FA7                          _INT1IF 007F80  
                        i2l1630 12D6                          i2l1642 1336                          i2l1634 12F6  
                        i2l1730 1462                          i2l1802 11BE                          i2l1740 1484  
                        i2l1804 11E8                          i2l1638 1316                          i2l1742 148A  
                        i2l1734 1470                          i2l1648 1356                          i2l1752 14AC  
                        i2l1736 1476                          i2l1832 126A                          i2l1746 1498  
                        i2l1754 14B2                          i2l1748 149E                          i2l1836 1280  
                        i2l1768 1654                          i2l1796 1150                          i2l1788 1098  
                        _TMR0IE 007F95                          _TMR0IF 007F92                          _TMR1IE 007CE8  
                        _TMR1IF 007CF0                          _TMR2IF 007CF1                          _TMR3IE 007D01  
                        _TMR3IF 007D09                          _SSPADD 000FC8                          _TRISC3 007CA3  
                        _TRISC4 007CA4                          _SSPBUF 000FC9                     initServo@pi 0036  
                   initServo@po 0034                  __CFG_XINST$OFF 000000                  __CFG_STVREN$ON 000000  
                        clear_0 1770                       ??_lcdInst 002B                __end_of_pinSetup 17BE  
                     ??_initLCD 002D                    __pdataCOMRAM 004C                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                     ??_service 001A                      __accesstop 0080         __end_of__initialization 1776  
                 ___rparam_used 000001           __size_ofi2_startTimer 004C            __end_of_happynewyear 1021  
                __pcstackCOMRAM 0001              __size_of_lcdNibble 0066              i2digitalWrite@port 0001  
                  i2_startTimer 162E           __size_of_digitalWrite 00AC              __size_of_initTimer 0046  
            __size_of_initServo 009E      servoInterruptService@flags 0010  __size_of_servoInterruptService 01B4  
 __end_of_servoInterruptService 11F8               i2startTimer@timer 0001                         i2u61_44 12E6  
                       i2u61_45 12E2                         i2u62_44 1306                         i2u62_45 1302  
                       i2u63_44 1326                         i2u71_44 1448                         i2u63_45 1322  
                       i2u71_45 1442                         i2u80_40 105C                         i2u64_44 1346  
                       i2u64_45 1342                         i2u81_40 1068                         i2u82_40 106A  
                  _digitalWrite 1386                         i2u83_40 1076                         i2u84_40 1078  
                       i2u85_40 1096                         i2u77_40 104C                         i2u78_40 104E  
                       i2u79_40 105A                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7         __size_ofi2_digitalWrite 00AC       servoInterruptService@time 000A  
                     ?_pinSetup 0001               __end_of_lcdNibble 15E2                         __Hparam 0000  
                       __Lparam 0000                    __psmallconst 1000                         __pcinit 174A  
                       __ramtop 1000                         _lcdInst 17BE                         __ptext0 1706  
                       __ptext1 1784                         __ptext2 14DE                         __ptext3 15E2  
                       __ptext4 167A                         __ptext5 1386                         __ptext6 16C0  
                       __ptext7 17BE                         __ptext8 157C                   startTimer@val 002B  
                       _initLCD 16C0               __end_of_hexpowers 101A               __end_of_initTimer 16C0  
             __end_of_initServo 157C                         _service 0008                  __pintcode_body 11F8  
          end_of_initialization 1776                   __Lmediumconst 0000                         int_func 11F8  
                digitalRead@pin 0003                      ??_pinSetup 0029                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
                 ??_digitalRead 0005                       _PORTBbits 000F81                    _happynewyear 101A  
                    _startTimer 15E2                   __pidataCOMRAM 17E0             start_initialization 174A  
           __end_of_digitalRead 1386                  initTimer@timer 0029                  initServo@timer 0032  
                i2_digitalWrite 1432                __CFG_LPT1OSC$OFF 000000                     __pbssCOMRAM 0038  
        __end_ofi2_digitalWrite 14DE                     ?_startTimer 0029               i2digitalWrite@pin 0003  
             i2digitalWrite@val 0005               __CFG_CCP2MX$PORTC 000000               __size_of_pinSetup 003A  
                     __pintcode 0008                       _lcdNibble 157C                     _digitalRead 12D4  
                      ?_lcdInst 0001                        ?_initLCD 0001                     __smallconst 1000  
               startTimer@timer 0029                        ?_service 0001                       _hexpowers 1012  
                     _initTimer 167A                       _initServo 14DE                 ?i2_digitalWrite 0001  
         _servoInterruptService 1044                        _LATDbits 000F8C                __CFG_WDTPS$32768 000000  
                    ?_lcdNibble 0001                      service@key 0028             __size_of_startTimer 004C  
                 lcdNibble@data 002A                   lcdNibble@temp 0029                      ?_initTimer 0029  
                    ?_initServo 0032                       copy_data0 175E                        __Hrparam 0000  
                      __Lrparam 0000              __CFG_BOREN$SBORDIS 000000                __size_of_lcdInst 0022  
              __size_of_initLCD 0046          ?_servoInterruptService 000A                        __ptext10 1044  
                      __ptext11 162E                        __ptext12 1432                        __ptext13 12D4  
              __size_of_service 12CC                 i2startTimer@val 0003                   ?i2_startTimer 0001  
                 __size_of_main 0044                        _pinSetup 1784                     ??_lcdNibble 0029  
                      int$flags 0050                      _INTCONbits 000FF2                   ?_digitalWrite 0029  
                   ??_initTimer 002B                     ??_initServo 0038                  ??i2_startTimer 0007  
                  ??_startTimer 002F                 digitalRead@port 0001                        intlevel2 0000  
                   lcdInst@data 002C                    ?_digitalRead 0001              __end_of_startTimer 162E  
              ??i2_digitalWrite 0007                digitalWrite@port 0029                  ??_digitalWrite 002F  
               digitalWrite@pin 002B                 digitalWrite@val 002D  
