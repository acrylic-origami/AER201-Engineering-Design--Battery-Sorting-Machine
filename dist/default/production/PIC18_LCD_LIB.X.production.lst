

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Mon Feb 27 11:52:42 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 1.40
    61                           ; Generated 01/12/2016 GMT
    62                           ; 
    63                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4620 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataBANK0
    96  003900                     __pidataBANK0:
    97                           	opt stack 0
    98                           
    99                           ;initializer for _extFreq
   100  003900  4800               	dw	18432
   101  003902  01E8               	dw	488
   102                           
   103                           ;initializer for _angle
   104  003904  00                 	db	0
   105  003905  C0                 	db	192
   106  003906  3F                 	db	63
   107                           
   108                           ;initializer for _flag
   109  003907  0001               	dw	1
   110                           
   111                           	psect	smallconst
   112  001000                     __psmallconst:
   113                           	opt stack 0
   114  001000  00                 	db	0
   115  001001                     _dpowers:
   116                           	opt stack 0
   117  001001  0001               	dw	1
   118  001003  0000               	dw	0
   119  001005  000A               	dw	10
   120  001007  0000               	dw	0
   121  001009  0064               	dw	100
   122  00100B  0000               	dw	0
   123  00100D  03E8               	dw	1000
   124  00100F  0000               	dw	0
   125  001011  2710               	dw	10000
   126  001013  0000               	dw	0
   127  001015  86A0               	dw	34464
   128  001017  0001               	dw	1
   129  001019  4240               	dw	16960
   130  00101B  000F               	dw	15
   131  00101D  9680               	dw	38528
   132  00101F  0098               	dw	152
   133  001021  E100               	dw	57600
   134  001023  05F5               	dw	1525
   135  001025  CA00               	dw	51712
   136  001027  3B9A               	dw	15258
   137  001029                     __end_of_dpowers:
   138                           	opt stack 0
   139  001029                     __npowers_:
   140                           	opt stack 0
   141  001029  00                 	db	0
   142  00102A  80                 	db	128
   143  00102B  3F                 	db	63
   144  00102C  CD                 	db	205
   145  00102D  CC                 	db	204
   146  00102E  3D                 	db	61
   147  00102F  D7                 	db	215
   148  001030  23                 	db	35
   149  001031  3C                 	db	60
   150  001032  12                 	db	18
   151  001033  83                 	db	131
   152  001034  3A                 	db	58
   153  001035  B7                 	db	183
   154  001036  D1                 	db	209
   155  001037  38                 	db	56
   156  001038  C6                 	db	198
   157  001039  27                 	db	39
   158  00103A  37                 	db	55
   159  00103B  38                 	db	56
   160  00103C  86                 	db	134
   161  00103D  35                 	db	53
   162  00103E  C0                 	db	192
   163  00103F  D6                 	db	214
   164  001040  33                 	db	51
   165  001041  CC                 	db	204
   166  001042  2B                 	db	43
   167  001043  32                 	db	50
   168  001044  70                 	db	112
   169  001045  89                 	db	137
   170  001046  30                 	db	48
   171  001047  E7                 	db	231
   172  001048  DB                 	db	219
   173  001049  2E                 	db	46
   174  00104A  E5                 	db	229
   175  00104B  3C                 	db	60
   176  00104C  1E                 	db	30
   177  00104D  42                 	db	66
   178  00104E  A2                 	db	162
   179  00104F  0D                 	db	13
   180  001050                     __end_of__npowers_:
   181                           	opt stack 0
   182  001050                     __powers_:
   183                           	opt stack 0
   184  001050  00                 	db	0
   185  001051  80                 	db	128
   186  001052  3F                 	db	63
   187  001053  00                 	db	0
   188  001054  20                 	db	32
   189  001055  41                 	db	65
   190  001056  00                 	db	0
   191  001057  C8                 	db	200
   192  001058  42                 	db	66
   193  001059  00                 	db	0
   194  00105A  7A                 	db	122
   195  00105B  44                 	db	68
   196  00105C  40                 	db	64
   197  00105D  1C                 	db	28
   198  00105E  46                 	db	70
   199  00105F  50                 	db	80
   200  001060  C3                 	db	195
   201  001061  47                 	db	71
   202  001062  24                 	db	36
   203  001063  74                 	db	116
   204  001064  49                 	db	73
   205  001065  97                 	db	151
   206  001066  18                 	db	24
   207  001067  4B                 	db	75
   208  001068  BC                 	db	188
   209  001069  BE                 	db	190
   210  00106A  4C                 	db	76
   211  00106B  6B                 	db	107
   212  00106C  6E                 	db	110
   213  00106D  4E                 	db	78
   214  00106E  03                 	db	3
   215  00106F  15                 	db	21
   216  001070  50                 	db	80
   217  001071  79                 	db	121
   218  001072  AD                 	db	173
   219  001073  60                 	db	96
   220  001074  F3                 	db	243
   221  001075  49                 	db	73
   222  001076  71                 	db	113
   223  001077                     __end_of__powers_:
   224                           	opt stack 0
   225  001077                     _hexpowers:
   226                           	opt stack 0
   227  001077  0001               	dw	1
   228  001079  0000               	dw	0
   229  00107B  0010               	dw	16
   230  00107D  0000               	dw	0
   231  00107F  0100               	dw	256
   232  001081  0000               	dw	0
   233  001083  1000               	dw	4096
   234  001085  0000               	dw	0
   235  001087  0000               	dw	0
   236  001089  0001               	dw	1
   237  00108B  0000               	dw	0
   238  00108D  0010               	dw	16
   239  00108F  0000               	dw	0
   240  001091  0100               	dw	256
   241  001093  0000               	dw	0
   242  001095  1000               	dw	4096
   243  001097                     __end_of_hexpowers:
   244                           	opt stack 0
   245  001097  31                 	db	49
   246  001098  32                 	db	50
   247  001099  33                 	db	51
   248  00109A  41                 	db	65
   249  00109B  34                 	db	52
   250  00109C  35                 	db	53
   251  00109D  36                 	db	54
   252  00109E  42                 	db	66
   253  00109F  37                 	db	55
   254  0010A0  38                 	db	56
   255  0010A1  39                 	db	57
   256  0010A2  43                 	db	67
   257  0010A3  2A                 	db	42
   258  0010A4  30                 	db	48
   259  0010A5  23                 	db	35
   260  0010A6  44                 	db	68
   261  0010A7  00                 	db	0
   262  0010A8                     __end_of_keys:
   263                           	opt stack 0
   264  0010A8                     testFrequency@F2962:
   265                           	opt stack 0
   266  0010A8  45                 	db	69
   267  0010A9  59                 	db	89
   268  0010AA  23                 	db	35
   269  0010AB  07                 	db	7
   270  0010AC  31                 	db	49
   271  0010AD  12                 	db	18
   272  0010AE  16                 	db	22
   273  0010AF                     __end_oftestFrequency@F2962:
   274                           	opt stack 0
   275  0000                     _ADCON0	set	4034
   276  0000                     _ADCON1	set	4033
   277  0000                     _ADCON2	set	4032
   278  0000                     _ADRESH	set	4036
   279  0000                     _ADRESL	set	4035
   280  0000                     _EEADR	set	4009
   281  0000                     _EEADRH	set	4010
   282  0000                     _EECON1	set	4006
   283  0000                     _EECON2	set	4007
   284  0000                     _EEDATA	set	4008
   285  0000                     _INTCONbits	set	4082
   286  0000                     _LATA	set	3977
   287  0000                     _LATB	set	3978
   288  0000                     _LATC	set	3979
   289  0000                     _LATD	set	3980
   290  0000                     _LATDbits	set	3980
   291  0000                     _LATE	set	3981
   292  0000                     _OSCCON	set	4051
   293  0000                     _OSCTUNEbits	set	3995
   294  0000                     _PORTA	set	3968
   295  0000                     _PORTB	set	3969
   296  0000                     _PORTBbits	set	3969
   297  0000                     _PORTC	set	3970
   298  0000                     _PORTD	set	3971
   299  0000                     _SSPADD	set	4040
   300  0000                     _SSPBUF	set	4041
   301  0000                     _SSPCON1	set	4038
   302  0000                     _SSPCON2	set	4037
   303  0000                     _SSPSTAT	set	4039
   304  0000                     _T0CON	set	4053
   305  0000                     _TMR0H	set	4055
   306  0000                     _TMR0L	set	4054
   307  0000                     _TRISA	set	3986
   308  0000                     _TRISB	set	3987
   309  0000                     _TRISC	set	3988
   310  0000                     _TRISD	set	3989
   311  0000                     _TRISE	set	3990
   312  0000                     _ACKDT	set	32301
   313  0000                     _ACKEN	set	32300
   314  0000                     _EEIF	set	32012
   315  0000                     _INT1IF	set	32640
   316  0000                     _PEIE	set	32662
   317  0000                     _PEN	set	32298
   318  0000                     _RCEN	set	32299
   319  0000                     _RSEN	set	32297
   320  0000                     _SEN	set	32296
   321  0000                     _TMR0IE	set	32661
   322  0000                     _TMR0IF	set	32658
   323  0000                     _TRISC3	set	31907
   324  0000                     _TRISC4	set	31908
   325  0010AF                     STR_6:
   326  0010AF  30                 	db	48	;'0'
   327  0010B0  31                 	db	49	;'1'
   328  0010B1  32                 	db	50	;'2'
   329  0010B2  33                 	db	51	;'3'
   330  0010B3  34                 	db	52	;'4'
   331  0010B4  35                 	db	53	;'5'
   332  0010B5  36                 	db	54	;'6'
   333  0010B6  37                 	db	55	;'7'
   334  0010B7  38                 	db	56	;'8'
   335  0010B8  39                 	db	57	;'9'
   336  0010B9  61                 	db	97	;'a'
   337  0010BA  62                 	db	98	;'b'
   338  0010BB  63                 	db	99	;'c'
   339  0010BC  64                 	db	100	;'d'
   340  0010BD  65                 	db	101	;'e'
   341  0010BE  66                 	db	102	;'f'
   342  0010BF  00                 	db	0
   343  0010C0  5B                 	db	91	;'['
   344  0010C1  25                 	db	37
   345  0010C2  78                 	db	120	;'x'
   346  0010C3  20                 	db	32
   347  0010C4  25                 	db	37
   348  0010C5  78                 	db	120	;'x'
   349  0010C6  5D                 	db	93	;']'
   350  0010C7  0A                 	db	10
   351  0010C8  00                 	db	0
   352  0010C9                     STR_3:
   353  0010C9  61                 	db	97	;'a'
   354  0010CA  6E                 	db	110	;'n'
   355  0010CB  67                 	db	103	;'g'
   356  0010CC  6C                 	db	108	;'l'
   357  0010CD  65                 	db	101	;'e'
   358  0010CE  20                 	db	32
   359  0010CF  25                 	db	37
   360  0010D0  66                 	db	102	;'f'
   361  0010D1  00                 	db	0
   362  0010D2  74                 	db	116	;'t'
   363  0010D3  31                 	db	49	;'1'
   364  0010D4  3A                 	db	58	;':'
   365  0010D5  20                 	db	32
   366  0010D6  25                 	db	37
   367  0010D7  78                 	db	120	;'x'
   368  0010D8  20                 	db	32
   369  0010D9  00                 	db	0
   370  0010DA  30                 	db	48	;'0'
   371  0010DB  00                 	db	0
   372  0010DC  31                 	db	49	;'1'
   373  0010DD  00                 	db	0
   374                           
   375                           ; #config settings
   376  0010DE  00                 	db	0	; dummy byte at the end
   377  0000                     
   378                           	psect	cinit
   379  0037DE                     __pcinit:
   380                           	opt stack 0
   381  0037DE                     start_initialization:
   382                           	opt stack 0
   383  0037DE                     __initialization:
   384                           	opt stack 0
   385                           
   386                           ; Initialize objects allocated to BANK0 (9 bytes)
   387                           ; load TBLPTR registers with __pidataBANK0
   388  0037DE  0E00               	movlw	low __pidataBANK0
   389  0037E0  6EF6               	movwf	tblptrl,c
   390  0037E2  0E39               	movlw	high __pidataBANK0
   391  0037E4  6EF7               	movwf	tblptrh,c
   392  0037E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   393  0037E8  6EF8               	movwf	tblptru,c
   394  0037EA  EE00  F0DF         	lfsr	0,__pdataBANK0
   395  0037EE  EE10 F009          	lfsr	1,9
   396  0037F2                     copy_data0:
   397  0037F2  0009               	tblrd		*+
   398  0037F4  CFF5 FFEE          	movff	tablat,postinc0
   399  0037F8  50E5               	movf	postdec1,w,c
   400  0037FA  50E1               	movf	fsr1l,w,c
   401  0037FC  E1FA               	bnz	copy_data0
   402                           
   403                           ; Clear objects allocated to BANK0 (4 bytes)
   404  0037FE  0100               	movlb	0
   405  003800  6BEB               	clrf	(__pbssBANK0+3)& (0+255),b
   406  003802  6BEA               	clrf	(__pbssBANK0+2)& (0+255),b
   407  003804  6BE9               	clrf	(__pbssBANK0+1)& (0+255),b
   408  003806  6BE8               	clrf	__pbssBANK0& (0+255),b
   409  003808                     end_of_initialization:
   410                           	opt stack 0
   411  003808                     __end_of__initialization:
   412                           	opt stack 0
   413  003808  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   414  00380A  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   415  00380C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   416  00380E  6EF8               	movwf	tblptru,c
   417  003810  0100               	movlb	0
   418  003812  EF5F  F01A         	goto	_main	;jump to C main() function
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           postdec1	equ	0xFE5
   425                           fsr1l	equ	0xFE1
   426                           
   427                           	psect	bssBANK0
   428  0000E8                     __pbssBANK0:
   429                           	opt stack 0
   430  0000E8                     _count:
   431                           	opt stack 0
   432  0000E8                     	ds	2
   433  0000EA                     _i:
   434                           	opt stack 0
   435  0000EA                     	ds	2
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           postdec1	equ	0xFE5
   442                           fsr1l	equ	0xFE1
   443                           
   444                           	psect	dataBANK0
   445  0000DF                     __pdataBANK0:
   446                           	opt stack 0
   447  0000DF                     _extFreq:
   448                           	opt stack 0
   449  0000DF                     	ds	4
   450  0000E3                     _angle:
   451                           	opt stack 0
   452  0000E3                     	ds	3
   453  0000E6                     _flag:
   454                           	opt stack 0
   455  0000E6                     	ds	2
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           postdec1	equ	0xFE5
   462                           fsr1l	equ	0xFE1
   463                           
   464                           	psect	cstackBANK1
   465  000100                     __pcstackBANK1:
   466                           	opt stack 0
   467  000100                     _startT0$1116:
   468                           	opt stack 0
   469                           
   470                           ; 3 bytes @ 0x0
   471  000100                     	ds	3
   472  000103                     _startT0$1117:
   473                           	opt stack 0
   474                           
   475                           ; 3 bytes @ 0x3
   476  000103                     	ds	3
   477  000106                     startT0@time:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x6
   481  000106                     	ds	4
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           postdec1	equ	0xFE5
   488                           fsr1l	equ	0xFE1
   489                           
   490                           	psect	cstackBANK0
   491  000080                     __pcstackBANK0:
   492                           	opt stack 0
   493  000080                     ??_service:
   494                           
   495                           ; 1 bytes @ 0x0
   496  000080                     	ds	14
   497  00008E                     ??_lcdNibble:
   498  00008E                     ?___ftpack:
   499                           	opt stack 0
   500  00008E                     digitalWrite@port:
   501                           	opt stack 0
   502  00008E                     ___ftpack@arg:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0xE
   506  00008E                     	ds	1
   507  00008F                     lcdNibble@temp:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0xF
   511  00008F                     	ds	1
   512  000090                     lcdNibble@data:
   513                           	opt stack 0
   514  000090                     digitalWrite@pin:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x10
   518  000090                     	ds	1
   519  000091                     ??_lcdInst:
   520  000091                     ___ftpack@exp:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x11
   524  000091                     	ds	1
   525  000092                     lcdInst@data:
   526                           	opt stack 0
   527  000092                     ___ftpack@sign:
   528                           	opt stack 0
   529  000092                     digitalWrite@val:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x12
   533  000092                     	ds	1
   534  000093                     ??_initLCD:
   535  000093                     ??___ftpack:
   536                           
   537                           ; 1 bytes @ 0x13
   538  000093                     	ds	1
   539  000094                     ??_digitalWrite:
   540                           
   541                           ; 1 bytes @ 0x14
   542  000094                     	ds	2
   543  000096                     ?___altoft:
   544                           	opt stack 0
   545  000096                     ___altoft@c:
   546                           	opt stack 0
   547                           
   548                           ; 4 bytes @ 0x16
   549  000096                     	ds	4
   550  00009A                     ??___altoft:
   551                           
   552                           ; 1 bytes @ 0x1A
   553  00009A                     	ds	4
   554  00009E                     ___altoft@exp:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x1E
   558  00009E                     	ds	1
   559  00009F                     ___altoft@sign:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x1F
   563  00009F                     	ds	1
   564  0000A0                     ?___ftdiv:
   565                           	opt stack 0
   566  0000A0                     ___ftdiv@f1:
   567                           	opt stack 0
   568                           
   569                           ; 3 bytes @ 0x20
   570  0000A0                     	ds	3
   571  0000A3                     ___ftdiv@f2:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x23
   575  0000A3                     	ds	3
   576  0000A6                     ??___ftdiv:
   577                           
   578                           ; 1 bytes @ 0x26
   579  0000A6                     	ds	3
   580  0000A9                     ___ftdiv@cntr:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x29
   584  0000A9                     	ds	1
   585  0000AA                     ___ftdiv@exp:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x2A
   589  0000AA                     	ds	1
   590  0000AB                     ___ftdiv@f3:
   591                           	opt stack 0
   592                           
   593                           ; 3 bytes @ 0x2B
   594  0000AB                     	ds	3
   595  0000AE                     ___ftdiv@sign:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x2E
   599  0000AE                     	ds	1
   600  0000AF                     ?___ftmul:
   601                           	opt stack 0
   602  0000AF                     ___ftmul@f1:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0x2F
   606  0000AF                     	ds	3
   607  0000B2                     ___ftmul@f2:
   608                           	opt stack 0
   609                           
   610                           ; 3 bytes @ 0x32
   611  0000B2                     	ds	3
   612  0000B5                     ??___ftmul:
   613                           
   614                           ; 1 bytes @ 0x35
   615  0000B5                     	ds	3
   616  0000B8                     ___ftmul@exp:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x38
   620  0000B8                     	ds	1
   621  0000B9                     ___ftmul@f3_as_product:
   622                           	opt stack 0
   623                           
   624                           ; 3 bytes @ 0x39
   625  0000B9                     	ds	3
   626  0000BC                     ___ftmul@cntr:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x3C
   630  0000BC                     	ds	1
   631  0000BD                     ___ftmul@sign:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x3D
   635  0000BD                     	ds	1
   636  0000BE                     ?___ftneg:
   637                           	opt stack 0
   638  0000BE                     ___ftneg@f1:
   639                           	opt stack 0
   640                           
   641                           ; 3 bytes @ 0x3E
   642  0000BE                     	ds	3
   643  0000C1                     ?___ftadd:
   644                           	opt stack 0
   645  0000C1                     ___ftadd@f1:
   646                           	opt stack 0
   647                           
   648                           ; 3 bytes @ 0x41
   649  0000C1                     	ds	3
   650  0000C4                     ___ftadd@f2:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x44
   654  0000C4                     	ds	3
   655  0000C7                     ??___ftadd:
   656                           
   657                           ; 1 bytes @ 0x47
   658  0000C7                     	ds	3
   659  0000CA                     ___ftadd@sign:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x4A
   663  0000CA                     	ds	1
   664  0000CB                     ___ftadd@exp2:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x4B
   668  0000CB                     	ds	1
   669  0000CC                     ___ftadd@exp1:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x4C
   673  0000CC                     	ds	1
   674  0000CD                     ?___fttol:
   675                           	opt stack 0
   676  0000CD                     ___fttol@f1:
   677                           	opt stack 0
   678                           
   679                           ; 3 bytes @ 0x4D
   680  0000CD                     	ds	4
   681  0000D1                     ??___fttol:
   682                           
   683                           ; 1 bytes @ 0x51
   684  0000D1                     	ds	5
   685  0000D6                     ___fttol@sign1:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x56
   689  0000D6                     	ds	1
   690  0000D7                     ___fttol@lval:
   691                           	opt stack 0
   692                           
   693                           ; 4 bytes @ 0x57
   694  0000D7                     	ds	4
   695  0000DB                     ___fttol@exp1:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x5B
   699  0000DB                     	ds	1
   700  0000DC                     startT0@milliseconds:
   701                           	opt stack 0
   702                           
   703                           ; 3 bytes @ 0x5C
   704  0000DC                     	ds	3
   705  0000DF                     tblptru	equ	0xFF8
   706                           tblptrh	equ	0xFF7
   707                           tblptrl	equ	0xFF6
   708                           tablat	equ	0xFF5
   709                           postinc0	equ	0xFEE
   710                           postdec1	equ	0xFE5
   711                           fsr1l	equ	0xFE1
   712                           
   713                           ; 1 bytes @ 0x5F
   714                           
   715                           	psect	cstackCOMRAM
   716  000001                     __pcstackCOMRAM:
   717                           	opt stack 0
   718  000001                     ??i2_lcdNibble:
   719  000001                     ?___awmod:
   720                           	opt stack 0
   721  000001                     ?i2___ftpack:
   722                           	opt stack 0
   723  000001                     ?__tdiv_to_l_:
   724                           	opt stack 0
   725  000001                     ?__div_to_l_:
   726                           	opt stack 0
   727  000001                     ?___lldiv:
   728                           	opt stack 0
   729  000001                     ?___llmod:
   730                           	opt stack 0
   731  000001                     ___awmod@dividend:
   732                           	opt stack 0
   733  000001                     i2digitalWrite@port:
   734                           	opt stack 0
   735  000001                     __div_to_l_@f1:
   736                           	opt stack 0
   737  000001                     __tdiv_to_l_@f1:
   738                           	opt stack 0
   739  000001                     ___ftge@ff1:
   740                           	opt stack 0
   741  000001                     i2___ftpack@arg:
   742                           	opt stack 0
   743  000001                     ___lldiv@dividend:
   744                           	opt stack 0
   745  000001                     ___llmod@dividend:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x0
   749  000001                     	ds	1
   750  000002                     i2lcdNibble@temp:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x1
   754  000002                     	ds	1
   755  000003                     i2lcdNibble@data:
   756                           	opt stack 0
   757  000003                     ___awmod@divisor:
   758                           	opt stack 0
   759  000003                     i2digitalWrite@pin:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x2
   763  000003                     	ds	1
   764  000004                     ??i2_lcdInst:
   765  000004                     i2___ftpack@exp:
   766                           	opt stack 0
   767  000004                     __div_to_l_@f2:
   768                           	opt stack 0
   769  000004                     __tdiv_to_l_@f2:
   770                           	opt stack 0
   771  000004                     ___ftge@ff2:
   772                           	opt stack 0
   773                           
   774                           ; 3 bytes @ 0x3
   775  000004                     	ds	1
   776  000005                     ___awmod@counter:
   777                           	opt stack 0
   778  000005                     i2lcdInst@data:
   779                           	opt stack 0
   780  000005                     i2___ftpack@sign:
   781                           	opt stack 0
   782  000005                     i2digitalWrite@val:
   783                           	opt stack 0
   784  000005                     ___lldiv@divisor:
   785                           	opt stack 0
   786  000005                     ___llmod@divisor:
   787                           	opt stack 0
   788                           
   789                           ; 4 bytes @ 0x4
   790  000005                     	ds	1
   791  000006                     ??i2___ftpack:
   792  000006                     putch@data:
   793                           	opt stack 0
   794  000006                     ___awmod@sign:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x5
   798  000006                     	ds	1
   799  000007                     ??__tdiv_to_l_:
   800  000007                     ??___ftge:
   801  000007                     ??i2_digitalWrite:
   802  000007                     ?___awdiv:
   803                           	opt stack 0
   804  000007                     ___awdiv@dividend:
   805                           	opt stack 0
   806  000007                     __div_to_l_@quot:
   807                           	opt stack 0
   808                           
   809                           ; 4 bytes @ 0x6
   810  000007                     	ds	2
   811  000009                     ?___lltoft:
   812                           	opt stack 0
   813  000009                     ?i2___altoft:
   814                           	opt stack 0
   815  000009                     ___lldiv@counter:
   816                           	opt stack 0
   817  000009                     ___llmod@counter:
   818                           	opt stack 0
   819  000009                     ___awdiv@divisor:
   820                           	opt stack 0
   821  000009                     ___lltoft@c:
   822                           	opt stack 0
   823  000009                     i2___altoft@c:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x8
   827  000009                     	ds	1
   828  00000A                     __tdiv_to_l_@quot:
   829                           	opt stack 0
   830  00000A                     ___lldiv@quotient:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x9
   834  00000A                     	ds	1
   835  00000B                     ___awdiv@counter:
   836                           	opt stack 0
   837  00000B                     __div_to_l_@cntr:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0xA
   841  00000B                     	ds	1
   842  00000C                     ___awdiv@sign:
   843                           	opt stack 0
   844  00000C                     __div_to_l_@exp1:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0xB
   848  00000C                     	ds	1
   849  00000D                     ??___lltoft:
   850  00000D                     ??i2___altoft:
   851  00000D                     ___awdiv@quotient:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0xC
   855  00000D                     	ds	1
   856  00000E                     __tdiv_to_l_@cntr:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0xD
   860  00000E                     	ds	1
   861  00000F                     ?___wmul:
   862                           	opt stack 0
   863  00000F                     __tdiv_to_l_@exp1:
   864                           	opt stack 0
   865  00000F                     ___wmul@multiplier:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0xE
   869  00000F                     	ds	2
   870  000011                     ___lltoft@exp:
   871                           	opt stack 0
   872  000011                     i2___altoft@exp:
   873                           	opt stack 0
   874  000011                     ___wmul@multiplicand:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x10
   878  000011                     	ds	1
   879  000012                     i2___altoft@sign:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x11
   883  000012                     	ds	1
   884  000013                     ?i2___ftdiv:
   885                           	opt stack 0
   886  000013                     ___wmul@product:
   887                           	opt stack 0
   888  000013                     i2___ftdiv@f1:
   889                           	opt stack 0
   890                           
   891                           ; 3 bytes @ 0x12
   892  000013                     	ds	3
   893  000016                     i2___ftdiv@f2:
   894                           	opt stack 0
   895                           
   896                           ; 3 bytes @ 0x15
   897  000016                     	ds	3
   898  000019                     ??i2___ftdiv:
   899                           
   900                           ; 1 bytes @ 0x18
   901  000019                     	ds	3
   902  00001C                     i2___ftdiv@cntr:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x1B
   906  00001C                     	ds	1
   907  00001D                     i2___ftdiv@exp:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x1C
   911  00001D                     	ds	1
   912  00001E                     i2___ftdiv@f3:
   913                           	opt stack 0
   914                           
   915                           ; 3 bytes @ 0x1D
   916  00001E                     	ds	3
   917  000021                     i2___ftdiv@sign:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x20
   921  000021                     	ds	1
   922  000022                     ?i2___ftmul:
   923                           	opt stack 0
   924  000022                     i2___ftmul@f1:
   925                           	opt stack 0
   926                           
   927                           ; 3 bytes @ 0x21
   928  000022                     	ds	3
   929  000025                     i2___ftmul@f2:
   930                           	opt stack 0
   931                           
   932                           ; 3 bytes @ 0x24
   933  000025                     	ds	3
   934  000028                     ??i2___ftmul:
   935                           
   936                           ; 1 bytes @ 0x27
   937  000028                     	ds	3
   938  00002B                     i2___ftmul@exp:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x2A
   942  00002B                     	ds	1
   943  00002C                     i2___ftmul@f3_as_product:
   944                           	opt stack 0
   945                           
   946                           ; 3 bytes @ 0x2B
   947  00002C                     	ds	3
   948  00002F                     i2___ftmul@cntr:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x2E
   952  00002F                     	ds	1
   953  000030                     i2___ftmul@sign:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x2F
   957  000030                     	ds	1
   958  000031                     ?_fround:
   959                           	opt stack 0
   960  000031                     ?_scale:
   961                           	opt stack 0
   962  000031                     ?i2___ftneg:
   963                           	opt stack 0
   964  000031                     i2___ftneg@f1:
   965                           	opt stack 0
   966                           
   967                           ; 3 bytes @ 0x30
   968  000031                     	ds	3
   969  000034                     _fround$1206:
   970                           	opt stack 0
   971  000034                     _scale$1207:
   972                           	opt stack 0
   973                           
   974                           ; 3 bytes @ 0x33
   975  000034                     	ds	3
   976  000037                     scale@scl:
   977                           	opt stack 0
   978  000037                     _fround$1205:
   979                           	opt stack 0
   980                           
   981                           ; 3 bytes @ 0x36
   982  000037                     	ds	3
   983  00003A                     fround@prec:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x39
   987  00003A                     	ds	1
   988  00003B                     ?i2___ftadd:
   989                           	opt stack 0
   990  00003B                     i2___ftadd@f1:
   991                           	opt stack 0
   992                           
   993                           ; 3 bytes @ 0x3A
   994  00003B                     	ds	3
   995  00003E                     i2___ftadd@f2:
   996                           	opt stack 0
   997                           
   998                           ; 3 bytes @ 0x3D
   999  00003E                     	ds	3
  1000  000041                     ??i2___ftadd:
  1001                           
  1002                           ; 1 bytes @ 0x40
  1003  000041                     	ds	3
  1004  000044                     i2___ftadd@sign:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x43
  1008  000044                     	ds	1
  1009  000045                     i2___ftadd@exp2:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x44
  1013  000045                     	ds	1
  1014  000046                     i2___ftadd@exp1:
  1015                           	opt stack 0
  1016                           
  1017                           ; 1 bytes @ 0x45
  1018  000046                     	ds	1
  1019  000047                     ?___ftsub:
  1020                           	opt stack 0
  1021  000047                     ?i2___fttol:
  1022                           	opt stack 0
  1023  000047                     ___ftsub@f1:
  1024                           	opt stack 0
  1025  000047                     i2___fttol@f1:
  1026                           	opt stack 0
  1027                           
  1028                           ; 3 bytes @ 0x46
  1029  000047                     	ds	3
  1030  00004A                     ___ftsub@f2:
  1031                           	opt stack 0
  1032                           
  1033                           ; 3 bytes @ 0x49
  1034  00004A                     	ds	1
  1035  00004B                     ??i2___fttol:
  1036                           
  1037                           ; 1 bytes @ 0x4A
  1038  00004B                     	ds	2
  1039  00004D                     
  1040                           ; 1 bytes @ 0x4C
  1041  00004D                     	ds	3
  1042  000050                     i2___fttol@sign1:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0x4F
  1046  000050                     	ds	1
  1047  000051                     i2___fttol@lval:
  1048                           	opt stack 0
  1049                           
  1050                           ; 4 bytes @ 0x50
  1051  000051                     	ds	4
  1052  000055                     i2___fttol@exp1:
  1053                           	opt stack 0
  1054                           
  1055                           ; 1 bytes @ 0x54
  1056  000055                     	ds	1
  1057  000056                     ?_printf:
  1058                           	opt stack 0
  1059  000056                     printf@f:
  1060                           	opt stack 0
  1061  000056                     i2startT0@milliseconds:
  1062                           	opt stack 0
  1063                           
  1064                           ; 3 bytes @ 0x55
  1065  000056                     	ds	3
  1066  000059                     i2_startT0$1209:
  1067                           	opt stack 0
  1068                           
  1069                           ; 3 bytes @ 0x58
  1070  000059                     	ds	3
  1071  00005C                     ??_printf:
  1072  00005C                     i2_startT0$1210:
  1073                           	opt stack 0
  1074                           
  1075                           ; 3 bytes @ 0x5B
  1076  00005C                     	ds	3
  1077  00005F                     i2startT0@time:
  1078                           	opt stack 0
  1079                           
  1080                           ; 4 bytes @ 0x5E
  1081  00005F                     	ds	3
  1082  000062                     _printf$1208:
  1083                           	opt stack 0
  1084                           
  1085                           ; 3 bytes @ 0x61
  1086  000062                     	ds	3
  1087  000065                     printf@idx:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x64
  1091  000065                     	ds	1
  1092  000066                     printf@ap:
  1093                           	opt stack 0
  1094                           
  1095                           ; 2 bytes @ 0x65
  1096  000066                     	ds	2
  1097  000068                     printf@flag:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0x67
  1101  000068                     	ds	2
  1102  00006A                     printf@prec:
  1103                           	opt stack 0
  1104                           
  1105                           ; 2 bytes @ 0x69
  1106  00006A                     	ds	2
  1107  00006C                     printf@val:
  1108                           	opt stack 0
  1109                           
  1110                           ; 4 bytes @ 0x6B
  1111  00006C                     	ds	4
  1112  000070                     printf@exp:
  1113                           	opt stack 0
  1114                           
  1115                           ; 2 bytes @ 0x6F
  1116  000070                     	ds	2
  1117  000072                     printf@tmpval:
  1118                           	opt stack 0
  1119                           
  1120                           ; 4 bytes @ 0x71
  1121  000072                     	ds	4
  1122  000076                     printf@fval:
  1123                           	opt stack 0
  1124                           
  1125                           ; 3 bytes @ 0x75
  1126  000076                     	ds	3
  1127  000079                     printf@c:
  1128                           	opt stack 0
  1129                           
  1130                           ; 1 bytes @ 0x78
  1131  000079                     	ds	1
  1132  00007A                     _service$1204:
  1133                           	opt stack 0
  1134                           
  1135                           ; 3 bytes @ 0x79
  1136  00007A                     	ds	3
  1137  00007D                     service@key:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x7C
  1141  00007D                     	ds	1
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           postinc0	equ	0xFEE
  1147                           postdec1	equ	0xFE5
  1148                           fsr1l	equ	0xFE1
  1149                           
  1150 ;;
  1151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1152 ;;
  1153 ;; *************** function _main *****************
  1154 ;; Defined at:
  1155 ;;		line 32 in file "main.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, status,0, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels required when called:    9
  1175 ;; This function calls:
  1176 ;;		_digitalWrite
  1177 ;;		_initLCD
  1178 ;;		_initT0
  1179 ;;		_startT0
  1180 ;; This function is called by:
  1181 ;;		Startup code after reset
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text0
  1186  0034BE                     __ptext0:
  1187                           	opt stack 0
  1188  0034BE                     _main:
  1189                           	opt stack 22
  1190                           
  1191                           ;main.c: 35: OSCCON = 0xF0;
  1192                           
  1193                           ;incstack = 0
  1194  0034BE  0EF0               	movlw	240
  1195  0034C0  6ED3               	movwf	4051,c	;volatile
  1196                           
  1197                           ;main.c: 36: OSCTUNEbits.PLLEN = 1;
  1198  0034C2  8C9B               	bsf	3995,6,c	;volatile
  1199                           
  1200                           ;main.c: 39: TRISA = 0xFF;
  1201  0034C4  6892               	setf	3986,c	;volatile
  1202                           
  1203                           ;main.c: 40: TRISB = 0xFF;
  1204  0034C6  6893               	setf	3987,c	;volatile
  1205                           
  1206                           ;main.c: 41: TRISC = 0x00;
  1207  0034C8  0E00               	movlw	0
  1208  0034CA  6E94               	movwf	3988,c	;volatile
  1209                           
  1210                           ;main.c: 42: TRISD = 0x00;
  1211  0034CC  0E00               	movlw	0
  1212  0034CE  6E95               	movwf	3989,c	;volatile
  1213                           
  1214                           ;main.c: 43: TRISE = 0x00;
  1215  0034D0  0E00               	movlw	0
  1216  0034D2  6E96               	movwf	3990,c	;volatile
  1217                           
  1218                           ;main.c: 45: LATA = 0x00;
  1219  0034D4  0E00               	movlw	0
  1220  0034D6  6E89               	movwf	3977,c	;volatile
  1221                           
  1222                           ;main.c: 46: LATB = 0x00;
  1223  0034D8  0E00               	movlw	0
  1224  0034DA  6E8A               	movwf	3978,c	;volatile
  1225                           
  1226                           ;main.c: 47: LATC = 0x00;
  1227  0034DC  0E00               	movlw	0
  1228  0034DE  6E8B               	movwf	3979,c	;volatile
  1229                           
  1230                           ;main.c: 48: LATD = 0x00;
  1231  0034E0  0E00               	movlw	0
  1232  0034E2  6E8C               	movwf	3980,c	;volatile
  1233                           
  1234                           ;main.c: 49: LATE = 0x00;
  1235  0034E4  0E00               	movlw	0
  1236  0034E6  6E8D               	movwf	3981,c	;volatile
  1237                           
  1238                           ;main.c: 51: ADCON0 = 0x00;
  1239  0034E8  0E00               	movlw	0
  1240  0034EA  6EC2               	movwf	4034,c	;volatile
  1241                           
  1242                           ;main.c: 52: ADCON1 |= 0x0A;
  1243  0034EC  0E0A               	movlw	10
  1244  0034EE  12C1               	iorwf	4033,f,c	;volatile
  1245                           
  1246                           ;main.c: 56: ADCON2 = 0;
  1247  0034F0  0E00               	movlw	0
  1248  0034F2  6EC0               	movwf	4032,c	;volatile
  1249                           
  1250                           ;main.c: 57: ADCON2 |= 0b001;
  1251  0034F4  80C0               	bsf	4032,0,c	;volatile
  1252                           
  1253                           ;main.c: 58: ADCON2 |= 0b110<<3;
  1254  0034F6  0E30               	movlw	48
  1255  0034F8  12C0               	iorwf	4032,f,c	;volatile
  1256                           
  1257                           ;main.c: 59: ADCON2 |= 1<<7;
  1258  0034FA  8EC0               	bsf	4032,7,c	;volatile
  1259                           
  1260                           ;main.c: 61: initLCD();
  1261  0034FC  ECAC  F01B         	call	_initLCD	;wreg free
  1262                           
  1263                           ;main.c: 63: initT0();
  1264  003500  EC85  F01C         	call	_initT0	;wreg free
  1265                           
  1266                           ;main.c: 64: startT0(angle);
  1267  003504  C0E3  F0DC         	movff	_angle,startT0@milliseconds
  1268  003508  C0E4  F0DD         	movff	_angle+1,startT0@milliseconds+1
  1269  00350C  C0E5  F0DE         	movff	_angle+2,startT0@milliseconds+2
  1270  003510  ECEB  F014         	call	_startT0	;wreg free
  1271                           
  1272                           ;main.c: 65: digitalWrite(3,0,1);
  1273  003514  0E00               	movlw	0
  1274  003516  0100               	movlb	0	; () banked
  1275  003518  6F8F               	movwf	(digitalWrite@port+1)& (0+255),b
  1276  00351A  0E03               	movlw	3
  1277  00351C  6F8E               	movwf	digitalWrite@port& (0+255),b
  1278  00351E  0E00               	movlw	0
  1279  003520  0100               	movlb	0	; () banked
  1280  003522  6F91               	movwf	(digitalWrite@pin+1)& (0+255),b
  1281  003524  0E00               	movlw	0
  1282  003526  6F90               	movwf	digitalWrite@pin& (0+255),b
  1283  003528  0E00               	movlw	0
  1284  00352A  0100               	movlb	0	; () banked
  1285  00352C  6F93               	movwf	(digitalWrite@val+1)& (0+255),b
  1286  00352E  0E01               	movlw	1
  1287  003530  6F92               	movwf	digitalWrite@val& (0+255),b
  1288  003532  ECE0  F017         	call	_digitalWrite	;wreg free
  1289  003536                     l60:
  1290  003536  D7FF               	goto	l60
  1291  003538                     __end_of_main:
  1292                           	opt stack 0
  1293                           tblptru	equ	0xFF8
  1294                           tblptrh	equ	0xFF7
  1295                           tblptrl	equ	0xFF6
  1296                           tablat	equ	0xFF5
  1297                           postinc0	equ	0xFEE
  1298                           postdec1	equ	0xFE5
  1299                           fsr1l	equ	0xFE1
  1300                           
  1301 ;; *************** function _startT0 *****************
  1302 ;; Defined at:
  1303 ;;		line 60 in file "timer.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  milliseconds    3   92[BANK0 ] float 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  time            4    6[BANK1 ] long 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1317 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Totals:         0       3      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;Total ram usage:       13 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    8
  1324 ;; This function calls:
  1325 ;;		___altoft
  1326 ;;		___ftadd
  1327 ;;		___ftdiv
  1328 ;;		___ftmul
  1329 ;;		___ftneg
  1330 ;;		___fttol
  1331 ;; This function is called by:
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text1
  1337  0029D6                     __ptext1:
  1338                           	opt stack 0
  1339  0029D6                     _startT0:
  1340                           	opt stack 22
  1341                           
  1342                           ;timer.c: 65: long time = 0xFFFF - ( milliseconds / 1000.0 ) * extFreq / 4.0 / 256.0;
  1343                           
  1344                           ;incstack = 0
  1345  0029D6  C0DF  F096         	movff	_extFreq,___altoft@c
  1346  0029DA  C0E0  F097         	movff	_extFreq+1,___altoft@c+1
  1347  0029DE  C0E1  F098         	movff	_extFreq+2,___altoft@c+2
  1348  0029E2  C0E2  F099         	movff	_extFreq+3,___altoft@c+3
  1349  0029E6  ECFD  F018         	call	___altoft	;wreg free
  1350  0029EA  C096  F0B2         	movff	?___altoft,___ftmul@f2
  1351  0029EE  C097  F0B3         	movff	?___altoft+1,___ftmul@f2+1
  1352  0029F2  C098  F0B4         	movff	?___altoft+2,___ftmul@f2+2
  1353  0029F6  0E00               	movlw	0
  1354  0029F8  0100               	movlb	0	; () banked
  1355  0029FA  6FA3               	movwf	___ftdiv@f2& (0+255),b
  1356  0029FC  0E7A               	movlw	122
  1357  0029FE  0100               	movlb	0	; () banked
  1358  002A00  6FA4               	movwf	(___ftdiv@f2+1)& (0+255),b
  1359  002A02  0E44               	movlw	68
  1360  002A04  0100               	movlb	0	; () banked
  1361  002A06  6FA5               	movwf	(___ftdiv@f2+2)& (0+255),b
  1362  002A08  C0DC  F0A0         	movff	startT0@milliseconds,___ftdiv@f1
  1363  002A0C  C0DD  F0A1         	movff	startT0@milliseconds+1,___ftdiv@f1+1
  1364  002A10  C0DE  F0A2         	movff	startT0@milliseconds+2,___ftdiv@f1+2
  1365  002A14  EC76  F012         	call	___ftdiv	;wreg free
  1366  002A18  C0A0  F0AF         	movff	?___ftdiv,___ftmul@f1
  1367  002A1C  C0A1  F0B0         	movff	?___ftdiv+1,___ftmul@f1+1
  1368  002A20  C0A2  F0B1         	movff	?___ftdiv+2,___ftmul@f1+2
  1369  002A24  ECC7  F011         	call	___ftmul	;wreg free
  1370  002A28  C0AF  F100         	movff	?___ftmul,_startT0$1116
  1371  002A2C  C0B0  F101         	movff	?___ftmul+1,_startT0$1116+1
  1372  002A30  C0B1  F102         	movff	?___ftmul+2,_startT0$1116+2
  1373                           
  1374                           ;timer.c: 65: long time = 0xFFFF - ( milliseconds / 1000.0 ) * extFreq / 4.0 / 256.0;
  1375  002A34  0E00               	movlw	0
  1376  002A36  0100               	movlb	0	; () banked
  1377  002A38  6FA3               	movwf	___ftdiv@f2& (0+255),b
  1378  002A3A  0E80               	movlw	128
  1379  002A3C  0100               	movlb	0	; () banked
  1380  002A3E  6FA4               	movwf	(___ftdiv@f2+1)& (0+255),b
  1381  002A40  0E40               	movlw	64
  1382  002A42  0100               	movlb	0	; () banked
  1383  002A44  6FA5               	movwf	(___ftdiv@f2+2)& (0+255),b
  1384  002A46  C100  F0A0         	movff	_startT0$1116,___ftdiv@f1
  1385  002A4A  C101  F0A1         	movff	_startT0$1116+1,___ftdiv@f1+1
  1386  002A4E  C102  F0A2         	movff	_startT0$1116+2,___ftdiv@f1+2
  1387  002A52  EC76  F012         	call	___ftdiv	;wreg free
  1388  002A56  C0A0  F103         	movff	?___ftdiv,_startT0$1117
  1389  002A5A  C0A1  F104         	movff	?___ftdiv+1,_startT0$1117+1
  1390  002A5E  C0A2  F105         	movff	?___ftdiv+2,_startT0$1117+2
  1391                           
  1392                           ;timer.c: 65: long time = 0xFFFF - ( milliseconds / 1000.0 ) * extFreq / 4.0 / 256.0;
  1393  002A62  0EFF               	movlw	255
  1394  002A64  0100               	movlb	0	; () banked
  1395  002A66  6FC4               	movwf	___ftadd@f2& (0+255),b
  1396  002A68  0E7F               	movlw	127
  1397  002A6A  0100               	movlb	0	; () banked
  1398  002A6C  6FC5               	movwf	(___ftadd@f2+1)& (0+255),b
  1399  002A6E  0E47               	movlw	71
  1400  002A70  0100               	movlb	0	; () banked
  1401  002A72  6FC6               	movwf	(___ftadd@f2+2)& (0+255),b
  1402  002A74  0E00               	movlw	0
  1403  002A76  0100               	movlb	0	; () banked
  1404  002A78  6FA3               	movwf	___ftdiv@f2& (0+255),b
  1405  002A7A  0E80               	movlw	128
  1406  002A7C  0100               	movlb	0	; () banked
  1407  002A7E  6FA4               	movwf	(___ftdiv@f2+1)& (0+255),b
  1408  002A80  0E43               	movlw	67
  1409  002A82  0100               	movlb	0	; () banked
  1410  002A84  6FA5               	movwf	(___ftdiv@f2+2)& (0+255),b
  1411  002A86  C103  F0A0         	movff	_startT0$1117,___ftdiv@f1
  1412  002A8A  C104  F0A1         	movff	_startT0$1117+1,___ftdiv@f1+1
  1413  002A8E  C105  F0A2         	movff	_startT0$1117+2,___ftdiv@f1+2
  1414  002A92  EC76  F012         	call	___ftdiv	;wreg free
  1415  002A96  C0A0  F0BE         	movff	?___ftdiv,___ftneg@f1
  1416  002A9A  C0A1  F0BF         	movff	?___ftdiv+1,___ftneg@f1+1
  1417  002A9E  C0A2  F0C0         	movff	?___ftdiv+2,___ftneg@f1+2
  1418  002AA2  EC0B  F01C         	call	___ftneg	;wreg free
  1419  002AA6  C0BE  F0C1         	movff	?___ftneg,___ftadd@f1
  1420  002AAA  C0BF  F0C2         	movff	?___ftneg+1,___ftadd@f1+1
  1421  002AAE  C0C0  F0C3         	movff	?___ftneg+2,___ftadd@f1+2
  1422  002AB2  ECBE  F00D         	call	___ftadd	;wreg free
  1423  002AB6  C0C1  F0CD         	movff	?___ftadd,___fttol@f1
  1424  002ABA  C0C2  F0CE         	movff	?___ftadd+1,___fttol@f1+1
  1425  002ABE  C0C3  F0CF         	movff	?___ftadd+2,___fttol@f1+2
  1426  002AC2  EC1C  F013         	call	___fttol	;wreg free
  1427  002AC6  C0CD  F106         	movff	?___fttol,startT0@time
  1428  002ACA  C0CE  F107         	movff	?___fttol+1,startT0@time+1
  1429  002ACE  C0CF  F108         	movff	?___fttol+2,startT0@time+2
  1430  002AD2  C0D0  F109         	movff	?___fttol+3,startT0@time+3
  1431                           
  1432                           ;timer.c: 67: T0CON = 0;
  1433  002AD6  0E00               	movlw	0
  1434  002AD8  6ED5               	movwf	4053,c	;volatile
  1435                           
  1436                           ;timer.c: 70: T0CON |= 0b111;
  1437  002ADA  0E07               	movlw	7
  1438  002ADC  12D5               	iorwf	4053,f,c	;volatile
  1439                           
  1440                           ;timer.c: 71: TMR0H = time>>8;
  1441  002ADE  C107  FFD7         	movff	startT0@time+1,4055	;volatile
  1442                           
  1443                           ;timer.c: 72: TMR0L = time & 0xFF;
  1444  002AE2  C106  FFD6         	movff	startT0@time,4054	;volatile
  1445                           
  1446                           ;timer.c: 73: T0CON |= 1<<7;
  1447  002AE6  8ED5               	bsf	4053,7,c	;volatile
  1448  002AE8  0012               	return		;funcret
  1449  002AEA                     __end_of_startT0:
  1450                           	opt stack 0
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           postinc0	equ	0xFEE
  1456                           postdec1	equ	0xFE5
  1457                           fsr1l	equ	0xFE1
  1458                           
  1459 ;; *************** function ___fttol *****************
  1460 ;; Defined at:
  1461 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  f1              3   77[BANK0 ] float 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  lval            4   87[BANK0 ] unsigned long 
  1466 ;;  exp1            1   91[BANK0 ] unsigned char 
  1467 ;;  sign1           1   86[BANK0 ] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  4   77[BANK0 ] long 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;Total ram usage:       15 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    6
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_startT0
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text2
  1492  002638                     __ptext2:
  1493                           	opt stack 0
  1494  002638                     ___fttol:
  1495                           	opt stack 23
  1496                           
  1497                           ;incstack = 0
  1498  002638  C0CF  F0D1         	movff	___fttol@f1+2,??___fttol
  1499  00263C  0100               	movlb	0	; () banked
  1500  00263E  6BD2               	clrf	(??___fttol+1)& (0+255),b
  1501  002640  6BD3               	clrf	(??___fttol+2)& (0+255),b
  1502  002642  0100               	movlb	0	; () banked
  1503  002644  35CE               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1504  002646  0100               	movlb	0	; () banked
  1505  002648  37D1               	rlcf	??___fttol& (0+255),f,b
  1506  00264A  E301               	bnc	u8221
  1507  00264C  81D2               	bsf	(??___fttol+1)& (0+255),0,b
  1508  00264E                     u8221:
  1509  00264E  0100               	movlb	0	; () banked
  1510  002650  51D1               	movf	??___fttol& (0+255),w,b
  1511  002652  0100               	movlb	0	; () banked
  1512  002654  6FDB               	movwf	___fttol@exp1& (0+255),b
  1513  002656  0100               	movlb	0	; () banked
  1514  002658  51DB               	movf	___fttol@exp1& (0+255),w,b
  1515  00265A  A4D8               	btfss	status,2,c
  1516  00265C  D00A               	goto	l6684
  1517                           
  1518                           ; BSR set to: 0
  1519  00265E  0E00               	movlw	0
  1520  002660  0100               	movlb	0	; () banked
  1521  002662  6FCD               	movwf	?___fttol& (0+255),b
  1522  002664  0E00               	movlw	0
  1523  002666  6FCE               	movwf	(?___fttol+1)& (0+255),b
  1524  002668  0E00               	movlw	0
  1525  00266A  6FCF               	movwf	(?___fttol+2)& (0+255),b
  1526  00266C  0E00               	movlw	0
  1527  00266E  6FD0               	movwf	(?___fttol+3)& (0+255),b
  1528                           
  1529                           ; BSR set to: 0
  1530  002670  0012               	return	
  1531  002672                     l6684:
  1532                           
  1533                           ; BSR set to: 0
  1534  002672  0E17               	movlw	23
  1535  002674  0100               	movlb	0	; () banked
  1536  002676  6FD1               	movwf	??___fttol& (0+255),b
  1537  002678  C0CD  F0D2         	movff	___fttol@f1,??___fttol+1
  1538  00267C  C0CE  F0D3         	movff	___fttol@f1+1,??___fttol+2
  1539  002680  C0CF  F0D4         	movff	___fttol@f1+2,??___fttol+3
  1540  002684  0100               	movlb	0	; () banked
  1541  002686  29D1               	incf	??___fttol& (0+255),w,b
  1542  002688  0100               	movlb	0	; () banked
  1543  00268A  6FD5               	movwf	(??___fttol+4)& (0+255),b
  1544  00268C  D005               	goto	u8240
  1545  00268E                     u8245:
  1546  00268E  0100               	movlb	0	; () banked
  1547  002690  90D8               	bcf	status,0,c
  1548  002692  33D4               	rrcf	(??___fttol+3)& (0+255),f,b
  1549  002694  33D3               	rrcf	(??___fttol+2)& (0+255),f,b
  1550  002696  33D2               	rrcf	(??___fttol+1)& (0+255),f,b
  1551  002698                     u8240:
  1552  002698  0100               	movlb	0	; () banked
  1553  00269A  2FD5               	decfsz	(??___fttol+4)& (0+255),f,b
  1554  00269C  D7F8               	goto	u8245
  1555  00269E  0100               	movlb	0	; () banked
  1556  0026A0  51D2               	movf	(??___fttol+1)& (0+255),w,b
  1557  0026A2  0100               	movlb	0	; () banked
  1558  0026A4  6FD6               	movwf	___fttol@sign1& (0+255),b
  1559                           
  1560                           ; BSR set to: 0
  1561  0026A6  0100               	movlb	0	; () banked
  1562  0026A8  8FCE               	bsf	(___fttol@f1+1)& (0+255),7,b
  1563                           
  1564                           ; BSR set to: 0
  1565  0026AA  0EFF               	movlw	255
  1566  0026AC  0100               	movlb	0	; () banked
  1567  0026AE  17CD               	andwf	___fttol@f1& (0+255),f,b
  1568  0026B0  0EFF               	movlw	255
  1569  0026B2  0100               	movlb	0	; () banked
  1570  0026B4  17CE               	andwf	(___fttol@f1+1)& (0+255),f,b
  1571  0026B6  0E00               	movlw	0
  1572  0026B8  0100               	movlb	0	; () banked
  1573  0026BA  17CF               	andwf	(___fttol@f1+2)& (0+255),f,b
  1574                           
  1575                           ; BSR set to: 0
  1576  0026BC  0100               	movlb	0	; () banked
  1577  0026BE  51CD               	movf	___fttol@f1& (0+255),w,b
  1578  0026C0  0100               	movlb	0	; () banked
  1579  0026C2  6FD7               	movwf	___fttol@lval& (0+255),b
  1580  0026C4  0100               	movlb	0	; () banked
  1581  0026C6  51CE               	movf	(___fttol@f1+1)& (0+255),w,b
  1582  0026C8  0100               	movlb	0	; () banked
  1583  0026CA  6FD8               	movwf	(___fttol@lval+1)& (0+255),b
  1584  0026CC  0100               	movlb	0	; () banked
  1585  0026CE  51CF               	movf	(___fttol@f1+2)& (0+255),w,b
  1586  0026D0  0100               	movlb	0	; () banked
  1587  0026D2  6FD9               	movwf	(___fttol@lval+2)& (0+255),b
  1588  0026D4  0100               	movlb	0	; () banked
  1589  0026D6  6BDA               	clrf	(___fttol@lval+3)& (0+255),b
  1590                           
  1591                           ; BSR set to: 0
  1592  0026D8  0E8E               	movlw	142
  1593  0026DA  0100               	movlb	0	; () banked
  1594  0026DC  5FDB               	subwf	___fttol@exp1& (0+255),f,b
  1595                           
  1596                           ; BSR set to: 0
  1597  0026DE  0100               	movlb	0	; () banked
  1598  0026E0  AFDB               	btfss	___fttol@exp1& (0+255),7,b
  1599  0026E2  D01A               	goto	l6706
  1600                           
  1601                           ; BSR set to: 0
  1602  0026E4  0100               	movlb	0	; () banked
  1603  0026E6  51DB               	movf	___fttol@exp1& (0+255),w,b
  1604  0026E8  0A80               	xorlw	128
  1605  0026EA  0F8F               	addlw	143
  1606  0026EC  B0D8               	btfsc	status,0,c
  1607  0026EE  D00A               	goto	l6702
  1608                           
  1609                           ; BSR set to: 0
  1610  0026F0  0E00               	movlw	0
  1611  0026F2  0100               	movlb	0	; () banked
  1612  0026F4  6FCD               	movwf	?___fttol& (0+255),b
  1613  0026F6  0E00               	movlw	0
  1614  0026F8  6FCE               	movwf	(?___fttol+1)& (0+255),b
  1615  0026FA  0E00               	movlw	0
  1616  0026FC  6FCF               	movwf	(?___fttol+2)& (0+255),b
  1617  0026FE  0E00               	movlw	0
  1618  002700  6FD0               	movwf	(?___fttol+3)& (0+255),b
  1619                           
  1620                           ; BSR set to: 0
  1621  002702  0012               	return	
  1622  002704                     l6702:
  1623                           
  1624                           ; BSR set to: 0
  1625  002704  0100               	movlb	0	; () banked
  1626  002706  90D8               	bcf	status,0,c
  1627  002708  33DA               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1628  00270A  33D9               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1629  00270C  33D8               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1630  00270E  33D7               	rrcf	___fttol@lval& (0+255),f,b
  1631                           
  1632                           ; BSR set to: 0
  1633  002710  0100               	movlb	0	; () banked
  1634  002712  3FDB               	incfsz	___fttol@exp1& (0+255),f,b
  1635  002714  D7F7               	goto	l6702
  1636                           
  1637                           ; BSR set to: 0
  1638  002716  D01B               	goto	l6716
  1639  002718                     l6706:
  1640                           
  1641                           ; BSR set to: 0
  1642  002718  0E17               	movlw	23
  1643  00271A  0100               	movlb	0	; () banked
  1644  00271C  65DB               	cpfsgt	___fttol@exp1& (0+255),b
  1645  00271E  D012               	goto	l6714
  1646                           
  1647                           ; BSR set to: 0
  1648  002720  0E00               	movlw	0
  1649  002722  0100               	movlb	0	; () banked
  1650  002724  6FCD               	movwf	?___fttol& (0+255),b
  1651  002726  0E00               	movlw	0
  1652  002728  6FCE               	movwf	(?___fttol+1)& (0+255),b
  1653  00272A  0E00               	movlw	0
  1654  00272C  6FCF               	movwf	(?___fttol+2)& (0+255),b
  1655  00272E  0E00               	movlw	0
  1656  002730  6FD0               	movwf	(?___fttol+3)& (0+255),b
  1657                           
  1658                           ; BSR set to: 0
  1659  002732  0012               	return	
  1660  002734                     l6712:
  1661                           
  1662                           ; BSR set to: 0
  1663  002734  0100               	movlb	0	; () banked
  1664  002736  90D8               	bcf	status,0,c
  1665  002738  37D7               	rlcf	___fttol@lval& (0+255),f,b
  1666  00273A  37D8               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1667  00273C  37D9               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1668  00273E  37DA               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1669  002740  0100               	movlb	0	; () banked
  1670  002742  07DB               	decf	___fttol@exp1& (0+255),f,b
  1671  002744                     l6714:
  1672                           
  1673                           ; BSR set to: 0
  1674  002744  0100               	movlb	0	; () banked
  1675  002746  51DB               	movf	___fttol@exp1& (0+255),w,b
  1676  002748  0100               	movlb	0	; () banked
  1677  00274A  A4D8               	btfss	status,2,c
  1678  00274C  D7F3               	goto	l6712
  1679  00274E                     l6716:
  1680                           
  1681                           ; BSR set to: 0
  1682  00274E  0100               	movlb	0	; () banked
  1683  002750  51D6               	movf	___fttol@sign1& (0+255),w,b
  1684  002752  0100               	movlb	0	; () banked
  1685  002754  B4D8               	btfsc	status,2,c
  1686  002756  D009               	goto	l6720
  1687                           
  1688                           ; BSR set to: 0
  1689  002758  0100               	movlb	0	; () banked
  1690  00275A  1FDA               	comf	(___fttol@lval+3)& (0+255),f,b
  1691  00275C  1FD9               	comf	(___fttol@lval+2)& (0+255),f,b
  1692  00275E  1FD8               	comf	(___fttol@lval+1)& (0+255),f,b
  1693  002760  6DD7               	negf	___fttol@lval& (0+255),b
  1694  002762  0E00               	movlw	0
  1695  002764  23D8               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1696  002766  23D9               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1697  002768  23DA               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1698  00276A                     l6720:
  1699                           
  1700                           ; BSR set to: 0
  1701  00276A  C0D7  F0CD         	movff	___fttol@lval,?___fttol
  1702  00276E  C0D8  F0CE         	movff	___fttol@lval+1,?___fttol+1
  1703  002772  C0D9  F0CF         	movff	___fttol@lval+2,?___fttol+2
  1704  002776  C0DA  F0D0         	movff	___fttol@lval+3,?___fttol+3
  1705  00277A  0012               	return	
  1706  00277C                     __end_of___fttol:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           postinc0	equ	0xFEE
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function ___ftneg *****************
  1718 ;; Defined at:
  1719 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  f1              3   62[BANK0 ] float 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  3   62[BANK0 ] float 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1733 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;Total ram usage:        3 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    6
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_startT0
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text3
  1748  003816                     __ptext3:
  1749                           	opt stack 0
  1750  003816                     ___ftneg:
  1751                           	opt stack 23
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;incstack = 0
  1755  003816  0100               	movlb	0	; () banked
  1756  003818  51BE               	movf	___ftneg@f1& (0+255),w,b
  1757  00381A  0100               	movlb	0	; () banked
  1758  00381C  11BF               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  1759  00381E  0100               	movlb	0	; () banked
  1760  003820  11C0               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  1761  003822  B4D8               	btfsc	status,2,c
  1762  003824  D009               	goto	l791
  1763                           
  1764                           ; BSR set to: 0
  1765  003826  0E00               	movlw	0
  1766  003828  0100               	movlb	0	; () banked
  1767  00382A  1BBE               	xorwf	___ftneg@f1& (0+255),f,b
  1768  00382C  0E00               	movlw	0
  1769  00382E  0100               	movlb	0	; () banked
  1770  003830  1BBF               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  1771  003832  0E80               	movlw	128
  1772  003834  0100               	movlb	0	; () banked
  1773  003836  1BC0               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  1774  003838                     l791:
  1775                           
  1776                           ; BSR set to: 0
  1777  003838  C0BE  F0BE         	movff	___ftneg@f1,?___ftneg
  1778  00383C  C0BF  F0BF         	movff	___ftneg@f1+1,?___ftneg+1
  1779  003840  C0C0  F0C0         	movff	___ftneg@f1+2,?___ftneg+2
  1780                           
  1781                           ; BSR set to: 0
  1782  003844  0012               	return		;funcret
  1783  003846                     __end_of___ftneg:
  1784                           	opt stack 0
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           postinc0	equ	0xFEE
  1790                           postdec1	equ	0xFE5
  1791                           fsr1l	equ	0xFE1
  1792                           status	equ	0xFD8
  1793                           
  1794 ;; *************** function ___ftmul *****************
  1795 ;; Defined at:
  1796 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  f1              3   47[BANK0 ] float 
  1799 ;;  f2              3   50[BANK0 ] float 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  f3_as_produc    3   57[BANK0 ] unsigned um
  1802 ;;  sign            1   61[BANK0 ] unsigned char 
  1803 ;;  cntr            1   60[BANK0 ] unsigned char 
  1804 ;;  exp             1   56[BANK0 ] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  3   47[BANK0 ] float 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1814 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;Total ram usage:       15 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    7
  1821 ;; This function calls:
  1822 ;;		___ftpack
  1823 ;; This function is called by:
  1824 ;;		_startT0
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text4
  1829  00238E                     __ptext4:
  1830                           	opt stack 0
  1831  00238E                     ___ftmul:
  1832                           	opt stack 22
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;incstack = 0
  1836  00238E  C0B1  F0B5         	movff	___ftmul@f1+2,??___ftmul
  1837  002392  0100               	movlb	0	; () banked
  1838  002394  6BB6               	clrf	(??___ftmul+1)& (0+255),b
  1839  002396  6BB7               	clrf	(??___ftmul+2)& (0+255),b
  1840  002398  0100               	movlb	0	; () banked
  1841  00239A  35B0               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  1842  00239C  0100               	movlb	0	; () banked
  1843  00239E  37B5               	rlcf	??___ftmul& (0+255),f,b
  1844  0023A0  E301               	bnc	u8111
  1845  0023A2  81B6               	bsf	(??___ftmul+1)& (0+255),0,b
  1846  0023A4                     u8111:
  1847  0023A4  0100               	movlb	0	; () banked
  1848  0023A6  51B5               	movf	??___ftmul& (0+255),w,b
  1849  0023A8  0100               	movlb	0	; () banked
  1850  0023AA  6FB8               	movwf	___ftmul@exp& (0+255),b
  1851  0023AC  0100               	movlb	0	; () banked
  1852  0023AE  51B8               	movf	___ftmul@exp& (0+255),w,b
  1853  0023B0  A4D8               	btfss	status,2,c
  1854  0023B2  D00A               	goto	l6606
  1855                           
  1856                           ; BSR set to: 0
  1857  0023B4  0E00               	movlw	0
  1858  0023B6  0100               	movlb	0	; () banked
  1859  0023B8  6FAF               	movwf	?___ftmul& (0+255),b
  1860  0023BA  0E00               	movlw	0
  1861  0023BC  0100               	movlb	0	; () banked
  1862  0023BE  6FB0               	movwf	(?___ftmul+1)& (0+255),b
  1863  0023C0  0E00               	movlw	0
  1864  0023C2  0100               	movlb	0	; () banked
  1865  0023C4  6FB1               	movwf	(?___ftmul+2)& (0+255),b
  1866                           
  1867                           ; BSR set to: 0
  1868  0023C6  0012               	return	
  1869  0023C8                     l6606:
  1870                           
  1871                           ; BSR set to: 0
  1872  0023C8  C0B4  F0B5         	movff	___ftmul@f2+2,??___ftmul
  1873  0023CC  0100               	movlb	0	; () banked
  1874  0023CE  6BB6               	clrf	(??___ftmul+1)& (0+255),b
  1875  0023D0  6BB7               	clrf	(??___ftmul+2)& (0+255),b
  1876  0023D2  0100               	movlb	0	; () banked
  1877  0023D4  35B3               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  1878  0023D6  0100               	movlb	0	; () banked
  1879  0023D8  37B5               	rlcf	??___ftmul& (0+255),f,b
  1880  0023DA  E301               	bnc	u8131
  1881  0023DC  81B6               	bsf	(??___ftmul+1)& (0+255),0,b
  1882  0023DE                     u8131:
  1883  0023DE  0100               	movlb	0	; () banked
  1884  0023E0  51B5               	movf	??___ftmul& (0+255),w,b
  1885  0023E2  0100               	movlb	0	; () banked
  1886  0023E4  6FBD               	movwf	___ftmul@sign& (0+255),b
  1887  0023E6  0100               	movlb	0	; () banked
  1888  0023E8  51BD               	movf	___ftmul@sign& (0+255),w,b
  1889  0023EA  A4D8               	btfss	status,2,c
  1890  0023EC  D00A               	goto	l6612
  1891                           
  1892                           ; BSR set to: 0
  1893  0023EE  0E00               	movlw	0
  1894  0023F0  0100               	movlb	0	; () banked
  1895  0023F2  6FAF               	movwf	?___ftmul& (0+255),b
  1896  0023F4  0E00               	movlw	0
  1897  0023F6  0100               	movlb	0	; () banked
  1898  0023F8  6FB0               	movwf	(?___ftmul+1)& (0+255),b
  1899  0023FA  0E00               	movlw	0
  1900  0023FC  0100               	movlb	0	; () banked
  1901  0023FE  6FB1               	movwf	(?___ftmul+2)& (0+255),b
  1902                           
  1903                           ; BSR set to: 0
  1904  002400  0012               	return	
  1905  002402                     l6612:
  1906                           
  1907                           ; BSR set to: 0
  1908  002402  0100               	movlb	0	; () banked
  1909  002404  51BD               	movf	___ftmul@sign& (0+255),w,b
  1910  002406  0F7B               	addlw	123
  1911  002408  0100               	movlb	0	; () banked
  1912  00240A  27B8               	addwf	___ftmul@exp& (0+255),f,b
  1913                           
  1914                           ; BSR set to: 0
  1915  00240C  C0B1  F0BD         	movff	___ftmul@f1+2,___ftmul@sign
  1916  002410  0100               	movlb	0	; () banked
  1917  002412  51B4               	movf	(___ftmul@f2+2)& (0+255),w,b
  1918  002414  0100               	movlb	0	; () banked
  1919  002416  1BBD               	xorwf	___ftmul@sign& (0+255),f,b
  1920  002418  0E80               	movlw	128
  1921  00241A  0100               	movlb	0	; () banked
  1922  00241C  17BD               	andwf	___ftmul@sign& (0+255),f,b
  1923                           
  1924                           ; BSR set to: 0
  1925  00241E  0100               	movlb	0	; () banked
  1926  002420  8FB0               	bsf	(___ftmul@f1+1)& (0+255),7,b
  1927                           
  1928                           ; BSR set to: 0
  1929  002422  0100               	movlb	0	; () banked
  1930  002424  8FB3               	bsf	(___ftmul@f2+1)& (0+255),7,b
  1931                           
  1932                           ; BSR set to: 0
  1933  002426  0EFF               	movlw	255
  1934  002428  0100               	movlb	0	; () banked
  1935  00242A  17B2               	andwf	___ftmul@f2& (0+255),f,b
  1936  00242C  0EFF               	movlw	255
  1937  00242E  0100               	movlb	0	; () banked
  1938  002430  17B3               	andwf	(___ftmul@f2+1)& (0+255),f,b
  1939  002432  0E00               	movlw	0
  1940  002434  0100               	movlb	0	; () banked
  1941  002436  17B4               	andwf	(___ftmul@f2+2)& (0+255),f,b
  1942                           
  1943                           ; BSR set to: 0
  1944  002438  0E00               	movlw	0
  1945  00243A  0100               	movlb	0	; () banked
  1946  00243C  6FB9               	movwf	___ftmul@f3_as_product& (0+255),b
  1947  00243E  0E00               	movlw	0
  1948  002440  0100               	movlb	0	; () banked
  1949  002442  6FBA               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1950  002444  0E00               	movlw	0
  1951  002446  0100               	movlb	0	; () banked
  1952  002448  6FBB               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1953                           
  1954                           ; BSR set to: 0
  1955  00244A  0E07               	movlw	7
  1956  00244C  0100               	movlb	0	; () banked
  1957  00244E  6FBC               	movwf	___ftmul@cntr& (0+255),b
  1958  002450                     l6626:
  1959                           
  1960                           ; BSR set to: 0
  1961  002450  0100               	movlb	0	; () banked
  1962  002452  A1AF               	btfss	___ftmul@f1& (0+255),0,b
  1963  002454  D00C               	goto	l6630
  1964                           
  1965                           ; BSR set to: 0
  1966  002456  0100               	movlb	0	; () banked
  1967  002458  51B2               	movf	___ftmul@f2& (0+255),w,b
  1968  00245A  0100               	movlb	0	; () banked
  1969  00245C  27B9               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1970  00245E  0100               	movlb	0	; () banked
  1971  002460  51B3               	movf	(___ftmul@f2+1)& (0+255),w,b
  1972  002462  0100               	movlb	0	; () banked
  1973  002464  23BA               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1974  002466  0100               	movlb	0	; () banked
  1975  002468  51B4               	movf	(___ftmul@f2+2)& (0+255),w,b
  1976  00246A  0100               	movlb	0	; () banked
  1977  00246C  23BB               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1978  00246E                     l6630:
  1979                           
  1980                           ; BSR set to: 0
  1981  00246E  0100               	movlb	0	; () banked
  1982  002470  90D8               	bcf	status,0,c
  1983  002472  33B1               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  1984  002474  33B0               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  1985  002476  33AF               	rrcf	___ftmul@f1& (0+255),f,b
  1986  002478  0100               	movlb	0	; () banked
  1987  00247A  90D8               	bcf	status,0,c
  1988  00247C  37B2               	rlcf	___ftmul@f2& (0+255),f,b
  1989  00247E  37B3               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  1990  002480  37B4               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  1991                           
  1992                           ; BSR set to: 0
  1993  002482  0100               	movlb	0	; () banked
  1994  002484  2FBC               	decfsz	___ftmul@cntr& (0+255),f,b
  1995  002486  D7E4               	goto	l6626
  1996                           
  1997                           ; BSR set to: 0
  1998                           
  1999                           ; BSR set to: 0
  2000  002488  0E09               	movlw	9
  2001  00248A  0100               	movlb	0	; () banked
  2002  00248C  6FBC               	movwf	___ftmul@cntr& (0+255),b
  2003  00248E                     l6636:
  2004                           
  2005                           ; BSR set to: 0
  2006  00248E  0100               	movlb	0	; () banked
  2007  002490  A1AF               	btfss	___ftmul@f1& (0+255),0,b
  2008  002492  D00C               	goto	l6640
  2009                           
  2010                           ; BSR set to: 0
  2011  002494  0100               	movlb	0	; () banked
  2012  002496  51B2               	movf	___ftmul@f2& (0+255),w,b
  2013  002498  0100               	movlb	0	; () banked
  2014  00249A  27B9               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2015  00249C  0100               	movlb	0	; () banked
  2016  00249E  51B3               	movf	(___ftmul@f2+1)& (0+255),w,b
  2017  0024A0  0100               	movlb	0	; () banked
  2018  0024A2  23BA               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2019  0024A4  0100               	movlb	0	; () banked
  2020  0024A6  51B4               	movf	(___ftmul@f2+2)& (0+255),w,b
  2021  0024A8  0100               	movlb	0	; () banked
  2022  0024AA  23BB               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2023  0024AC                     l6640:
  2024                           
  2025                           ; BSR set to: 0
  2026  0024AC  0100               	movlb	0	; () banked
  2027  0024AE  90D8               	bcf	status,0,c
  2028  0024B0  33B1               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2029  0024B2  33B0               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2030  0024B4  33AF               	rrcf	___ftmul@f1& (0+255),f,b
  2031  0024B6  0100               	movlb	0	; () banked
  2032  0024B8  90D8               	bcf	status,0,c
  2033  0024BA  33BB               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2034  0024BC  33BA               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2035  0024BE  33B9               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2036                           
  2037                           ; BSR set to: 0
  2038  0024C0  0100               	movlb	0	; () banked
  2039  0024C2  2FBC               	decfsz	___ftmul@cntr& (0+255),f,b
  2040  0024C4  D7E4               	goto	l6636
  2041                           
  2042                           ; BSR set to: 0
  2043                           
  2044                           ; BSR set to: 0
  2045  0024C6  C0B9  F08E         	movff	___ftmul@f3_as_product,___ftpack@arg
  2046  0024CA  C0BA  F08F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2047  0024CE  C0BB  F090         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2048  0024D2  C0B8  F091         	movff	___ftmul@exp,___ftpack@exp
  2049  0024D6  C0BD  F092         	movff	___ftmul@sign,___ftpack@sign
  2050  0024DA  EC75  F015         	call	___ftpack	;wreg free
  2051  0024DE  C08E  F0AF         	movff	?___ftpack,?___ftmul
  2052  0024E2  C08F  F0B0         	movff	?___ftpack+1,?___ftmul+1
  2053  0024E6  C090  F0B1         	movff	?___ftpack+2,?___ftmul+2
  2054  0024EA  0012               	return	
  2055  0024EC                     __end_of___ftmul:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           postinc0	equ	0xFEE
  2062                           postdec1	equ	0xFE5
  2063                           fsr1l	equ	0xFE1
  2064                           status	equ	0xFD8
  2065                           
  2066 ;; *************** function ___ftdiv *****************
  2067 ;; Defined at:
  2068 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  f1              3   32[BANK0 ] float 
  2071 ;;  f2              3   35[BANK0 ] float 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  f3              3   43[BANK0 ] float 
  2074 ;;  sign            1   46[BANK0 ] unsigned char 
  2075 ;;  exp             1   42[BANK0 ] unsigned char 
  2076 ;;  cntr            1   41[BANK0 ] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  3   32[BANK0 ] float 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2086 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;Total ram usage:       15 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    7
  2093 ;; This function calls:
  2094 ;;		___ftpack
  2095 ;; This function is called by:
  2096 ;;		_startT0
  2097 ;;		_testFrequency
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text5
  2102  0024EC                     __ptext5:
  2103                           	opt stack 0
  2104  0024EC                     ___ftdiv:
  2105                           	opt stack 22
  2106                           
  2107                           ;incstack = 0
  2108  0024EC  C0A2  F0A6         	movff	___ftdiv@f1+2,??___ftdiv
  2109  0024F0  0100               	movlb	0	; () banked
  2110  0024F2  6BA7               	clrf	(??___ftdiv+1)& (0+255),b
  2111  0024F4  6BA8               	clrf	(??___ftdiv+2)& (0+255),b
  2112  0024F6  0100               	movlb	0	; () banked
  2113  0024F8  35A1               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2114  0024FA  0100               	movlb	0	; () banked
  2115  0024FC  37A6               	rlcf	??___ftdiv& (0+255),f,b
  2116  0024FE  E301               	bnc	u8061
  2117  002500  81A7               	bsf	(??___ftdiv+1)& (0+255),0,b
  2118  002502                     u8061:
  2119  002502  0100               	movlb	0	; () banked
  2120  002504  51A6               	movf	??___ftdiv& (0+255),w,b
  2121  002506  0100               	movlb	0	; () banked
  2122  002508  6FAA               	movwf	___ftdiv@exp& (0+255),b
  2123  00250A  0100               	movlb	0	; () banked
  2124  00250C  51AA               	movf	___ftdiv@exp& (0+255),w,b
  2125  00250E  A4D8               	btfss	status,2,c
  2126  002510  D00A               	goto	l6560
  2127                           
  2128                           ; BSR set to: 0
  2129  002512  0E00               	movlw	0
  2130  002514  0100               	movlb	0	; () banked
  2131  002516  6FA0               	movwf	?___ftdiv& (0+255),b
  2132  002518  0E00               	movlw	0
  2133  00251A  0100               	movlb	0	; () banked
  2134  00251C  6FA1               	movwf	(?___ftdiv+1)& (0+255),b
  2135  00251E  0E00               	movlw	0
  2136  002520  0100               	movlb	0	; () banked
  2137  002522  6FA2               	movwf	(?___ftdiv+2)& (0+255),b
  2138                           
  2139                           ; BSR set to: 0
  2140  002524  0012               	return	
  2141  002526                     l6560:
  2142                           
  2143                           ; BSR set to: 0
  2144  002526  C0A5  F0A6         	movff	___ftdiv@f2+2,??___ftdiv
  2145  00252A  0100               	movlb	0	; () banked
  2146  00252C  6BA7               	clrf	(??___ftdiv+1)& (0+255),b
  2147  00252E  6BA8               	clrf	(??___ftdiv+2)& (0+255),b
  2148  002530  0100               	movlb	0	; () banked
  2149  002532  35A4               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2150  002534  0100               	movlb	0	; () banked
  2151  002536  37A6               	rlcf	??___ftdiv& (0+255),f,b
  2152  002538  E301               	bnc	u8081
  2153  00253A  81A7               	bsf	(??___ftdiv+1)& (0+255),0,b
  2154  00253C                     u8081:
  2155  00253C  0100               	movlb	0	; () banked
  2156  00253E  51A6               	movf	??___ftdiv& (0+255),w,b
  2157  002540  0100               	movlb	0	; () banked
  2158  002542  6FAE               	movwf	___ftdiv@sign& (0+255),b
  2159  002544  0100               	movlb	0	; () banked
  2160  002546  51AE               	movf	___ftdiv@sign& (0+255),w,b
  2161  002548  A4D8               	btfss	status,2,c
  2162  00254A  D00A               	goto	l6566
  2163                           
  2164                           ; BSR set to: 0
  2165  00254C  0E00               	movlw	0
  2166  00254E  0100               	movlb	0	; () banked
  2167  002550  6FA0               	movwf	?___ftdiv& (0+255),b
  2168  002552  0E00               	movlw	0
  2169  002554  0100               	movlb	0	; () banked
  2170  002556  6FA1               	movwf	(?___ftdiv+1)& (0+255),b
  2171  002558  0E00               	movlw	0
  2172  00255A  0100               	movlb	0	; () banked
  2173  00255C  6FA2               	movwf	(?___ftdiv+2)& (0+255),b
  2174                           
  2175                           ; BSR set to: 0
  2176  00255E  0012               	return	
  2177  002560                     l6566:
  2178                           
  2179                           ; BSR set to: 0
  2180  002560  0E00               	movlw	0
  2181  002562  0100               	movlb	0	; () banked
  2182  002564  6FAB               	movwf	___ftdiv@f3& (0+255),b
  2183  002566  0E00               	movlw	0
  2184  002568  0100               	movlb	0	; () banked
  2185  00256A  6FAC               	movwf	(___ftdiv@f3+1)& (0+255),b
  2186  00256C  0E00               	movlw	0
  2187  00256E  0100               	movlb	0	; () banked
  2188  002570  6FAD               	movwf	(___ftdiv@f3+2)& (0+255),b
  2189                           
  2190                           ; BSR set to: 0
  2191  002572  0100               	movlb	0	; () banked
  2192  002574  51AE               	movf	___ftdiv@sign& (0+255),w,b
  2193  002576  0F89               	addlw	137
  2194  002578  0100               	movlb	0	; () banked
  2195  00257A  5FAA               	subwf	___ftdiv@exp& (0+255),f,b
  2196                           
  2197                           ; BSR set to: 0
  2198  00257C  C0A2  F0AE         	movff	___ftdiv@f1+2,___ftdiv@sign
  2199                           
  2200                           ; BSR set to: 0
  2201  002580  0100               	movlb	0	; () banked
  2202  002582  51A5               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2203  002584  0100               	movlb	0	; () banked
  2204  002586  1BAE               	xorwf	___ftdiv@sign& (0+255),f,b
  2205                           
  2206                           ; BSR set to: 0
  2207  002588  0E80               	movlw	128
  2208  00258A  0100               	movlb	0	; () banked
  2209  00258C  17AE               	andwf	___ftdiv@sign& (0+255),f,b
  2210                           
  2211                           ; BSR set to: 0
  2212  00258E  0100               	movlb	0	; () banked
  2213  002590  8FA1               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2214                           
  2215                           ; BSR set to: 0
  2216  002592  0EFF               	movlw	255
  2217  002594  0100               	movlb	0	; () banked
  2218  002596  17A0               	andwf	___ftdiv@f1& (0+255),f,b
  2219  002598  0EFF               	movlw	255
  2220  00259A  0100               	movlb	0	; () banked
  2221  00259C  17A1               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2222  00259E  0E00               	movlw	0
  2223  0025A0  0100               	movlb	0	; () banked
  2224  0025A2  17A2               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2225                           
  2226                           ; BSR set to: 0
  2227  0025A4  0100               	movlb	0	; () banked
  2228  0025A6  8FA4               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2229                           
  2230                           ; BSR set to: 0
  2231  0025A8  0EFF               	movlw	255
  2232  0025AA  0100               	movlb	0	; () banked
  2233  0025AC  17A3               	andwf	___ftdiv@f2& (0+255),f,b
  2234  0025AE  0EFF               	movlw	255
  2235  0025B0  0100               	movlb	0	; () banked
  2236  0025B2  17A4               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2237  0025B4  0E00               	movlw	0
  2238  0025B6  0100               	movlb	0	; () banked
  2239  0025B8  17A5               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2240                           
  2241                           ; BSR set to: 0
  2242  0025BA  0E18               	movlw	24
  2243  0025BC  0100               	movlb	0	; () banked
  2244  0025BE  6FA9               	movwf	___ftdiv@cntr& (0+255),b
  2245  0025C0                     l6586:
  2246                           
  2247                           ; BSR set to: 0
  2248  0025C0  0100               	movlb	0	; () banked
  2249  0025C2  90D8               	bcf	status,0,c
  2250  0025C4  37AB               	rlcf	___ftdiv@f3& (0+255),f,b
  2251  0025C6  37AC               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2252  0025C8  37AD               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2253                           
  2254                           ; BSR set to: 0
  2255  0025CA  0100               	movlb	0	; () banked
  2256  0025CC  51A3               	movf	___ftdiv@f2& (0+255),w,b
  2257  0025CE  0100               	movlb	0	; () banked
  2258  0025D0  5DA0               	subwf	___ftdiv@f1& (0+255),w,b
  2259  0025D2  0100               	movlb	0	; () banked
  2260  0025D4  51A4               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2261  0025D6  0100               	movlb	0	; () banked
  2262  0025D8  59A1               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2263  0025DA  0100               	movlb	0	; () banked
  2264  0025DC  51A5               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2265  0025DE  0100               	movlb	0	; () banked
  2266  0025E0  59A2               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2267  0025E2  A0D8               	btfss	status,0,c
  2268  0025E4  D00E               	goto	l752
  2269                           
  2270                           ; BSR set to: 0
  2271  0025E6  0100               	movlb	0	; () banked
  2272  0025E8  51A3               	movf	___ftdiv@f2& (0+255),w,b
  2273  0025EA  0100               	movlb	0	; () banked
  2274  0025EC  5FA0               	subwf	___ftdiv@f1& (0+255),f,b
  2275  0025EE  0100               	movlb	0	; () banked
  2276  0025F0  51A4               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2277  0025F2  0100               	movlb	0	; () banked
  2278  0025F4  5BA1               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2279  0025F6  0100               	movlb	0	; () banked
  2280  0025F8  51A5               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2281  0025FA  0100               	movlb	0	; () banked
  2282  0025FC  5BA2               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2283                           
  2284                           ; BSR set to: 0
  2285  0025FE  0100               	movlb	0	; () banked
  2286  002600  81AB               	bsf	___ftdiv@f3& (0+255),0,b
  2287  002602                     l752:
  2288                           
  2289                           ; BSR set to: 0
  2290  002602  0100               	movlb	0	; () banked
  2291  002604  90D8               	bcf	status,0,c
  2292  002606  37A0               	rlcf	___ftdiv@f1& (0+255),f,b
  2293  002608  37A1               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2294  00260A  37A2               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2295                           
  2296                           ; BSR set to: 0
  2297  00260C  0100               	movlb	0	; () banked
  2298  00260E  2FA9               	decfsz	___ftdiv@cntr& (0+255),f,b
  2299  002610  D7D7               	goto	l6586
  2300                           
  2301                           ; BSR set to: 0
  2302                           
  2303                           ; BSR set to: 0
  2304  002612  C0AB  F08E         	movff	___ftdiv@f3,___ftpack@arg
  2305  002616  C0AC  F08F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2306  00261A  C0AD  F090         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2307  00261E  C0AA  F091         	movff	___ftdiv@exp,___ftpack@exp
  2308  002622  C0AE  F092         	movff	___ftdiv@sign,___ftpack@sign
  2309  002626  EC75  F015         	call	___ftpack	;wreg free
  2310  00262A  C08E  F0A0         	movff	?___ftpack,?___ftdiv
  2311  00262E  C08F  F0A1         	movff	?___ftpack+1,?___ftdiv+1
  2312  002632  C090  F0A2         	movff	?___ftpack+2,?___ftdiv+2
  2313  002636  0012               	return	
  2314  002638                     __end_of___ftdiv:
  2315                           	opt stack 0
  2316                           tblptru	equ	0xFF8
  2317                           tblptrh	equ	0xFF7
  2318                           tblptrl	equ	0xFF6
  2319                           tablat	equ	0xFF5
  2320                           postinc0	equ	0xFEE
  2321                           postdec1	equ	0xFE5
  2322                           fsr1l	equ	0xFE1
  2323                           status	equ	0xFD8
  2324                           
  2325 ;; *************** function ___ftadd *****************
  2326 ;; Defined at:
  2327 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  f1              3   65[BANK0 ] float 
  2330 ;;  f2              3   68[BANK0 ] float 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  exp1            1   76[BANK0 ] unsigned char 
  2333 ;;  exp2            1   75[BANK0 ] unsigned char 
  2334 ;;  sign            1   74[BANK0 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  3   65[BANK0 ] float 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2344 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;Total ram usage:       12 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    7
  2351 ;; This function calls:
  2352 ;;		___ftpack
  2353 ;; This function is called by:
  2354 ;;		_startT0
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text6
  2359  001B7C                     __ptext6:
  2360                           	opt stack 0
  2361  001B7C                     ___ftadd:
  2362                           	opt stack 22
  2363                           
  2364                           ;incstack = 0
  2365  001B7C  C0C3  F0C7         	movff	___ftadd@f1+2,??___ftadd
  2366  001B80  0100               	movlb	0	; () banked
  2367  001B82  6BC8               	clrf	(??___ftadd+1)& (0+255),b
  2368  001B84  6BC9               	clrf	(??___ftadd+2)& (0+255),b
  2369  001B86  0100               	movlb	0	; () banked
  2370  001B88  35C2               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2371  001B8A  0100               	movlb	0	; () banked
  2372  001B8C  37C7               	rlcf	??___ftadd& (0+255),f,b
  2373  001B8E  E301               	bnc	u7851
  2374  001B90  81C8               	bsf	(??___ftadd+1)& (0+255),0,b
  2375  001B92                     u7851:
  2376  001B92  0100               	movlb	0	; () banked
  2377  001B94  51C7               	movf	??___ftadd& (0+255),w,b
  2378  001B96  0100               	movlb	0	; () banked
  2379  001B98  6FCC               	movwf	___ftadd@exp1& (0+255),b
  2380  001B9A  C0C6  F0C7         	movff	___ftadd@f2+2,??___ftadd
  2381  001B9E  0100               	movlb	0	; () banked
  2382  001BA0  6BC8               	clrf	(??___ftadd+1)& (0+255),b
  2383  001BA2  6BC9               	clrf	(??___ftadd+2)& (0+255),b
  2384  001BA4  0100               	movlb	0	; () banked
  2385  001BA6  35C5               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2386  001BA8  0100               	movlb	0	; () banked
  2387  001BAA  37C7               	rlcf	??___ftadd& (0+255),f,b
  2388  001BAC  E301               	bnc	u7861
  2389  001BAE  81C8               	bsf	(??___ftadd+1)& (0+255),0,b
  2390  001BB0                     u7861:
  2391  001BB0  0100               	movlb	0	; () banked
  2392  001BB2  51C7               	movf	??___ftadd& (0+255),w,b
  2393  001BB4  0100               	movlb	0	; () banked
  2394  001BB6  6FCB               	movwf	___ftadd@exp2& (0+255),b
  2395                           
  2396                           ; BSR set to: 0
  2397  001BB8  0100               	movlb	0	; () banked
  2398  001BBA  51CC               	movf	___ftadd@exp1& (0+255),w,b
  2399  001BBC  0100               	movlb	0	; () banked
  2400  001BBE  B4D8               	btfsc	status,2,c
  2401  001BC0  D011               	goto	l717
  2402                           
  2403                           ; BSR set to: 0
  2404  001BC2  0100               	movlb	0	; () banked
  2405  001BC4  51CB               	movf	___ftadd@exp2& (0+255),w,b
  2406  001BC6  0100               	movlb	0	; () banked
  2407  001BC8  5DCC               	subwf	___ftadd@exp1& (0+255),w,b
  2408  001BCA  B0D8               	btfsc	status,0,c
  2409  001BCC  D012               	goto	l6492
  2410                           
  2411                           ; BSR set to: 0
  2412  001BCE  0100               	movlb	0	; () banked
  2413  001BD0  51CC               	movf	___ftadd@exp1& (0+255),w,b
  2414  001BD2  0800               	sublw	0
  2415  001BD4  0100               	movlb	0	; () banked
  2416  001BD6  25CB               	addwf	___ftadd@exp2& (0+255),w,b
  2417  001BD8  0100               	movlb	0	; () banked
  2418  001BDA  6FC7               	movwf	??___ftadd& (0+255),b
  2419  001BDC  0E18               	movlw	24
  2420  001BDE  0100               	movlb	0	; () banked
  2421  001BE0  65C7               	cpfsgt	??___ftadd& (0+255),b
  2422  001BE2  D007               	goto	l6492
  2423  001BE4                     l717:
  2424                           
  2425                           ; BSR set to: 0
  2426  001BE4  C0C4  F0C1         	movff	___ftadd@f2,?___ftadd
  2427  001BE8  C0C5  F0C2         	movff	___ftadd@f2+1,?___ftadd+1
  2428  001BEC  C0C6  F0C3         	movff	___ftadd@f2+2,?___ftadd+2
  2429  001BF0  0012               	return	
  2430  001BF2                     l6492:
  2431                           
  2432                           ; BSR set to: 0
  2433  001BF2  0100               	movlb	0	; () banked
  2434  001BF4  51CB               	movf	___ftadd@exp2& (0+255),w,b
  2435  001BF6  0100               	movlb	0	; () banked
  2436  001BF8  B4D8               	btfsc	status,2,c
  2437  001BFA  D011               	goto	l721
  2438                           
  2439                           ; BSR set to: 0
  2440  001BFC  0100               	movlb	0	; () banked
  2441  001BFE  51CC               	movf	___ftadd@exp1& (0+255),w,b
  2442  001C00  0100               	movlb	0	; () banked
  2443  001C02  5DCB               	subwf	___ftadd@exp2& (0+255),w,b
  2444  001C04  B0D8               	btfsc	status,0,c
  2445  001C06  D012               	goto	l6498
  2446                           
  2447                           ; BSR set to: 0
  2448  001C08  0100               	movlb	0	; () banked
  2449  001C0A  51CB               	movf	___ftadd@exp2& (0+255),w,b
  2450  001C0C  0800               	sublw	0
  2451  001C0E  0100               	movlb	0	; () banked
  2452  001C10  25CC               	addwf	___ftadd@exp1& (0+255),w,b
  2453  001C12  0100               	movlb	0	; () banked
  2454  001C14  6FC7               	movwf	??___ftadd& (0+255),b
  2455  001C16  0E18               	movlw	24
  2456  001C18  0100               	movlb	0	; () banked
  2457  001C1A  65C7               	cpfsgt	??___ftadd& (0+255),b
  2458  001C1C  D007               	goto	l6498
  2459  001C1E                     l721:
  2460                           
  2461                           ; BSR set to: 0
  2462  001C1E  C0C1  F0C1         	movff	___ftadd@f1,?___ftadd
  2463  001C22  C0C2  F0C2         	movff	___ftadd@f1+1,?___ftadd+1
  2464  001C26  C0C3  F0C3         	movff	___ftadd@f1+2,?___ftadd+2
  2465  001C2A  0012               	return	
  2466  001C2C                     l6498:
  2467                           
  2468                           ; BSR set to: 0
  2469  001C2C  0E06               	movlw	6
  2470  001C2E  0100               	movlb	0	; () banked
  2471  001C30  6FCA               	movwf	___ftadd@sign& (0+255),b
  2472                           
  2473                           ; BSR set to: 0
  2474  001C32  0100               	movlb	0	; () banked
  2475  001C34  AFC3               	btfss	(___ftadd@f1+2)& (0+255),7,b
  2476  001C36  D002               	goto	l6504
  2477                           
  2478                           ; BSR set to: 0
  2479  001C38  0100               	movlb	0	; () banked
  2480  001C3A  8FCA               	bsf	___ftadd@sign& (0+255),7,b
  2481  001C3C                     l6504:
  2482                           
  2483                           ; BSR set to: 0
  2484  001C3C  0100               	movlb	0	; () banked
  2485  001C3E  AFC6               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2486  001C40  D002               	goto	l723
  2487                           
  2488                           ; BSR set to: 0
  2489  001C42  0100               	movlb	0	; () banked
  2490  001C44  8DCA               	bsf	___ftadd@sign& (0+255),6,b
  2491  001C46                     l723:
  2492                           
  2493                           ; BSR set to: 0
  2494  001C46  0100               	movlb	0	; () banked
  2495  001C48  8FC2               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2496                           
  2497                           ; BSR set to: 0
  2498  001C4A  0EFF               	movlw	255
  2499  001C4C  0100               	movlb	0	; () banked
  2500  001C4E  17C1               	andwf	___ftadd@f1& (0+255),f,b
  2501  001C50  0EFF               	movlw	255
  2502  001C52  0100               	movlb	0	; () banked
  2503  001C54  17C2               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2504  001C56  0E00               	movlw	0
  2505  001C58  0100               	movlb	0	; () banked
  2506  001C5A  17C3               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2507  001C5C  0100               	movlb	0	; () banked
  2508  001C5E  8FC5               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2509                           
  2510                           ; BSR set to: 0
  2511  001C60  0EFF               	movlw	255
  2512  001C62  0100               	movlb	0	; () banked
  2513  001C64  17C4               	andwf	___ftadd@f2& (0+255),f,b
  2514  001C66  0EFF               	movlw	255
  2515  001C68  0100               	movlb	0	; () banked
  2516  001C6A  17C5               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2517  001C6C  0E00               	movlw	0
  2518  001C6E  0100               	movlb	0	; () banked
  2519  001C70  17C6               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2520                           
  2521                           ; BSR set to: 0
  2522  001C72  0100               	movlb	0	; () banked
  2523  001C74  51CB               	movf	___ftadd@exp2& (0+255),w,b
  2524  001C76  0100               	movlb	0	; () banked
  2525  001C78  5DCC               	subwf	___ftadd@exp1& (0+255),w,b
  2526  001C7A  B0D8               	btfsc	status,0,c
  2527  001C7C  D025               	goto	l6524
  2528  001C7E                     l6514:
  2529                           
  2530                           ; BSR set to: 0
  2531  001C7E  0100               	movlb	0	; () banked
  2532  001C80  90D8               	bcf	status,0,c
  2533  001C82  37C4               	rlcf	___ftadd@f2& (0+255),f,b
  2534  001C84  37C5               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2535  001C86  37C6               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2536  001C88  0100               	movlb	0	; () banked
  2537  001C8A  07CB               	decf	___ftadd@exp2& (0+255),f,b
  2538                           
  2539                           ; BSR set to: 0
  2540  001C8C  0100               	movlb	0	; () banked
  2541  001C8E  51CC               	movf	___ftadd@exp1& (0+255),w,b
  2542  001C90  0100               	movlb	0	; () banked
  2543  001C92  19CB               	xorwf	___ftadd@exp2& (0+255),w,b
  2544  001C94  B4D8               	btfsc	status,2,c
  2545  001C96  D011               	goto	l6522
  2546                           
  2547                           ; BSR set to: 0
  2548  001C98  0100               	movlb	0	; () banked
  2549  001C9A  07CA               	decf	___ftadd@sign& (0+255),f,b
  2550  001C9C  C0CA  F0C7         	movff	___ftadd@sign,??___ftadd
  2551  001CA0  0E07               	movlw	7
  2552  001CA2  0100               	movlb	0	; () banked
  2553  001CA4  17C7               	andwf	??___ftadd& (0+255),f,b
  2554  001CA6  B4D8               	btfsc	status,2,c
  2555  001CA8  D008               	goto	l6522
  2556  001CAA  D7E9               	goto	l6514
  2557  001CAC                     l6520:
  2558                           
  2559                           ; BSR set to: 0
  2560  001CAC  0100               	movlb	0	; () banked
  2561  001CAE  90D8               	bcf	status,0,c
  2562  001CB0  33C3               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2563  001CB2  33C2               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2564  001CB4  33C1               	rrcf	___ftadd@f1& (0+255),f,b
  2565  001CB6  0100               	movlb	0	; () banked
  2566  001CB8  2BCC               	incf	___ftadd@exp1& (0+255),f,b
  2567  001CBA                     l6522:
  2568                           
  2569                           ; BSR set to: 0
  2570  001CBA  0100               	movlb	0	; () banked
  2571  001CBC  51CB               	movf	___ftadd@exp2& (0+255),w,b
  2572  001CBE  0100               	movlb	0	; () banked
  2573  001CC0  19CC               	xorwf	___ftadd@exp1& (0+255),w,b
  2574  001CC2  B4D8               	btfsc	status,2,c
  2575  001CC4  D02B               	goto	l732
  2576  001CC6  D7F2               	goto	l6520
  2577  001CC8                     l6524:
  2578                           
  2579                           ; BSR set to: 0
  2580  001CC8  0100               	movlb	0	; () banked
  2581  001CCA  51CC               	movf	___ftadd@exp1& (0+255),w,b
  2582  001CCC  0100               	movlb	0	; () banked
  2583  001CCE  5DCB               	subwf	___ftadd@exp2& (0+255),w,b
  2584  001CD0  B0D8               	btfsc	status,0,c
  2585  001CD2  D024               	goto	l732
  2586  001CD4                     l6526:
  2587                           
  2588                           ; BSR set to: 0
  2589  001CD4  0100               	movlb	0	; () banked
  2590  001CD6  90D8               	bcf	status,0,c
  2591  001CD8  37C1               	rlcf	___ftadd@f1& (0+255),f,b
  2592  001CDA  37C2               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2593  001CDC  37C3               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2594  001CDE  0100               	movlb	0	; () banked
  2595  001CE0  07CC               	decf	___ftadd@exp1& (0+255),f,b
  2596                           
  2597                           ; BSR set to: 0
  2598  001CE2  0100               	movlb	0	; () banked
  2599  001CE4  51CC               	movf	___ftadd@exp1& (0+255),w,b
  2600  001CE6  0100               	movlb	0	; () banked
  2601  001CE8  19CB               	xorwf	___ftadd@exp2& (0+255),w,b
  2602  001CEA  B4D8               	btfsc	status,2,c
  2603  001CEC  D011               	goto	l6534
  2604                           
  2605                           ; BSR set to: 0
  2606  001CEE  0100               	movlb	0	; () banked
  2607  001CF0  07CA               	decf	___ftadd@sign& (0+255),f,b
  2608  001CF2  C0CA  F0C7         	movff	___ftadd@sign,??___ftadd
  2609  001CF6  0E07               	movlw	7
  2610  001CF8  0100               	movlb	0	; () banked
  2611  001CFA  17C7               	andwf	??___ftadd& (0+255),f,b
  2612  001CFC  B4D8               	btfsc	status,2,c
  2613  001CFE  D008               	goto	l6534
  2614  001D00  D7E9               	goto	l6526
  2615  001D02                     l6532:
  2616                           
  2617                           ; BSR set to: 0
  2618  001D02  0100               	movlb	0	; () banked
  2619  001D04  90D8               	bcf	status,0,c
  2620  001D06  33C6               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2621  001D08  33C5               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2622  001D0A  33C4               	rrcf	___ftadd@f2& (0+255),f,b
  2623  001D0C  0100               	movlb	0	; () banked
  2624  001D0E  2BCB               	incf	___ftadd@exp2& (0+255),f,b
  2625  001D10                     l6534:
  2626                           
  2627                           ; BSR set to: 0
  2628  001D10  0100               	movlb	0	; () banked
  2629  001D12  51CB               	movf	___ftadd@exp2& (0+255),w,b
  2630  001D14  0100               	movlb	0	; () banked
  2631  001D16  19CC               	xorwf	___ftadd@exp1& (0+255),w,b
  2632  001D18  A4D8               	btfss	status,2,c
  2633  001D1A  D7F3               	goto	l6532
  2634  001D1C                     l732:
  2635                           
  2636                           ; BSR set to: 0
  2637  001D1C  0100               	movlb	0	; () banked
  2638  001D1E  AFCA               	btfss	___ftadd@sign& (0+255),7,b
  2639  001D20  D012               	goto	l741
  2640                           
  2641                           ; BSR set to: 0
  2642  001D22  0EFF               	movlw	255
  2643  001D24  0100               	movlb	0	; () banked
  2644  001D26  1BC1               	xorwf	___ftadd@f1& (0+255),f,b
  2645  001D28  0EFF               	movlw	255
  2646  001D2A  0100               	movlb	0	; () banked
  2647  001D2C  1BC2               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2648  001D2E  0EFF               	movlw	255
  2649  001D30  0100               	movlb	0	; () banked
  2650  001D32  1BC3               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2651  001D34  0E01               	movlw	1
  2652  001D36  0100               	movlb	0	; () banked
  2653  001D38  27C1               	addwf	___ftadd@f1& (0+255),f,b
  2654  001D3A  0E00               	movlw	0
  2655  001D3C  0100               	movlb	0	; () banked
  2656  001D3E  23C2               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2657  001D40  0E00               	movlw	0
  2658  001D42  0100               	movlb	0	; () banked
  2659  001D44  23C3               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2660  001D46                     l741:
  2661                           
  2662                           ; BSR set to: 0
  2663  001D46  0100               	movlb	0	; () banked
  2664  001D48  ADCA               	btfss	___ftadd@sign& (0+255),6,b
  2665  001D4A  D012               	goto	l6540
  2666                           
  2667                           ; BSR set to: 0
  2668  001D4C  0EFF               	movlw	255
  2669  001D4E  0100               	movlb	0	; () banked
  2670  001D50  1BC4               	xorwf	___ftadd@f2& (0+255),f,b
  2671  001D52  0EFF               	movlw	255
  2672  001D54  0100               	movlb	0	; () banked
  2673  001D56  1BC5               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2674  001D58  0EFF               	movlw	255
  2675  001D5A  0100               	movlb	0	; () banked
  2676  001D5C  1BC6               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2677  001D5E  0E01               	movlw	1
  2678  001D60  0100               	movlb	0	; () banked
  2679  001D62  27C4               	addwf	___ftadd@f2& (0+255),f,b
  2680  001D64  0E00               	movlw	0
  2681  001D66  0100               	movlb	0	; () banked
  2682  001D68  23C5               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2683  001D6A  0E00               	movlw	0
  2684  001D6C  0100               	movlb	0	; () banked
  2685  001D6E  23C6               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2686  001D70                     l6540:
  2687                           
  2688                           ; BSR set to: 0
  2689  001D70  0E00               	movlw	0
  2690  001D72  0100               	movlb	0	; () banked
  2691  001D74  6FCA               	movwf	___ftadd@sign& (0+255),b
  2692                           
  2693                           ; BSR set to: 0
  2694  001D76  0100               	movlb	0	; () banked
  2695  001D78  51C1               	movf	___ftadd@f1& (0+255),w,b
  2696  001D7A  0100               	movlb	0	; () banked
  2697  001D7C  27C4               	addwf	___ftadd@f2& (0+255),f,b
  2698  001D7E  0100               	movlb	0	; () banked
  2699  001D80  51C2               	movf	(___ftadd@f1+1)& (0+255),w,b
  2700  001D82  0100               	movlb	0	; () banked
  2701  001D84  23C5               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2702  001D86  0100               	movlb	0	; () banked
  2703  001D88  51C3               	movf	(___ftadd@f1+2)& (0+255),w,b
  2704  001D8A  0100               	movlb	0	; () banked
  2705  001D8C  23C6               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2706                           
  2707                           ; BSR set to: 0
  2708  001D8E  0100               	movlb	0	; () banked
  2709  001D90  AFC6               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2710  001D92  D015               	goto	l6550
  2711                           
  2712                           ; BSR set to: 0
  2713  001D94  0EFF               	movlw	255
  2714  001D96  0100               	movlb	0	; () banked
  2715  001D98  1BC4               	xorwf	___ftadd@f2& (0+255),f,b
  2716  001D9A  0EFF               	movlw	255
  2717  001D9C  0100               	movlb	0	; () banked
  2718  001D9E  1BC5               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2719  001DA0  0EFF               	movlw	255
  2720  001DA2  0100               	movlb	0	; () banked
  2721  001DA4  1BC6               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2722  001DA6  0E01               	movlw	1
  2723  001DA8  0100               	movlb	0	; () banked
  2724  001DAA  27C4               	addwf	___ftadd@f2& (0+255),f,b
  2725  001DAC  0E00               	movlw	0
  2726  001DAE  0100               	movlb	0	; () banked
  2727  001DB0  23C5               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2728  001DB2  0E00               	movlw	0
  2729  001DB4  0100               	movlb	0	; () banked
  2730  001DB6  23C6               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2731                           
  2732                           ; BSR set to: 0
  2733  001DB8  0E01               	movlw	1
  2734  001DBA  0100               	movlb	0	; () banked
  2735  001DBC  6FCA               	movwf	___ftadd@sign& (0+255),b
  2736  001DBE                     l6550:
  2737                           
  2738                           ; BSR set to: 0
  2739  001DBE  C0C4  F08E         	movff	___ftadd@f2,___ftpack@arg
  2740  001DC2  C0C5  F08F         	movff	___ftadd@f2+1,___ftpack@arg+1
  2741  001DC6  C0C6  F090         	movff	___ftadd@f2+2,___ftpack@arg+2
  2742  001DCA  C0CC  F091         	movff	___ftadd@exp1,___ftpack@exp
  2743  001DCE  C0CA  F092         	movff	___ftadd@sign,___ftpack@sign
  2744  001DD2  EC75  F015         	call	___ftpack	;wreg free
  2745  001DD6  C08E  F0C1         	movff	?___ftpack,?___ftadd
  2746  001DDA  C08F  F0C2         	movff	?___ftpack+1,?___ftadd+1
  2747  001DDE  C090  F0C3         	movff	?___ftpack+2,?___ftadd+2
  2748  001DE2  0012               	return	
  2749  001DE4                     __end_of___ftadd:
  2750                           	opt stack 0
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           postinc0	equ	0xFEE
  2756                           postdec1	equ	0xFE5
  2757                           fsr1l	equ	0xFE1
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function ___altoft *****************
  2761 ;; Defined at:
  2762 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\altoft.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  c               4   22[BANK0 ] long 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  sign            1   31[BANK0 ] unsigned char 
  2767 ;;  exp             1   30[BANK0 ] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  3   22[BANK0 ] float 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:       10 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    7
  2784 ;; This function calls:
  2785 ;;		___ftpack
  2786 ;; This function is called by:
  2787 ;;		_startT0
  2788 ;;		_testFrequency
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text7
  2793  0031FA                     __ptext7:
  2794                           	opt stack 0
  2795  0031FA                     ___altoft:
  2796                           	opt stack 22
  2797                           
  2798                           ;incstack = 0
  2799  0031FA  0E00               	movlw	0
  2800  0031FC  0100               	movlb	0	; () banked
  2801  0031FE  6F9F               	movwf	___altoft@sign& (0+255),b
  2802  003200  0E8E               	movlw	142
  2803  003202  0100               	movlb	0	; () banked
  2804  003204  6F9E               	movwf	___altoft@exp& (0+255),b
  2805                           
  2806                           ; BSR set to: 0
  2807  003206  0100               	movlb	0	; () banked
  2808  003208  AF99               	btfss	(___altoft@c+3)& (0+255),7,b
  2809  00320A  D015               	goto	l6478
  2810                           
  2811                           ; BSR set to: 0
  2812  00320C  0100               	movlb	0	; () banked
  2813  00320E  1F99               	comf	(___altoft@c+3)& (0+255),f,b
  2814  003210  1F98               	comf	(___altoft@c+2)& (0+255),f,b
  2815  003212  1F97               	comf	(___altoft@c+1)& (0+255),f,b
  2816  003214  6D96               	negf	___altoft@c& (0+255),b
  2817  003216  0E00               	movlw	0
  2818  003218  2397               	addwfc	(___altoft@c+1)& (0+255),f,b
  2819  00321A  2398               	addwfc	(___altoft@c+2)& (0+255),f,b
  2820  00321C  2399               	addwfc	(___altoft@c+3)& (0+255),f,b
  2821                           
  2822                           ; BSR set to: 0
  2823  00321E  0E01               	movlw	1
  2824  003220  0100               	movlb	0	; () banked
  2825  003222  6F9F               	movwf	___altoft@sign& (0+255),b
  2826                           
  2827                           ; BSR set to: 0
  2828  003224  D008               	goto	l6478
  2829  003226                     l6476:
  2830                           
  2831                           ; BSR set to: 0
  2832  003226  0100               	movlb	0	; () banked
  2833  003228  90D8               	bcf	status,0,c
  2834  00322A  3399               	rrcf	(___altoft@c+3)& (0+255),f,b
  2835  00322C  3398               	rrcf	(___altoft@c+2)& (0+255),f,b
  2836  00322E  3397               	rrcf	(___altoft@c+1)& (0+255),f,b
  2837  003230  3396               	rrcf	___altoft@c& (0+255),f,b
  2838  003232  0100               	movlb	0	; () banked
  2839  003234  2B9E               	incf	___altoft@exp& (0+255),f,b
  2840  003236                     l6478:
  2841                           
  2842                           ; BSR set to: 0
  2843  003236  0E00               	movlw	0
  2844  003238  0100               	movlb	0	; () banked
  2845  00323A  1596               	andwf	___altoft@c& (0+255),w,b
  2846  00323C  0100               	movlb	0	; () banked
  2847  00323E  6F9A               	movwf	??___altoft& (0+255),b
  2848  003240  0E00               	movlw	0
  2849  003242  0100               	movlb	0	; () banked
  2850  003244  1597               	andwf	(___altoft@c+1)& (0+255),w,b
  2851  003246  0100               	movlb	0	; () banked
  2852  003248  6F9B               	movwf	(??___altoft+1)& (0+255),b
  2853  00324A  0E00               	movlw	0
  2854  00324C  0100               	movlb	0	; () banked
  2855  00324E  1598               	andwf	(___altoft@c+2)& (0+255),w,b
  2856  003250  0100               	movlb	0	; () banked
  2857  003252  6F9C               	movwf	(??___altoft+2)& (0+255),b
  2858  003254  0EFF               	movlw	255
  2859  003256  0100               	movlb	0	; () banked
  2860  003258  1599               	andwf	(___altoft@c+3)& (0+255),w,b
  2861  00325A  0100               	movlb	0	; () banked
  2862  00325C  6F9D               	movwf	(??___altoft+3)& (0+255),b
  2863  00325E  0100               	movlb	0	; () banked
  2864  003260  519A               	movf	??___altoft& (0+255),w,b
  2865  003262  0100               	movlb	0	; () banked
  2866  003264  119B               	iorwf	(??___altoft+1)& (0+255),w,b
  2867  003266  0100               	movlb	0	; () banked
  2868  003268  119C               	iorwf	(??___altoft+2)& (0+255),w,b
  2869  00326A  0100               	movlb	0	; () banked
  2870  00326C  119D               	iorwf	(??___altoft+3)& (0+255),w,b
  2871  00326E  A4D8               	btfss	status,2,c
  2872  003270  D7DA               	goto	l6476
  2873                           
  2874                           ; BSR set to: 0
  2875                           
  2876                           ; BSR set to: 0
  2877  003272  C096  F08E         	movff	___altoft@c,___ftpack@arg
  2878  003276  C097  F08F         	movff	___altoft@c+1,___ftpack@arg+1
  2879  00327A  C098  F090         	movff	___altoft@c+2,___ftpack@arg+2
  2880  00327E  C09E  F091         	movff	___altoft@exp,___ftpack@exp
  2881  003282  C09F  F092         	movff	___altoft@sign,___ftpack@sign
  2882  003286  EC75  F015         	call	___ftpack	;wreg free
  2883  00328A  C08E  F096         	movff	?___ftpack,?___altoft
  2884  00328E  C08F  F097         	movff	?___ftpack+1,?___altoft+1
  2885  003292  C090  F098         	movff	?___ftpack+2,?___altoft+2
  2886  003296  0012               	return	
  2887  003298                     __end_of___altoft:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           postinc0	equ	0xFEE
  2894                           postdec1	equ	0xFE5
  2895                           fsr1l	equ	0xFE1
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function ___ftpack *****************
  2899 ;; Defined at:
  2900 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  arg             3   14[BANK0 ] unsigned um
  2903 ;;  exp             1   17[BANK0 ] unsigned char 
  2904 ;;  sign            1   18[BANK0 ] unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  3   14[BANK0 ] float 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2916 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;Total ram usage:        8 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    6
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		___altoft
  2927 ;;		___ftadd
  2928 ;;		___ftdiv
  2929 ;;		___ftmul
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text8
  2934  002AEA                     __ptext8:
  2935                           	opt stack 0
  2936  002AEA                     ___ftpack:
  2937                           	opt stack 22
  2938                           
  2939                           ;incstack = 0
  2940  002AEA  0100               	movlb	0	; () banked
  2941  002AEC  5191               	movf	___ftpack@exp& (0+255),w,b
  2942  002AEE  0100               	movlb	0	; () banked
  2943  002AF0  B4D8               	btfsc	status,2,c
  2944  002AF2  D008               	goto	l6054
  2945                           
  2946                           ; BSR set to: 0
  2947  002AF4  0100               	movlb	0	; () banked
  2948  002AF6  518E               	movf	___ftpack@arg& (0+255),w,b
  2949  002AF8  0100               	movlb	0	; () banked
  2950  002AFA  118F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2951  002AFC  0100               	movlb	0	; () banked
  2952  002AFE  1190               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2953  002B00  A4D8               	btfss	status,2,c
  2954  002B02  D011               	goto	l6060
  2955  002B04                     l6054:
  2956                           
  2957                           ; BSR set to: 0
  2958  002B04  0E00               	movlw	0
  2959  002B06  0100               	movlb	0	; () banked
  2960  002B08  6F8E               	movwf	?___ftpack& (0+255),b
  2961  002B0A  0E00               	movlw	0
  2962  002B0C  0100               	movlb	0	; () banked
  2963  002B0E  6F8F               	movwf	(?___ftpack+1)& (0+255),b
  2964  002B10  0E00               	movlw	0
  2965  002B12  0100               	movlb	0	; () banked
  2966  002B14  6F90               	movwf	(?___ftpack+2)& (0+255),b
  2967                           
  2968                           ; BSR set to: 0
  2969  002B16  0012               	return	
  2970  002B18                     l6058:
  2971                           
  2972                           ; BSR set to: 0
  2973  002B18  0100               	movlb	0	; () banked
  2974  002B1A  2B91               	incf	___ftpack@exp& (0+255),f,b
  2975  002B1C  0100               	movlb	0	; () banked
  2976  002B1E  90D8               	bcf	status,0,c
  2977  002B20  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2978  002B22  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2979  002B24  338E               	rrcf	___ftpack@arg& (0+255),f,b
  2980  002B26                     l6060:
  2981                           
  2982                           ; BSR set to: 0
  2983  002B26  0E00               	movlw	0
  2984  002B28  0100               	movlb	0	; () banked
  2985  002B2A  158E               	andwf	___ftpack@arg& (0+255),w,b
  2986  002B2C  0100               	movlb	0	; () banked
  2987  002B2E  6F93               	movwf	??___ftpack& (0+255),b
  2988  002B30  0E00               	movlw	0
  2989  002B32  0100               	movlb	0	; () banked
  2990  002B34  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2991  002B36  0100               	movlb	0	; () banked
  2992  002B38  6F94               	movwf	(??___ftpack+1)& (0+255),b
  2993  002B3A  0EFE               	movlw	254
  2994  002B3C  0100               	movlb	0	; () banked
  2995  002B3E  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2996  002B40  0100               	movlb	0	; () banked
  2997  002B42  6F95               	movwf	(??___ftpack+2)& (0+255),b
  2998  002B44  0100               	movlb	0	; () banked
  2999  002B46  5193               	movf	??___ftpack& (0+255),w,b
  3000  002B48  0100               	movlb	0	; () banked
  3001  002B4A  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  3002  002B4C  0100               	movlb	0	; () banked
  3003  002B4E  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  3004  002B50  B4D8               	btfsc	status,2,c
  3005  002B52  D011               	goto	l6066
  3006  002B54  D7E1               	goto	l6058
  3007  002B56                     l6062:
  3008                           
  3009                           ; BSR set to: 0
  3010  002B56  0100               	movlb	0	; () banked
  3011  002B58  2B91               	incf	___ftpack@exp& (0+255),f,b
  3012                           
  3013                           ; BSR set to: 0
  3014  002B5A  0E01               	movlw	1
  3015  002B5C  0100               	movlb	0	; () banked
  3016  002B5E  278E               	addwf	___ftpack@arg& (0+255),f,b
  3017  002B60  0E00               	movlw	0
  3018  002B62  0100               	movlb	0	; () banked
  3019  002B64  238F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  3020  002B66  0E00               	movlw	0
  3021  002B68  0100               	movlb	0	; () banked
  3022  002B6A  2390               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  3023  002B6C  0100               	movlb	0	; () banked
  3024  002B6E  90D8               	bcf	status,0,c
  3025  002B70  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3026  002B72  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3027  002B74  338E               	rrcf	___ftpack@arg& (0+255),f,b
  3028  002B76                     l6066:
  3029                           
  3030                           ; BSR set to: 0
  3031  002B76  0E00               	movlw	0
  3032  002B78  0100               	movlb	0	; () banked
  3033  002B7A  158E               	andwf	___ftpack@arg& (0+255),w,b
  3034  002B7C  0100               	movlb	0	; () banked
  3035  002B7E  6F93               	movwf	??___ftpack& (0+255),b
  3036  002B80  0E00               	movlw	0
  3037  002B82  0100               	movlb	0	; () banked
  3038  002B84  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3039  002B86  0100               	movlb	0	; () banked
  3040  002B88  6F94               	movwf	(??___ftpack+1)& (0+255),b
  3041  002B8A  0EFF               	movlw	255
  3042  002B8C  0100               	movlb	0	; () banked
  3043  002B8E  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3044  002B90  0100               	movlb	0	; () banked
  3045  002B92  6F95               	movwf	(??___ftpack+2)& (0+255),b
  3046  002B94  0100               	movlb	0	; () banked
  3047  002B96  5193               	movf	??___ftpack& (0+255),w,b
  3048  002B98  0100               	movlb	0	; () banked
  3049  002B9A  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  3050  002B9C  0100               	movlb	0	; () banked
  3051  002B9E  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  3052  002BA0  B4D8               	btfsc	status,2,c
  3053  002BA2  D008               	goto	l6070
  3054  002BA4  D7D8               	goto	l6062
  3055  002BA6                     l6068:
  3056                           
  3057                           ; BSR set to: 0
  3058  002BA6  0100               	movlb	0	; () banked
  3059  002BA8  0791               	decf	___ftpack@exp& (0+255),f,b
  3060  002BAA  0100               	movlb	0	; () banked
  3061  002BAC  90D8               	bcf	status,0,c
  3062  002BAE  378E               	rlcf	___ftpack@arg& (0+255),f,b
  3063  002BB0  378F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3064  002BB2  3790               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3065  002BB4                     l6070:
  3066                           
  3067                           ; BSR set to: 0
  3068  002BB4  0100               	movlb	0	; () banked
  3069  002BB6  BF8F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  3070  002BB8  D004               	goto	l694
  3071                           
  3072                           ; BSR set to: 0
  3073  002BBA  0E02               	movlw	2
  3074  002BBC  0100               	movlb	0	; () banked
  3075  002BBE  6191               	cpfslt	___ftpack@exp& (0+255),b
  3076  002BC0  D7F2               	goto	l6068
  3077  002BC2                     l694:
  3078                           
  3079                           ; BSR set to: 0
  3080  002BC2  0100               	movlb	0	; () banked
  3081  002BC4  B191               	btfsc	___ftpack@exp& (0+255),0,b
  3082  002BC6  D002               	goto	l6076
  3083                           
  3084                           ; BSR set to: 0
  3085  002BC8  0100               	movlb	0	; () banked
  3086  002BCA  9F8F               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3087  002BCC                     l6076:
  3088                           
  3089                           ; BSR set to: 0
  3090  002BCC  0100               	movlb	0	; () banked
  3091  002BCE  90D8               	bcf	status,0,c
  3092  002BD0  3391               	rrcf	___ftpack@exp& (0+255),f,b
  3093  002BD2  0100               	movlb	0	; () banked
  3094  002BD4  5191               	movf	___ftpack@exp& (0+255),w,b
  3095  002BD6  0100               	movlb	0	; () banked
  3096  002BD8  1390               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3097                           
  3098                           ; BSR set to: 0
  3099  002BDA  0100               	movlb	0	; () banked
  3100  002BDC  5192               	movf	___ftpack@sign& (0+255),w,b
  3101  002BDE  0100               	movlb	0	; () banked
  3102  002BE0  B4D8               	btfsc	status,2,c
  3103  002BE2  D002               	goto	l6082
  3104                           
  3105                           ; BSR set to: 0
  3106  002BE4  0100               	movlb	0	; () banked
  3107  002BE6  8F90               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3108  002BE8                     l6082:
  3109                           
  3110                           ; BSR set to: 0
  3111  002BE8  C08E  F08E         	movff	___ftpack@arg,?___ftpack
  3112  002BEC  C08F  F08F         	movff	___ftpack@arg+1,?___ftpack+1
  3113  002BF0  C090  F090         	movff	___ftpack@arg+2,?___ftpack+2
  3114  002BF4  0012               	return	
  3115  002BF6                     __end_of___ftpack:
  3116                           	opt stack 0
  3117                           tblptru	equ	0xFF8
  3118                           tblptrh	equ	0xFF7
  3119                           tblptrl	equ	0xFF6
  3120                           tablat	equ	0xFF5
  3121                           postinc0	equ	0xFEE
  3122                           postdec1	equ	0xFE5
  3123                           fsr1l	equ	0xFE1
  3124                           status	equ	0xFD8
  3125                           
  3126 ;; *************** function _initT0 *****************
  3127 ;; Defined at:
  3128 ;;		line 53 in file "timer.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		None
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;Total ram usage:        0 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    6
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;;		_testFrequency
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text9
  3158  00390A                     __ptext9:
  3159                           	opt stack 0
  3160  00390A                     _initT0:
  3161                           	opt stack 24
  3162                           
  3163                           ;timer.c: 55: TMR0IE = 1;
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;incstack = 0
  3167  00390A  8AF2               	bsf	intcon,5,c	;volatile
  3168                           
  3169                           ;timer.c: 56: PEIE = 1;
  3170  00390C  8CF2               	bsf	intcon,6,c	;volatile
  3171                           
  3172                           ;timer.c: 57: (INTCONbits.GIE = 1);
  3173  00390E  8EF2               	bsf	intcon,7,c	;volatile
  3174  003910  0012               	return		;funcret
  3175  003912                     __end_of_initT0:
  3176                           	opt stack 0
  3177                           tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           intcon	equ	0xFF2
  3182                           postinc0	equ	0xFEE
  3183                           postdec1	equ	0xFE5
  3184                           fsr1l	equ	0xFE1
  3185                           status	equ	0xFD8
  3186                           
  3187 ;; *************** function _initLCD *****************
  3188 ;; Defined at:
  3189 ;;		line 15 in file "lcd.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;Total ram usage:        1 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    8
  3210 ;; This function calls:
  3211 ;;		_lcdInst
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text10
  3218  003758                     __ptext10:
  3219                           	opt stack 0
  3220  003758                     _initLCD:
  3221                           	opt stack 22
  3222                           
  3223                           ;lcd.c: 17: _delay((unsigned long)((15)*(32000000/4000.0)));
  3224                           
  3225                           ;incstack = 0
  3226  003758  0E9C               	movlw	156
  3227  00375A  0100               	movlb	0	; () banked
  3228  00375C  6F93               	movwf	??_initLCD& (0+255),b
  3229  00375E  0ED7               	movlw	215
  3230  003760                     u9087:
  3231  003760  2EE8               	decfsz	wreg,f,c
  3232  003762  D7FE               	bra	u9087
  3233  003764  2F93               	decfsz	??_initLCD& (0+255),f,b
  3234  003766  D7FC               	bra	u9087
  3235                           
  3236                           ;lcd.c: 18: lcdInst(0b00110011);
  3237  003768  0E33               	movlw	51
  3238  00376A  EC23  F01C         	call	_lcdInst
  3239                           
  3240                           ;lcd.c: 19: lcdInst(0b00110010);
  3241  00376E  0E32               	movlw	50
  3242  003770  EC23  F01C         	call	_lcdInst
  3243                           
  3244                           ;lcd.c: 20: lcdInst(0b00101000);
  3245  003774  0E28               	movlw	40
  3246  003776  EC23  F01C         	call	_lcdInst
  3247                           
  3248                           ;lcd.c: 21: lcdInst(0b00001111);
  3249  00377A  0E0F               	movlw	15
  3250  00377C  EC23  F01C         	call	_lcdInst
  3251                           
  3252                           ;lcd.c: 22: lcdInst(0b00000110);
  3253  003780  0E06               	movlw	6
  3254  003782  EC23  F01C         	call	_lcdInst
  3255                           
  3256                           ;lcd.c: 23: lcdInst(0b00000001);
  3257  003786  0E01               	movlw	1
  3258  003788  EC23  F01C         	call	_lcdInst
  3259                           
  3260                           ;lcd.c: 24: _delay((unsigned long)((15)*(32000000/4000.0)));
  3261  00378C  0E9C               	movlw	156
  3262  00378E  0100               	movlb	0	; () banked
  3263  003790  6F93               	movwf	??_initLCD& (0+255),b
  3264  003792  0ED7               	movlw	215
  3265  003794                     u9097:
  3266  003794  2EE8               	decfsz	wreg,f,c
  3267  003796  D7FE               	bra	u9097
  3268  003798  2F93               	decfsz	??_initLCD& (0+255),f,b
  3269  00379A  D7FC               	bra	u9097
  3270  00379C  0012               	return		;funcret
  3271  00379E                     __end_of_initLCD:
  3272                           	opt stack 0
  3273                           tblptru	equ	0xFF8
  3274                           tblptrh	equ	0xFF7
  3275                           tblptrl	equ	0xFF6
  3276                           tablat	equ	0xFF5
  3277                           intcon	equ	0xFF2
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           postdec1	equ	0xFE5
  3281                           fsr1l	equ	0xFE1
  3282                           status	equ	0xFD8
  3283                           
  3284 ;; *************** function _lcdInst *****************
  3285 ;; Defined at:
  3286 ;;		line 27 in file "lcd.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  data            1    wreg     unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  data            1   18[BANK0 ] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;Total ram usage:        2 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    7
  3307 ;; This function calls:
  3308 ;;		_lcdNibble
  3309 ;; This function is called by:
  3310 ;;		_initLCD
  3311 ;;		_lcdHome
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text11
  3316  003846                     __ptext11:
  3317                           	opt stack 0
  3318  003846                     _lcdInst:
  3319                           	opt stack 22
  3320                           
  3321                           ;incstack = 0
  3322                           ;lcdInst@data stored from wreg
  3323  003846  0100               	movlb	0	; () banked
  3324  003848  6F92               	movwf	lcdInst@data& (0+255),b
  3325                           
  3326                           ;lcd.c: 28: LATDbits.LATD2 = 0;
  3327  00384A  948C               	bcf	3980,2,c	;volatile
  3328                           
  3329                           ;lcd.c: 29: _delay((unsigned long)((140)*(32000000/4000000.0)));
  3330  00384C  0EE0               	movlw	224
  3331  00384E                     u9107:
  3332  00384E  D000               	nop2	
  3333  003850  2EE8               	decfsz	wreg,f,c
  3334  003852  D7FD               	bra	u9107
  3335                           
  3336                           ;lcd.c: 30: lcdNibble(data);
  3337  003854  0100               	movlb	0	; () banked
  3338  003856  5192               	movf	lcdInst@data& (0+255),w,b
  3339  003858  EC4C  F019         	call	_lcdNibble
  3340                           
  3341                           ;lcd.c: 31: _delay((unsigned long)((1000)*(32000000/4000000.0)));
  3342  00385C  0E0B               	movlw	11
  3343  00385E  0100               	movlb	0	; () banked
  3344  003860  6F91               	movwf	??_lcdInst& (0+255),b
  3345  003862  0E62               	movlw	98
  3346  003864                     u9117:
  3347  003864  2EE8               	decfsz	wreg,f,c
  3348  003866  D7FE               	bra	u9117
  3349  003868  2F91               	decfsz	??_lcdInst& (0+255),f,b
  3350  00386A  D7FC               	bra	u9117
  3351  00386C  F000               	nop	
  3352  00386E  0012               	return		;funcret
  3353  003870                     __end_of_lcdInst:
  3354                           	opt stack 0
  3355                           tblptru	equ	0xFF8
  3356                           tblptrh	equ	0xFF7
  3357                           tblptrl	equ	0xFF6
  3358                           tablat	equ	0xFF5
  3359                           intcon	equ	0xFF2
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           postdec1	equ	0xFE5
  3363                           fsr1l	equ	0xFE1
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function _lcdNibble *****************
  3367 ;; Defined at:
  3368 ;;		line 46 in file "lcd.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  data            1    wreg     unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  data            1   16[BANK0 ] unsigned char 
  3373 ;;  temp            1   15[BANK0 ] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;Total ram usage:        3 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    6
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_lcdInst
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text12
  3398  003298                     __ptext12:
  3399                           	opt stack 0
  3400  003298                     _lcdNibble:
  3401                           	opt stack 22
  3402                           
  3403                           ;incstack = 0
  3404                           ;lcdNibble@data stored from wreg
  3405  003298  0100               	movlb	0	; () banked
  3406  00329A  6F90               	movwf	lcdNibble@data& (0+255),b
  3407                           
  3408                           ;lcd.c: 48: char temp = data & 0xF0;
  3409  00329C  0100               	movlb	0	; () banked
  3410  00329E  5190               	movf	lcdNibble@data& (0+255),w,b
  3411  0032A0  0BF0               	andlw	240
  3412  0032A2  0100               	movlb	0	; () banked
  3413  0032A4  6F8F               	movwf	lcdNibble@temp& (0+255),b
  3414                           
  3415                           ;lcd.c: 49: LATD = LATD & 0x0F;
  3416  0032A6  508C               	movf	3980,w,c	;volatile
  3417  0032A8  0B0F               	andlw	15
  3418  0032AA  6E8C               	movwf	3980,c	;volatile
  3419                           
  3420                           ;lcd.c: 50: LATD = temp | LATD;
  3421  0032AC  0100               	movlb	0	; () banked
  3422  0032AE  518F               	movf	lcdNibble@temp& (0+255),w,b
  3423  0032B0  108C               	iorwf	3980,w,c	;volatile
  3424  0032B2  6E8C               	movwf	3980,c	;volatile
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  3428  0032B4  968C               	bcf	3980,3,c	;volatile
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;lcd.c: 53: _delay((unsigned long)((600)*(32000000/4000000.0)));
  3432  0032B6  0E07               	movlw	7
  3433  0032B8  0100               	movlb	0	; () banked
  3434  0032BA  6F8E               	movwf	??_lcdNibble& (0+255),b
  3435  0032BC  0E3A               	movlw	58
  3436  0032BE                     u9127:
  3437  0032BE  2EE8               	decfsz	wreg,f,c
  3438  0032C0  D7FE               	bra	u9127
  3439  0032C2  2F8E               	decfsz	??_lcdNibble& (0+255),f,b
  3440  0032C4  D7FC               	bra	u9127
  3441  0032C6  F000               	nop	
  3442                           
  3443                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  3444  0032C8  868C               	bsf	3980,3,c	;volatile
  3445                           
  3446                           ;lcd.c: 55: _delay((unsigned long)((600)*(32000000/4000000.0)));
  3447  0032CA  0E07               	movlw	7
  3448  0032CC  0100               	movlb	0	; () banked
  3449  0032CE  6F8E               	movwf	??_lcdNibble& (0+255),b
  3450  0032D0  0E3A               	movlw	58
  3451  0032D2                     u9137:
  3452  0032D2  2EE8               	decfsz	wreg,f,c
  3453  0032D4  D7FE               	bra	u9137
  3454  0032D6  2F8E               	decfsz	??_lcdNibble& (0+255),f,b
  3455  0032D8  D7FC               	bra	u9137
  3456  0032DA  F000               	nop	
  3457                           
  3458                           ;lcd.c: 58: data = data << 4;
  3459  0032DC  0100               	movlb	0	; () banked
  3460  0032DE  3990               	swapf	lcdNibble@data& (0+255),w,b
  3461  0032E0  0BF0               	andlw	240
  3462  0032E2  0100               	movlb	0	; () banked
  3463  0032E4  6F90               	movwf	lcdNibble@data& (0+255),b
  3464                           
  3465                           ;lcd.c: 60: temp = data & 0xF0;
  3466  0032E6  0100               	movlb	0	; () banked
  3467  0032E8  5190               	movf	lcdNibble@data& (0+255),w,b
  3468  0032EA  0BF0               	andlw	240
  3469  0032EC  0100               	movlb	0	; () banked
  3470  0032EE  6F8F               	movwf	lcdNibble@temp& (0+255),b
  3471                           
  3472                           ;lcd.c: 61: LATD = LATD & 0x0F;
  3473  0032F0  508C               	movf	3980,w,c	;volatile
  3474  0032F2  0B0F               	andlw	15
  3475  0032F4  6E8C               	movwf	3980,c	;volatile
  3476                           
  3477                           ;lcd.c: 62: LATD = temp | LATD;
  3478  0032F6  0100               	movlb	0	; () banked
  3479  0032F8  518F               	movf	lcdNibble@temp& (0+255),w,b
  3480  0032FA  108C               	iorwf	3980,w,c	;volatile
  3481  0032FC  6E8C               	movwf	3980,c	;volatile
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;lcd.c: 64: LATDbits.LATD3 = 0;
  3485  0032FE  968C               	bcf	3980,3,c	;volatile
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;lcd.c: 65: _delay((unsigned long)((600)*(32000000/4000000.0)));
  3489  003300  0E07               	movlw	7
  3490  003302  0100               	movlb	0	; () banked
  3491  003304  6F8E               	movwf	??_lcdNibble& (0+255),b
  3492  003306  0E3A               	movlw	58
  3493  003308                     u9147:
  3494  003308  2EE8               	decfsz	wreg,f,c
  3495  00330A  D7FE               	bra	u9147
  3496  00330C  2F8E               	decfsz	??_lcdNibble& (0+255),f,b
  3497  00330E  D7FC               	bra	u9147
  3498  003310  F000               	nop	
  3499                           
  3500                           ;lcd.c: 66: LATDbits.LATD3 = 1;
  3501  003312  868C               	bsf	3980,3,c	;volatile
  3502                           
  3503                           ;lcd.c: 67: _delay((unsigned long)((600)*(32000000/4000000.0)));
  3504  003314  0E07               	movlw	7
  3505  003316  0100               	movlb	0	; () banked
  3506  003318  6F8E               	movwf	??_lcdNibble& (0+255),b
  3507  00331A  0E3A               	movlw	58
  3508  00331C                     u9157:
  3509  00331C  2EE8               	decfsz	wreg,f,c
  3510  00331E  D7FE               	bra	u9157
  3511  003320  2F8E               	decfsz	??_lcdNibble& (0+255),f,b
  3512  003322  D7FC               	bra	u9157
  3513  003324  F000               	nop	
  3514  003326  0012               	return		;funcret
  3515  003328                     __end_of_lcdNibble:
  3516                           	opt stack 0
  3517                           tblptru	equ	0xFF8
  3518                           tblptrh	equ	0xFF7
  3519                           tblptrl	equ	0xFF6
  3520                           tablat	equ	0xFF5
  3521                           intcon	equ	0xFF2
  3522                           postinc0	equ	0xFEE
  3523                           wreg	equ	0xFE8
  3524                           postdec1	equ	0xFE5
  3525                           fsr1l	equ	0xFE1
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _digitalWrite *****************
  3529 ;; Defined at:
  3530 ;;		line 53 in file "iopin.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  port            2   14[BANK0 ] int 
  3533 ;;  pin             2   16[BANK0 ] int 
  3534 ;;  val             2   18[BANK0 ] int 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        9 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    6
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_main
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text13
  3561  002FC0                     __ptext13:
  3562                           	opt stack 0
  3563  002FC0                     _digitalWrite:
  3564                           	opt stack 24
  3565                           
  3566                           ;iopin.c: 54: pin = 1 << pin;
  3567                           
  3568                           ;incstack = 0
  3569  002FC0  C090  F094         	movff	digitalWrite@pin,??_digitalWrite
  3570  002FC4  0E01               	movlw	1
  3571  002FC6  0100               	movlb	0	; () banked
  3572  002FC8  6F95               	movwf	(??_digitalWrite+1)& (0+255),b
  3573  002FCA  0E00               	movlw	0
  3574  002FCC  0100               	movlb	0	; () banked
  3575  002FCE  6F96               	movwf	(??_digitalWrite+2)& (0+255),b
  3576  002FD0  0100               	movlb	0	; () banked
  3577  002FD2  2B94               	incf	??_digitalWrite& (0+255),f,b
  3578  002FD4  D004               	goto	u4084
  3579  002FD6                     u4085:
  3580  002FD6  90D8               	bcf	status,0,c
  3581  002FD8  0100               	movlb	0	; () banked
  3582  002FDA  3795               	rlcf	(??_digitalWrite+1)& (0+255),f,b
  3583  002FDC  3796               	rlcf	(??_digitalWrite+2)& (0+255),f,b
  3584  002FDE                     u4084:
  3585  002FDE  0100               	movlb	0	; () banked
  3586  002FE0  2F94               	decfsz	??_digitalWrite& (0+255),f,b
  3587  002FE2  D7F9               	goto	u4085
  3588  002FE4  C095  F090         	movff	??_digitalWrite+1,digitalWrite@pin
  3589  002FE8  C096  F091         	movff	??_digitalWrite+2,digitalWrite@pin+1
  3590                           
  3591                           ;iopin.c: 55: if(val == 0){
  3592  002FEC  0100               	movlb	0	; () banked
  3593  002FEE  5192               	movf	digitalWrite@val& (0+255),w,b
  3594  002FF0  0100               	movlb	0	; () banked
  3595  002FF2  1193               	iorwf	(digitalWrite@val+1)& (0+255),w,b
  3596  002FF4  A4D8               	btfss	status,2,c
  3597  002FF6  D03C               	goto	l3896
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;iopin.c: 56: pin ^= 0xff;
  3601  002FF8  0EFF               	movlw	255
  3602  002FFA  0100               	movlb	0	; () banked
  3603  002FFC  1B90               	xorwf	digitalWrite@pin& (0+255),f,b
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;iopin.c: 57: }
  3607                           ;iopin.c: 59: switch(port){
  3608  002FFE  D038               	goto	l3896
  3609  003000                     l3872:
  3610                           
  3611                           ; BSR set to: 0
  3612  003000  0100               	movlb	0	; () banked
  3613  003002  0592               	decf	digitalWrite@val& (0+255),w,b
  3614  003004  0100               	movlb	0	; () banked
  3615  003006  1193               	iorwf	(digitalWrite@val+1)& (0+255),w,b
  3616  003008  A4D8               	btfss	status,2,c
  3617  00300A  D004               	goto	l3876
  3618                           
  3619                           ; BSR set to: 0
  3620  00300C  0100               	movlb	0	; () banked
  3621  00300E  5190               	movf	digitalWrite@pin& (0+255),w,b
  3622  003010  1289               	iorwf	3977,f,c	;volatile
  3623  003012  0012               	return	
  3624  003014                     l3876:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;iopin.c: 61: else LATA &= pin;
  3628  003014  0100               	movlb	0	; () banked
  3629  003016  5190               	movf	digitalWrite@pin& (0+255),w,b
  3630  003018  1689               	andwf	3977,f,c	;volatile
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;iopin.c: 62: break;
  3634  00301A  0012               	return	
  3635  00301C                     l3878:
  3636                           
  3637                           ; BSR set to: 0
  3638  00301C  0100               	movlb	0	; () banked
  3639  00301E  0592               	decf	digitalWrite@val& (0+255),w,b
  3640  003020  0100               	movlb	0	; () banked
  3641  003022  1193               	iorwf	(digitalWrite@val+1)& (0+255),w,b
  3642  003024  A4D8               	btfss	status,2,c
  3643  003026  D004               	goto	l3882
  3644                           
  3645                           ; BSR set to: 0
  3646  003028  0100               	movlb	0	; () banked
  3647  00302A  5190               	movf	digitalWrite@pin& (0+255),w,b
  3648  00302C  128A               	iorwf	3978,f,c	;volatile
  3649  00302E  0012               	return	
  3650  003030                     l3882:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;iopin.c: 64: else LATB &= pin;
  3654  003030  0100               	movlb	0	; () banked
  3655  003032  5190               	movf	digitalWrite@pin& (0+255),w,b
  3656  003034  168A               	andwf	3978,f,c	;volatile
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;iopin.c: 65: break;
  3660  003036  0012               	return	
  3661  003038                     l3884:
  3662                           
  3663                           ; BSR set to: 0
  3664  003038  0100               	movlb	0	; () banked
  3665  00303A  0592               	decf	digitalWrite@val& (0+255),w,b
  3666  00303C  0100               	movlb	0	; () banked
  3667  00303E  1193               	iorwf	(digitalWrite@val+1)& (0+255),w,b
  3668  003040  A4D8               	btfss	status,2,c
  3669  003042  D004               	goto	l3888
  3670                           
  3671                           ; BSR set to: 0
  3672  003044  0100               	movlb	0	; () banked
  3673  003046  5190               	movf	digitalWrite@pin& (0+255),w,b
  3674  003048  128B               	iorwf	3979,f,c	;volatile
  3675  00304A  0012               	return	
  3676  00304C                     l3888:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;iopin.c: 67: else LATC &= pin;
  3680  00304C  0100               	movlb	0	; () banked
  3681  00304E  5190               	movf	digitalWrite@pin& (0+255),w,b
  3682  003050  168B               	andwf	3979,f,c	;volatile
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;iopin.c: 68: break;
  3686  003052  0012               	return	
  3687  003054                     l3890:
  3688                           
  3689                           ; BSR set to: 0
  3690  003054  0100               	movlb	0	; () banked
  3691  003056  0592               	decf	digitalWrite@val& (0+255),w,b
  3692  003058  0100               	movlb	0	; () banked
  3693  00305A  1193               	iorwf	(digitalWrite@val+1)& (0+255),w,b
  3694  00305C  A4D8               	btfss	status,2,c
  3695  00305E  D004               	goto	l3894
  3696                           
  3697                           ; BSR set to: 0
  3698  003060  0100               	movlb	0	; () banked
  3699  003062  5190               	movf	digitalWrite@pin& (0+255),w,b
  3700  003064  128C               	iorwf	3980,f,c	;volatile
  3701  003066  0012               	return	
  3702  003068                     l3894:
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;iopin.c: 70: else LATD &= pin;
  3706  003068  0100               	movlb	0	; () banked
  3707  00306A  5190               	movf	digitalWrite@pin& (0+255),w,b
  3708  00306C  168C               	andwf	3980,f,c	;volatile
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;iopin.c: 71: }
  3712  00306E  0012               	return	
  3713  003070                     l3896:
  3714                           
  3715                           ; BSR set to: 0
  3716  003070  C08E  F094         	movff	digitalWrite@port,??_digitalWrite
  3717  003074  C08F  F095         	movff	digitalWrite@port+1,??_digitalWrite+1
  3718                           
  3719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3720                           ; Switch size 1, requested type "space"
  3721                           ; Number of cases is 1, Range of values is 0 to 0
  3722                           ; switch strategies available:
  3723                           ; Name         Instructions Cycles
  3724                           ; simple_byte            4     3 (average)
  3725                           ;	Chosen strategy is simple_byte
  3726  003078  0100               	movlb	0	; () banked
  3727  00307A  5195               	movf	(??_digitalWrite+1)& (0+255),w,b
  3728  00307C  0A00               	xorlw	0	; case 0
  3729  00307E  A4D8               	btfss	status,2,c
  3730  003080  0012               	return	
  3731                           
  3732                           ; BSR set to: 0
  3733                           ; Switch size 1, requested type "space"
  3734                           ; Number of cases is 4, Range of values is 0 to 3
  3735                           ; switch strategies available:
  3736                           ; Name         Instructions Cycles
  3737                           ; simple_byte           13     7 (average)
  3738                           ;	Chosen strategy is simple_byte
  3739  003082  0100               	movlb	0	; () banked
  3740  003084  5194               	movf	??_digitalWrite& (0+255),w,b
  3741  003086  0A00               	xorlw	0	; case 0
  3742  003088  B4D8               	btfsc	status,2,c
  3743  00308A  D7BA               	goto	l3872
  3744  00308C  0A01               	xorlw	1	; case 1
  3745  00308E  B4D8               	btfsc	status,2,c
  3746  003090  D7C5               	goto	l3878
  3747  003092  0A03               	xorlw	3	; case 2
  3748  003094  B4D8               	btfsc	status,2,c
  3749  003096  D7D0               	goto	l3884
  3750  003098  0A01               	xorlw	1	; case 3
  3751  00309A  A4D8               	btfss	status,2,c
  3752  00309C  0012               	return	
  3753  00309E  D7DA               	goto	l3890
  3754  0030A0                     __end_of_digitalWrite:
  3755                           	opt stack 0
  3756                           tblptru	equ	0xFF8
  3757                           tblptrh	equ	0xFF7
  3758                           tblptrl	equ	0xFF6
  3759                           tablat	equ	0xFF5
  3760                           intcon	equ	0xFF2
  3761                           postinc0	equ	0xFEE
  3762                           wreg	equ	0xFE8
  3763                           postdec1	equ	0xFE5
  3764                           fsr1l	equ	0xFE1
  3765                           status	equ	0xFD8
  3766                           
  3767 ;; *************** function _service *****************
  3768 ;; Defined at:
  3769 ;;		line 75 in file "main.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  key             1  124[COMRAM] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:       18 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    5
  3790 ;; This function calls:
  3791 ;;		___ftsub
  3792 ;;		_lcdClear
  3793 ;;		_printf
  3794 ;;		i2___ftadd
  3795 ;;		i2___ftneg
  3796 ;;		i2_digitalWrite
  3797 ;;		i2_startT0
  3798 ;; This function is called by:
  3799 ;;		Interrupt level 2
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	intcode
  3804  000008                     __pintcode:
  3805                           	opt stack 0
  3806  000008                     _service:
  3807                           	opt stack 22
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;incstack = 0
  3811  000008  827E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3812  00000A  ED15  F010         	call	int_func,f	;refresh shadow registers
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           intcon	equ	0xFF2
  3818                           postinc0	equ	0xFEE
  3819                           wreg	equ	0xFE8
  3820                           postdec1	equ	0xFE5
  3821                           fsr1l	equ	0xFE1
  3822                           status	equ	0xFD8
  3823                           
  3824                           	psect	intcode_body
  3825  00202A                     __pintcode_body:
  3826                           	opt stack 22
  3827  00202A                     int_func:
  3828                           	opt stack 22
  3829  00202A  0006               	pop		; remove dummy address from shadow register refresh
  3830  00202C  CFFA F080          	movff	pclath,??_service
  3831  002030  CFFB F081          	movff	pclatu,??_service+1
  3832  002034  CFE9 F082          	movff	fsr0l,??_service+2
  3833  002038  CFEA F083          	movff	fsr0h,??_service+3
  3834  00203C  CFE1 F084          	movff	fsr1l,??_service+4
  3835  002040  CFE2 F085          	movff	fsr1h,??_service+5
  3836  002044  CFD9 F086          	movff	fsr2l,??_service+6
  3837  002048  CFDA F087          	movff	fsr2h,??_service+7
  3838  00204C  CFF3 F088          	movff	prodl,??_service+8
  3839  002050  CFF4 F089          	movff	prodh,??_service+9
  3840  002054  CFF6 F08A          	movff	tblptrl,??_service+10
  3841  002058  CFF7 F08B          	movff	tblptrh,??_service+11
  3842  00205C  CFF8 F08C          	movff	tblptru,??_service+12
  3843  002060  CFF5 F08D          	movff	tablat,??_service+13
  3844                           
  3845                           ;main.c: 77: if(TMR0IF){
  3846  002064  A4F2               	btfss	intcon,2,c	;volatile
  3847  002066  D05A               	goto	i2l7184
  3848                           
  3849                           ;main.c: 78: TMR0IF = 0;
  3850  002068  94F2               	bcf	intcon,2,c	;volatile
  3851                           
  3852                           ;main.c: 80: if(flag){
  3853  00206A  0100               	movlb	0	; () banked
  3854  00206C  51E6               	movf	_flag& (0+255),w,b
  3855  00206E  0100               	movlb	0	; () banked
  3856  002070  11E7               	iorwf	(_flag+1)& (0+255),w,b
  3857  002072  B4D8               	btfsc	status,2,c
  3858  002074  D038               	goto	i2l7178
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;main.c: 81: flag=0;
  3862  002076  0E00               	movlw	0
  3863  002078  0100               	movlb	0	; () banked
  3864  00207A  6FE7               	movwf	(_flag+1)& (0+255),b
  3865  00207C  0E00               	movlw	0
  3866  00207E  6FE6               	movwf	_flag& (0+255),b
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;main.c: 82: digitalWrite(3,0,0);
  3870  002080  0E00               	movlw	0
  3871  002082  6E02               	movwf	i2digitalWrite@port+1,c
  3872  002084  0E03               	movlw	3
  3873  002086  6E01               	movwf	i2digitalWrite@port,c
  3874  002088  0E00               	movlw	0
  3875  00208A  6E04               	movwf	i2digitalWrite@pin+1,c
  3876  00208C  0E00               	movlw	0
  3877  00208E  6E03               	movwf	i2digitalWrite@pin,c
  3878  002090  0E00               	movlw	0
  3879  002092  6E06               	movwf	i2digitalWrite@val+1,c
  3880  002094  0E00               	movlw	0
  3881  002096  6E05               	movwf	i2digitalWrite@val,c
  3882  002098  ECA7  F018         	call	i2_digitalWrite	;wreg free
  3883                           
  3884                           ;main.c: 83: startT0(20.0-angle);
  3885  00209C  C0E3  F031         	movff	_angle,i2___ftneg@f1
  3886  0020A0  C0E4  F032         	movff	_angle+1,i2___ftneg@f1+1
  3887  0020A4  C0E5  F033         	movff	_angle+2,i2___ftneg@f1+2
  3888  0020A8  EC4B  F01C         	call	i2___ftneg	;wreg free
  3889  0020AC  C031  F03B         	movff	?i2___ftneg,i2___ftadd@f1
  3890  0020B0  C032  F03C         	movff	?i2___ftneg+1,i2___ftadd@f1+1
  3891  0020B4  C033  F03D         	movff	?i2___ftneg+2,i2___ftadd@f1+2
  3892  0020B8  0E00               	movlw	0
  3893  0020BA  6E3E               	movwf	i2___ftadd@f2,c
  3894  0020BC  0EA0               	movlw	160
  3895  0020BE  6E3F               	movwf	i2___ftadd@f2+1,c
  3896  0020C0  0E41               	movlw	65
  3897  0020C2  6E40               	movwf	i2___ftadd@f2+2,c
  3898  0020C4  ECF1  F010         	call	i2___ftadd	;wreg free
  3899  0020C8  C03B  F07A         	movff	?i2___ftadd,_service$1204
  3900  0020CC  C03C  F07B         	movff	?i2___ftadd+1,_service$1204+1
  3901  0020D0  C03D  F07C         	movff	?i2___ftadd+2,_service$1204+2
  3902                           
  3903                           ;main.c: 83: startT0(20.0-angle);
  3904  0020D4  C07A  F056         	movff	_service$1204,i2startT0@milliseconds
  3905  0020D8  C07B  F057         	movff	_service$1204+1,i2startT0@milliseconds+1
  3906  0020DC  C07C  F058         	movff	_service$1204+2,i2startT0@milliseconds+2
  3907  0020E0  ECFB  F015         	call	i2_startT0	;wreg free
  3908                           
  3909                           ;main.c: 84: }
  3910  0020E4  D01B               	goto	i2l7184
  3911  0020E6                     i2l7178:
  3912                           
  3913                           ;main.c: 85: else{
  3914                           ;main.c: 86: flag=1;
  3915  0020E6  0E00               	movlw	0
  3916  0020E8  0100               	movlb	0	; () banked
  3917  0020EA  6FE7               	movwf	(_flag+1)& (0+255),b
  3918  0020EC  0E01               	movlw	1
  3919  0020EE  6FE6               	movwf	_flag& (0+255),b
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;main.c: 87: digitalWrite(3,0,1);
  3923  0020F0  0E00               	movlw	0
  3924  0020F2  6E02               	movwf	i2digitalWrite@port+1,c
  3925  0020F4  0E03               	movlw	3
  3926  0020F6  6E01               	movwf	i2digitalWrite@port,c
  3927  0020F8  0E00               	movlw	0
  3928  0020FA  6E04               	movwf	i2digitalWrite@pin+1,c
  3929  0020FC  0E00               	movlw	0
  3930  0020FE  6E03               	movwf	i2digitalWrite@pin,c
  3931  002100  0E00               	movlw	0
  3932  002102  6E06               	movwf	i2digitalWrite@val+1,c
  3933  002104  0E01               	movlw	1
  3934  002106  6E05               	movwf	i2digitalWrite@val,c
  3935  002108  ECA7  F018         	call	i2_digitalWrite	;wreg free
  3936                           
  3937                           ;main.c: 88: startT0(angle);
  3938  00210C  C0E3  F056         	movff	_angle,i2startT0@milliseconds
  3939  002110  C0E4  F057         	movff	_angle+1,i2startT0@milliseconds+1
  3940  002114  C0E5  F058         	movff	_angle+2,i2startT0@milliseconds+2
  3941  002118  ECFB  F015         	call	i2_startT0	;wreg free
  3942  00211C                     i2l7184:
  3943                           
  3944                           ;main.c: 89: }
  3945                           ;main.c: 90: }
  3946                           ;main.c: 92: if(INT1IF){
  3947  00211C  A0F0               	btfss	intcon3,0,c	;volatile
  3948  00211E  D043               	goto	i2l78
  3949                           
  3950                           ;main.c: 94: lcdClear();
  3951  002120  EC8D  F01C         	call	_lcdClear	;wreg free
  3952                           
  3953                           ;main.c: 95: char key = (PORTB & 0xF0) >> 4;
  3954  002124  3881               	swapf	3969,w,c	;volatile
  3955  002126  0B0F               	andlw	15
  3956  002128  0B0F               	andlw	15
  3957  00212A  6E7D               	movwf	service@key,c
  3958                           
  3959                           ;main.c: 96: if(key == 2) angle +=.1;
  3960  00212C  0E02               	movlw	2
  3961  00212E  187D               	xorwf	service@key,w,c
  3962  002130  A4D8               	btfss	status,2,c
  3963  002132  D014               	goto	i2l7194
  3964  002134  C0E3  F03B         	movff	_angle,i2___ftadd@f1
  3965  002138  C0E4  F03C         	movff	_angle+1,i2___ftadd@f1+1
  3966  00213C  C0E5  F03D         	movff	_angle+2,i2___ftadd@f1+2
  3967  002140  0ECD               	movlw	205
  3968  002142  6E3E               	movwf	i2___ftadd@f2,c
  3969  002144  0ECC               	movlw	204
  3970  002146  6E3F               	movwf	i2___ftadd@f2+1,c
  3971  002148  0E3D               	movlw	61
  3972  00214A  6E40               	movwf	i2___ftadd@f2+2,c
  3973  00214C  ECF1  F010         	call	i2___ftadd	;wreg free
  3974  002150  C03B  F0E3         	movff	?i2___ftadd,_angle
  3975  002154  C03C  F0E4         	movff	?i2___ftadd+1,_angle+1
  3976  002158  C03D  F0E5         	movff	?i2___ftadd+2,_angle+2
  3977  00215C                     i2l7194:
  3978                           
  3979                           ;main.c: 97: if(key == 3) angle -=.1;
  3980  00215C  0E03               	movlw	3
  3981  00215E  187D               	xorwf	service@key,w,c
  3982  002160  A4D8               	btfss	status,2,c
  3983  002162  D014               	goto	i2l7198
  3984  002164  C0E3  F047         	movff	_angle,___ftsub@f1
  3985  002168  C0E4  F048         	movff	_angle+1,___ftsub@f1+1
  3986  00216C  C0E5  F049         	movff	_angle+2,___ftsub@f1+2
  3987  002170  0ECD               	movlw	205
  3988  002172  6E4A               	movwf	___ftsub@f2,c
  3989  002174  0ECC               	movlw	204
  3990  002176  6E4B               	movwf	___ftsub@f2+1,c
  3991  002178  0E3D               	movlw	61
  3992  00217A  6E4C               	movwf	___ftsub@f2+2,c
  3993  00217C  ECCF  F01B         	call	___ftsub	;wreg free
  3994  002180  C047  F0E3         	movff	?___ftsub,_angle
  3995  002184  C048  F0E4         	movff	?___ftsub+1,_angle+1
  3996  002188  C049  F0E5         	movff	?___ftsub+2,_angle+2
  3997  00218C                     i2l7198:
  3998                           
  3999                           ;main.c: 98: printf("angle %f",angle);
  4000  00218C  0EC9               	movlw	low STR_3
  4001  00218E  6E56               	movwf	printf@f,c
  4002  002190  0E10               	movlw	high STR_3
  4003  002192  6E57               	movwf	printf@f+1,c
  4004  002194  C0E3  F058         	movff	_angle,?_printf+2
  4005  002198  C0E4  F059         	movff	_angle+1,?_printf+3
  4006  00219C  C0E5  F05A         	movff	_angle+2,?_printf+4
  4007  0021A0  EC70  F008         	call	_printf	;wreg free
  4008                           
  4009                           ;main.c: 99: INT1IF = 0;
  4010  0021A4  90F0               	bcf	intcon3,0,c	;volatile
  4011  0021A6                     i2l78:
  4012  0021A6  C08D  FFF5         	movff	??_service+13,tablat
  4013  0021AA  C08C  FFF8         	movff	??_service+12,tblptru
  4014  0021AE  C08B  FFF7         	movff	??_service+11,tblptrh
  4015  0021B2  C08A  FFF6         	movff	??_service+10,tblptrl
  4016  0021B6  C089  FFF4         	movff	??_service+9,prodh
  4017  0021BA  C088  FFF3         	movff	??_service+8,prodl
  4018  0021BE  C087  FFDA         	movff	??_service+7,fsr2h
  4019  0021C2  C086  FFD9         	movff	??_service+6,fsr2l
  4020  0021C6  C085  FFE2         	movff	??_service+5,fsr1h
  4021  0021CA  C084  FFE1         	movff	??_service+4,fsr1l
  4022  0021CE  C083  FFEA         	movff	??_service+3,fsr0h
  4023  0021D2  C082  FFE9         	movff	??_service+2,fsr0l
  4024  0021D6  C081  FFFB         	movff	??_service+1,pclatu
  4025  0021DA  C080  FFFA         	movff	??_service,pclath
  4026  0021DE  927E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4027  0021E0  0011               	retfie		f
  4028  0021E2                     __end_of_service:
  4029                           	opt stack 0
  4030                           pclatu	equ	0xFFB
  4031                           pclath	equ	0xFFA
  4032                           tblptru	equ	0xFF8
  4033                           tblptrh	equ	0xFF7
  4034                           tblptrl	equ	0xFF6
  4035                           tablat	equ	0xFF5
  4036                           prodh	equ	0xFF4
  4037                           prodl	equ	0xFF3
  4038                           intcon	equ	0xFF2
  4039                           intcon3	equ	0xFF0
  4040                           postinc0	equ	0xFEE
  4041                           fsr0h	equ	0xFEA
  4042                           fsr0l	equ	0xFE9
  4043                           wreg	equ	0xFE8
  4044                           postdec1	equ	0xFE5
  4045                           fsr1h	equ	0xFE2
  4046                           fsr1l	equ	0xFE1
  4047                           fsr2h	equ	0xFDA
  4048                           fsr2l	equ	0xFD9
  4049                           status	equ	0xFD8
  4050                           
  4051 ;; *************** function i2_startT0 *****************
  4052 ;; Defined at:
  4053 ;;		line 60 in file "timer.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  milliseconds    3   85[COMRAM] float 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  startT0         4   94[COMRAM] long 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4067 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;Total ram usage:       13 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    2
  4074 ;; This function calls:
  4075 ;;		i2___altoft
  4076 ;;		i2___ftadd
  4077 ;;		i2___ftdiv
  4078 ;;		i2___ftmul
  4079 ;;		i2___ftneg
  4080 ;;		i2___fttol
  4081 ;; This function is called by:
  4082 ;;		_service
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text15
  4087  002BF6                     __ptext15:
  4088                           	opt stack 0
  4089  002BF6                     i2_startT0:
  4090                           	opt stack 24
  4091                           
  4092                           ;timer.c: 65: long time = 0xFFFF - ( milliseconds / 1000.0 ) * extFreq / 4.0 / 256.0;
  4093                           
  4094                           ;incstack = 0
  4095  002BF6  C0DF  F009         	movff	_extFreq,i2___altoft@c
  4096  002BFA  C0E0  F00A         	movff	_extFreq+1,i2___altoft@c+1
  4097  002BFE  C0E1  F00B         	movff	_extFreq+2,i2___altoft@c+2
  4098  002C02  C0E2  F00C         	movff	_extFreq+3,i2___altoft@c+3
  4099  002C06  EC9C  F01A         	call	i2___altoft	;wreg free
  4100  002C0A  C009  F025         	movff	?i2___altoft,i2___ftmul@f2
  4101  002C0E  C00A  F026         	movff	?i2___altoft+1,i2___ftmul@f2+1
  4102  002C12  C00B  F027         	movff	?i2___altoft+2,i2___ftmul@f2+2
  4103  002C16  0E00               	movlw	0
  4104  002C18  6E16               	movwf	i2___ftdiv@f2,c
  4105  002C1A  0E7A               	movlw	122
  4106  002C1C  6E17               	movwf	i2___ftdiv@f2+1,c
  4107  002C1E  0E44               	movlw	68
  4108  002C20  6E18               	movwf	i2___ftdiv@f2+2,c
  4109  002C22  C056  F013         	movff	i2startT0@milliseconds,i2___ftdiv@f1
  4110  002C26  C057  F014         	movff	i2startT0@milliseconds+1,i2___ftdiv@f1+1
  4111  002C2A  C058  F015         	movff	i2startT0@milliseconds+2,i2___ftdiv@f1+2
  4112  002C2E  EC6D  F017         	call	i2___ftdiv	;wreg free
  4113  002C32  C013  F022         	movff	?i2___ftdiv,i2___ftmul@f1
  4114  002C36  C014  F023         	movff	?i2___ftdiv+1,i2___ftmul@f1+1
  4115  002C3A  C015  F024         	movff	?i2___ftdiv+2,i2___ftmul@f1+2
  4116  002C3E  ECF3  F016         	call	i2___ftmul	;wreg free
  4117  002C42  C022  F059         	movff	?i2___ftmul,i2_startT0$1209
  4118  002C46  C023  F05A         	movff	?i2___ftmul+1,i2_startT0$1209+1
  4119  002C4A  C024  F05B         	movff	?i2___ftmul+2,i2_startT0$1209+2
  4120                           
  4121                           ;timer.c: 65: long time = 0xFFFF - ( milliseconds / 1000.0 ) * extFreq / 4.0 / 256.0;
  4122  002C4E  0E00               	movlw	0
  4123  002C50  6E16               	movwf	i2___ftdiv@f2,c
  4124  002C52  0E80               	movlw	128
  4125  002C54  6E17               	movwf	i2___ftdiv@f2+1,c
  4126  002C56  0E40               	movlw	64
  4127  002C58  6E18               	movwf	i2___ftdiv@f2+2,c
  4128  002C5A  C059  F013         	movff	i2_startT0$1209,i2___ftdiv@f1
  4129  002C5E  C05A  F014         	movff	i2_startT0$1209+1,i2___ftdiv@f1+1
  4130  002C62  C05B  F015         	movff	i2_startT0$1209+2,i2___ftdiv@f1+2
  4131  002C66  EC6D  F017         	call	i2___ftdiv	;wreg free
  4132  002C6A  C013  F05C         	movff	?i2___ftdiv,i2_startT0$1210
  4133  002C6E  C014  F05D         	movff	?i2___ftdiv+1,i2_startT0$1210+1
  4134  002C72  C015  F05E         	movff	?i2___ftdiv+2,i2_startT0$1210+2
  4135                           
  4136                           ;timer.c: 65: long time = 0xFFFF - ( milliseconds / 1000.0 ) * extFreq / 4.0 / 256.0;
  4137  002C76  0EFF               	movlw	255
  4138  002C78  6E3E               	movwf	i2___ftadd@f2,c
  4139  002C7A  0E7F               	movlw	127
  4140  002C7C  6E3F               	movwf	i2___ftadd@f2+1,c
  4141  002C7E  0E47               	movlw	71
  4142  002C80  6E40               	movwf	i2___ftadd@f2+2,c
  4143  002C82  0E00               	movlw	0
  4144  002C84  6E16               	movwf	i2___ftdiv@f2,c
  4145  002C86  0E80               	movlw	128
  4146  002C88  6E17               	movwf	i2___ftdiv@f2+1,c
  4147  002C8A  0E43               	movlw	67
  4148  002C8C  6E18               	movwf	i2___ftdiv@f2+2,c
  4149  002C8E  C05C  F013         	movff	i2_startT0$1210,i2___ftdiv@f1
  4150  002C92  C05D  F014         	movff	i2_startT0$1210+1,i2___ftdiv@f1+1
  4151  002C96  C05E  F015         	movff	i2_startT0$1210+2,i2___ftdiv@f1+2
  4152  002C9A  EC6D  F017         	call	i2___ftdiv	;wreg free
  4153  002C9E  C013  F031         	movff	?i2___ftdiv,i2___ftneg@f1
  4154  002CA2  C014  F032         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
  4155  002CA6  C015  F033         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
  4156  002CAA  EC4B  F01C         	call	i2___ftneg	;wreg free
  4157  002CAE  C031  F03B         	movff	?i2___ftneg,i2___ftadd@f1
  4158  002CB2  C032  F03C         	movff	?i2___ftneg+1,i2___ftadd@f1+1
  4159  002CB6  C033  F03D         	movff	?i2___ftneg+2,i2___ftadd@f1+2
  4160  002CBA  ECF1  F010         	call	i2___ftadd	;wreg free
  4161  002CBE  C03B  F047         	movff	?i2___ftadd,i2___fttol@f1
  4162  002CC2  C03C  F048         	movff	?i2___ftadd+1,i2___fttol@f1+1
  4163  002CC6  C03D  F049         	movff	?i2___ftadd+2,i2___fttol@f1+2
  4164  002CCA  EC79  F016         	call	i2___fttol	;wreg free
  4165  002CCE  C047  F05F         	movff	?i2___fttol,i2startT0@time
  4166  002CD2  C048  F060         	movff	?i2___fttol+1,i2startT0@time+1
  4167  002CD6  C049  F061         	movff	?i2___fttol+2,i2startT0@time+2
  4168  002CDA  C04A  F062         	movff	?i2___fttol+3,i2startT0@time+3
  4169                           
  4170                           ;timer.c: 67: T0CON = 0;
  4171  002CDE  0E00               	movlw	0
  4172  002CE0  6ED5               	movwf	4053,c	;volatile
  4173                           
  4174                           ;timer.c: 70: T0CON |= 0b111;
  4175  002CE2  0E07               	movlw	7
  4176  002CE4  12D5               	iorwf	4053,f,c	;volatile
  4177                           
  4178                           ;timer.c: 71: TMR0H = time>>8;
  4179  002CE6  C060  FFD7         	movff	i2startT0@time+1,4055	;volatile
  4180                           
  4181                           ;timer.c: 72: TMR0L = time & 0xFF;
  4182  002CEA  C05F  FFD6         	movff	i2startT0@time,4054	;volatile
  4183                           
  4184                           ;timer.c: 73: T0CON |= 1<<7;
  4185  002CEE  8ED5               	bsf	4053,7,c	;volatile
  4186  002CF0  0012               	return		;funcret
  4187  002CF2                     __end_ofi2_startT0:
  4188                           	opt stack 0
  4189                           pclatu	equ	0xFFB
  4190                           pclath	equ	0xFFA
  4191                           tblptru	equ	0xFF8
  4192                           tblptrh	equ	0xFF7
  4193                           tblptrl	equ	0xFF6
  4194                           tablat	equ	0xFF5
  4195                           prodh	equ	0xFF4
  4196                           prodl	equ	0xFF3
  4197                           intcon	equ	0xFF2
  4198                           intcon3	equ	0xFF0
  4199                           postinc0	equ	0xFEE
  4200                           fsr0h	equ	0xFEA
  4201                           fsr0l	equ	0xFE9
  4202                           wreg	equ	0xFE8
  4203                           postdec1	equ	0xFE5
  4204                           fsr1h	equ	0xFE2
  4205                           fsr1l	equ	0xFE1
  4206                           fsr2h	equ	0xFDA
  4207                           fsr2l	equ	0xFD9
  4208                           status	equ	0xFD8
  4209                           
  4210 ;; *************** function i2___ftdiv *****************
  4211 ;; Defined at:
  4212 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  f1              3   18[COMRAM] float 
  4215 ;;  f2              3   21[COMRAM] float 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  __ftdiv         3   29[COMRAM] float 
  4218 ;;  __ftdiv         1   32[COMRAM] unsigned char 
  4219 ;;  __ftdiv         1   28[COMRAM] unsigned char 
  4220 ;;  __ftdiv         1   27[COMRAM] unsigned char 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  3   18[COMRAM] float 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4230 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;Total ram usage:       15 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    1
  4237 ;; This function calls:
  4238 ;;		i2___ftpack
  4239 ;; This function is called by:
  4240 ;;		i2_startT0
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text16
  4245  002EDA                     __ptext16:
  4246                           	opt stack 0
  4247  002EDA                     i2___ftdiv:
  4248                           	opt stack 24
  4249                           
  4250                           ;incstack = 0
  4251  002EDA  C015  F019         	movff	i2___ftdiv@f1+2,??i2___ftdiv
  4252  002EDE  6A1A               	clrf	(??i2___ftdiv+1)& (0+255),c
  4253  002EE0  6A1B               	clrf	(??i2___ftdiv+2)& (0+255),c
  4254  002EE2  3414               	rlcf	i2___ftdiv@f1+1,w,c
  4255  002EE4  3619               	rlcf	??i2___ftdiv& (0+255),f,c
  4256  002EE6  E301               	bnc	u839_41
  4257  002EE8  801A               	bsf	(??i2___ftdiv+1)& (0+255),0,c
  4258  002EEA                     u839_41:
  4259  002EEA  5019               	movf	??i2___ftdiv,w,c
  4260  002EEC  6E1D               	movwf	i2___ftdiv@exp,c
  4261  002EEE  501D               	movf	i2___ftdiv@exp,w,c
  4262  002EF0  A4D8               	btfss	status,2,c
  4263  002EF2  D007               	goto	i2l6794
  4264  002EF4  0E00               	movlw	0
  4265  002EF6  6E13               	movwf	?i2___ftdiv,c
  4266  002EF8  0E00               	movlw	0
  4267  002EFA  6E14               	movwf	?i2___ftdiv+1,c
  4268  002EFC  0E00               	movlw	0
  4269  002EFE  6E15               	movwf	?i2___ftdiv+2,c
  4270  002F00  0012               	return	
  4271  002F02                     i2l6794:
  4272  002F02  C018  F019         	movff	i2___ftdiv@f2+2,??i2___ftdiv
  4273  002F06  6A1A               	clrf	(??i2___ftdiv+1)& (0+255),c
  4274  002F08  6A1B               	clrf	(??i2___ftdiv+2)& (0+255),c
  4275  002F0A  3417               	rlcf	i2___ftdiv@f2+1,w,c
  4276  002F0C  3619               	rlcf	??i2___ftdiv& (0+255),f,c
  4277  002F0E  E301               	bnc	u841_41
  4278  002F10  801A               	bsf	(??i2___ftdiv+1)& (0+255),0,c
  4279  002F12                     u841_41:
  4280  002F12  5019               	movf	??i2___ftdiv,w,c
  4281  002F14  6E21               	movwf	i2___ftdiv@sign,c
  4282  002F16  5021               	movf	i2___ftdiv@sign,w,c
  4283  002F18  A4D8               	btfss	status,2,c
  4284  002F1A  D007               	goto	i2l6800
  4285  002F1C  0E00               	movlw	0
  4286  002F1E  6E13               	movwf	?i2___ftdiv,c
  4287  002F20  0E00               	movlw	0
  4288  002F22  6E14               	movwf	?i2___ftdiv+1,c
  4289  002F24  0E00               	movlw	0
  4290  002F26  6E15               	movwf	?i2___ftdiv+2,c
  4291  002F28  0012               	return	
  4292  002F2A                     i2l6800:
  4293  002F2A  0E00               	movlw	0
  4294  002F2C  6E1E               	movwf	i2___ftdiv@f3,c
  4295  002F2E  0E00               	movlw	0
  4296  002F30  6E1F               	movwf	i2___ftdiv@f3+1,c
  4297  002F32  0E00               	movlw	0
  4298  002F34  6E20               	movwf	i2___ftdiv@f3+2,c
  4299  002F36  5021               	movf	i2___ftdiv@sign,w,c
  4300  002F38  0F89               	addlw	137
  4301  002F3A  5E1D               	subwf	i2___ftdiv@exp,f,c
  4302  002F3C  C015  F021         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
  4303  002F40  5018               	movf	i2___ftdiv@f2+2,w,c
  4304  002F42  1A21               	xorwf	i2___ftdiv@sign,f,c
  4305  002F44  0E80               	movlw	128
  4306  002F46  1621               	andwf	i2___ftdiv@sign,f,c
  4307  002F48  8E14               	bsf	i2___ftdiv@f1+1,7,c
  4308  002F4A  0EFF               	movlw	255
  4309  002F4C  1613               	andwf	i2___ftdiv@f1,f,c
  4310  002F4E  0EFF               	movlw	255
  4311  002F50  1614               	andwf	i2___ftdiv@f1+1,f,c
  4312  002F52  0E00               	movlw	0
  4313  002F54  1615               	andwf	i2___ftdiv@f1+2,f,c
  4314  002F56  8E17               	bsf	i2___ftdiv@f2+1,7,c
  4315  002F58  0EFF               	movlw	255
  4316  002F5A  1616               	andwf	i2___ftdiv@f2,f,c
  4317  002F5C  0EFF               	movlw	255
  4318  002F5E  1617               	andwf	i2___ftdiv@f2+1,f,c
  4319  002F60  0E00               	movlw	0
  4320  002F62  1618               	andwf	i2___ftdiv@f2+2,f,c
  4321  002F64  0E18               	movlw	24
  4322  002F66  6E1C               	movwf	i2___ftdiv@cntr,c
  4323  002F68                     i2l6820:
  4324  002F68  90D8               	bcf	status,0,c
  4325  002F6A  361E               	rlcf	i2___ftdiv@f3,f,c
  4326  002F6C  361F               	rlcf	i2___ftdiv@f3+1,f,c
  4327  002F6E  3620               	rlcf	i2___ftdiv@f3+2,f,c
  4328  002F70  5016               	movf	i2___ftdiv@f2,w,c
  4329  002F72  5C13               	subwf	i2___ftdiv@f1,w,c
  4330  002F74  5017               	movf	i2___ftdiv@f2+1,w,c
  4331  002F76  5814               	subwfb	i2___ftdiv@f1+1,w,c
  4332  002F78  5018               	movf	i2___ftdiv@f2+2,w,c
  4333  002F7A  5815               	subwfb	i2___ftdiv@f1+2,w,c
  4334  002F7C  A0D8               	btfss	status,0,c
  4335  002F7E  D007               	goto	i2l752
  4336  002F80  5016               	movf	i2___ftdiv@f2,w,c
  4337  002F82  5E13               	subwf	i2___ftdiv@f1,f,c
  4338  002F84  5017               	movf	i2___ftdiv@f2+1,w,c
  4339  002F86  5A14               	subwfb	i2___ftdiv@f1+1,f,c
  4340  002F88  5018               	movf	i2___ftdiv@f2+2,w,c
  4341  002F8A  5A15               	subwfb	i2___ftdiv@f1+2,f,c
  4342  002F8C  801E               	bsf	i2___ftdiv@f3,0,c
  4343  002F8E                     i2l752:
  4344  002F8E  90D8               	bcf	status,0,c
  4345  002F90  3613               	rlcf	i2___ftdiv@f1,f,c
  4346  002F92  3614               	rlcf	i2___ftdiv@f1+1,f,c
  4347  002F94  3615               	rlcf	i2___ftdiv@f1+2,f,c
  4348  002F96  2E1C               	decfsz	i2___ftdiv@cntr,f,c
  4349  002F98  D7E7               	goto	i2l6820
  4350  002F9A  C01E  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
  4351  002F9E  C01F  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
  4352  002FA2  C020  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
  4353  002FA6  C01D  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
  4354  002FAA  C021  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
  4355  002FAE  EC50  F018         	call	i2___ftpack	;wreg free
  4356  002FB2  C001  F013         	movff	?i2___ftpack,?i2___ftdiv
  4357  002FB6  C002  F014         	movff	?i2___ftpack+1,?i2___ftdiv+1
  4358  002FBA  C003  F015         	movff	?i2___ftpack+2,?i2___ftdiv+2
  4359  002FBE  0012               	return	
  4360  002FC0                     __end_ofi2___ftdiv:
  4361                           	opt stack 0
  4362                           pclatu	equ	0xFFB
  4363                           pclath	equ	0xFFA
  4364                           tblptru	equ	0xFF8
  4365                           tblptrh	equ	0xFF7
  4366                           tblptrl	equ	0xFF6
  4367                           tablat	equ	0xFF5
  4368                           prodh	equ	0xFF4
  4369                           prodl	equ	0xFF3
  4370                           intcon	equ	0xFF2
  4371                           intcon3	equ	0xFF0
  4372                           postinc0	equ	0xFEE
  4373                           fsr0h	equ	0xFEA
  4374                           fsr0l	equ	0xFE9
  4375                           wreg	equ	0xFE8
  4376                           postdec1	equ	0xFE5
  4377                           fsr1h	equ	0xFE2
  4378                           fsr1l	equ	0xFE1
  4379                           fsr2h	equ	0xFDA
  4380                           fsr2l	equ	0xFD9
  4381                           status	equ	0xFD8
  4382                           
  4383 ;; *************** function i2___altoft *****************
  4384 ;; Defined at:
  4385 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\altoft.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  c               4    8[COMRAM] long 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  __altoft        1   17[COMRAM] unsigned char 
  4390 ;;  __altoft        1   16[COMRAM] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  3    8[COMRAM] float 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;Total ram usage:       10 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    1
  4407 ;; This function calls:
  4408 ;;		i2___ftpack
  4409 ;; This function is called by:
  4410 ;;		i2_startT0
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text17
  4415  003538                     __ptext17:
  4416                           	opt stack 0
  4417  003538                     i2___altoft:
  4418                           	opt stack 24
  4419                           
  4420                           ;incstack = 0
  4421  003538  0E00               	movlw	0
  4422  00353A  6E12               	movwf	i2___altoft@sign,c
  4423  00353C  0E8E               	movlw	142
  4424  00353E  6E11               	movwf	i2___altoft@exp,c
  4425  003540  AE0C               	btfss	i2___altoft@c+3,7,c
  4426  003542  D011               	goto	i2l6782
  4427  003544  1E0C               	comf	i2___altoft@c+3,f,c
  4428  003546  1E0B               	comf	i2___altoft@c+2,f,c
  4429  003548  1E0A               	comf	i2___altoft@c+1,f,c
  4430  00354A  6C09               	negf	i2___altoft@c,c
  4431  00354C  0E00               	movlw	0
  4432  00354E  220A               	addwfc	i2___altoft@c+1,f,c
  4433  003550  220B               	addwfc	i2___altoft@c+2,f,c
  4434  003552  220C               	addwfc	i2___altoft@c+3,f,c
  4435  003554  0E01               	movlw	1
  4436  003556  6E12               	movwf	i2___altoft@sign,c
  4437  003558  D006               	goto	i2l6782
  4438  00355A                     i2l6780:
  4439  00355A  90D8               	bcf	status,0,c
  4440  00355C  320C               	rrcf	i2___altoft@c+3,f,c
  4441  00355E  320B               	rrcf	i2___altoft@c+2,f,c
  4442  003560  320A               	rrcf	i2___altoft@c+1,f,c
  4443  003562  3209               	rrcf	i2___altoft@c,f,c
  4444  003564  2A11               	incf	i2___altoft@exp,f,c
  4445  003566                     i2l6782:
  4446  003566  0E00               	movlw	0
  4447  003568  1409               	andwf	i2___altoft@c,w,c
  4448  00356A  6E0D               	movwf	??i2___altoft& (0+255),c
  4449  00356C  0E00               	movlw	0
  4450  00356E  140A               	andwf	i2___altoft@c+1,w,c
  4451  003570  6E0E               	movwf	(??i2___altoft+1)& (0+255),c
  4452  003572  0E00               	movlw	0
  4453  003574  140B               	andwf	i2___altoft@c+2,w,c
  4454  003576  6E0F               	movwf	(??i2___altoft+2)& (0+255),c
  4455  003578  0EFF               	movlw	255
  4456  00357A  140C               	andwf	i2___altoft@c+3,w,c
  4457  00357C  6E10               	movwf	(??i2___altoft+3)& (0+255),c
  4458  00357E  500D               	movf	??i2___altoft,w,c
  4459  003580  100E               	iorwf	??i2___altoft+1,w,c
  4460  003582  100F               	iorwf	??i2___altoft+2,w,c
  4461  003584  1010               	iorwf	??i2___altoft+3,w,c
  4462  003586  A4D8               	btfss	status,2,c
  4463  003588  D7E8               	goto	i2l6780
  4464  00358A  C009  F001         	movff	i2___altoft@c,i2___ftpack@arg
  4465  00358E  C00A  F002         	movff	i2___altoft@c+1,i2___ftpack@arg+1
  4466  003592  C00B  F003         	movff	i2___altoft@c+2,i2___ftpack@arg+2
  4467  003596  C011  F004         	movff	i2___altoft@exp,i2___ftpack@exp
  4468  00359A  C012  F005         	movff	i2___altoft@sign,i2___ftpack@sign
  4469  00359E  EC50  F018         	call	i2___ftpack	;wreg free
  4470  0035A2  C001  F009         	movff	?i2___ftpack,?i2___altoft
  4471  0035A6  C002  F00A         	movff	?i2___ftpack+1,?i2___altoft+1
  4472  0035AA  C003  F00B         	movff	?i2___ftpack+2,?i2___altoft+2
  4473  0035AE  0012               	return	
  4474  0035B0                     __end_ofi2___altoft:
  4475                           	opt stack 0
  4476                           pclatu	equ	0xFFB
  4477                           pclath	equ	0xFFA
  4478                           tblptru	equ	0xFF8
  4479                           tblptrh	equ	0xFF7
  4480                           tblptrl	equ	0xFF6
  4481                           tablat	equ	0xFF5
  4482                           prodh	equ	0xFF4
  4483                           prodl	equ	0xFF3
  4484                           intcon	equ	0xFF2
  4485                           intcon3	equ	0xFF0
  4486                           postinc0	equ	0xFEE
  4487                           fsr0h	equ	0xFEA
  4488                           fsr0l	equ	0xFE9
  4489                           wreg	equ	0xFE8
  4490                           postdec1	equ	0xFE5
  4491                           fsr1h	equ	0xFE2
  4492                           fsr1l	equ	0xFE1
  4493                           fsr2h	equ	0xFDA
  4494                           fsr2l	equ	0xFD9
  4495                           status	equ	0xFD8
  4496                           
  4497 ;; *************** function i2_digitalWrite *****************
  4498 ;; Defined at:
  4499 ;;		line 53 in file "iopin.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  port            2    0[COMRAM] int 
  4502 ;;  pin             2    2[COMRAM] int 
  4503 ;;  val             2    4[COMRAM] int 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4515 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;Total ram usage:        9 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_service
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text18
  4529  00314E                     __ptext18:
  4530                           	opt stack 0
  4531  00314E                     i2_digitalWrite:
  4532                           	opt stack 26
  4533                           
  4534                           ;iopin.c: 54: pin = 1 << pin;
  4535                           
  4536                           ;incstack = 0
  4537  00314E  C003  F007         	movff	i2digitalWrite@pin,??i2_digitalWrite
  4538  003152  0E01               	movlw	1
  4539  003154  6E08               	movwf	(??i2_digitalWrite+1)& (0+255),c
  4540  003156  0E00               	movlw	0
  4541  003158  6E09               	movwf	(??i2_digitalWrite+2)& (0+255),c
  4542  00315A  2A07               	incf	??i2_digitalWrite,f,c
  4543  00315C  D003               	goto	i2u883_44
  4544  00315E                     i2u883_45:
  4545  00315E  90D8               	bcf	status,0,c
  4546  003160  3608               	rlcf	??i2_digitalWrite+1,f,c
  4547  003162  3609               	rlcf	??i2_digitalWrite+2,f,c
  4548  003164                     i2u883_44:
  4549  003164  2E07               	decfsz	??i2_digitalWrite,f,c
  4550  003166  D7FB               	goto	i2u883_45
  4551  003168  C008  F003         	movff	??i2_digitalWrite+1,i2digitalWrite@pin
  4552  00316C  C009  F004         	movff	??i2_digitalWrite+2,i2digitalWrite@pin+1
  4553                           
  4554                           ;iopin.c: 55: if(val == 0){
  4555  003170  5005               	movf	i2digitalWrite@val,w,c
  4556  003172  1006               	iorwf	i2digitalWrite@val+1,w,c
  4557  003174  A4D8               	btfss	status,2,c
  4558  003176  D02B               	goto	i2l7106
  4559                           
  4560                           ;iopin.c: 56: pin ^= 0xff;
  4561  003178  0EFF               	movlw	255
  4562  00317A  1A03               	xorwf	i2digitalWrite@pin,f,c
  4563                           
  4564                           ;iopin.c: 57: }
  4565                           ;iopin.c: 59: switch(port){
  4566  00317C  D028               	goto	i2l7106
  4567  00317E                     i2l7082:
  4568  00317E  0405               	decf	i2digitalWrite@val,w,c
  4569  003180  1006               	iorwf	i2digitalWrite@val+1,w,c
  4570  003182  A4D8               	btfss	status,2,c
  4571  003184  D003               	goto	i2l7086
  4572  003186  5003               	movf	i2digitalWrite@pin,w,c
  4573  003188  1289               	iorwf	3977,f,c	;volatile
  4574  00318A  0012               	return	
  4575  00318C                     i2l7086:
  4576                           
  4577                           ;iopin.c: 61: else LATA &= pin;
  4578  00318C  5003               	movf	i2digitalWrite@pin,w,c
  4579  00318E  1689               	andwf	3977,f,c	;volatile
  4580                           
  4581                           ;iopin.c: 62: break;
  4582  003190  0012               	return	
  4583  003192                     i2l7088:
  4584  003192  0405               	decf	i2digitalWrite@val,w,c
  4585  003194  1006               	iorwf	i2digitalWrite@val+1,w,c
  4586  003196  A4D8               	btfss	status,2,c
  4587  003198  D003               	goto	i2l7092
  4588  00319A  5003               	movf	i2digitalWrite@pin,w,c
  4589  00319C  128A               	iorwf	3978,f,c	;volatile
  4590  00319E  0012               	return	
  4591  0031A0                     i2l7092:
  4592                           
  4593                           ;iopin.c: 64: else LATB &= pin;
  4594  0031A0  5003               	movf	i2digitalWrite@pin,w,c
  4595  0031A2  168A               	andwf	3978,f,c	;volatile
  4596                           
  4597                           ;iopin.c: 65: break;
  4598  0031A4  0012               	return	
  4599  0031A6                     i2l7094:
  4600  0031A6  0405               	decf	i2digitalWrite@val,w,c
  4601  0031A8  1006               	iorwf	i2digitalWrite@val+1,w,c
  4602  0031AA  A4D8               	btfss	status,2,c
  4603  0031AC  D003               	goto	i2l7098
  4604  0031AE  5003               	movf	i2digitalWrite@pin,w,c
  4605  0031B0  128B               	iorwf	3979,f,c	;volatile
  4606  0031B2  0012               	return	
  4607  0031B4                     i2l7098:
  4608                           
  4609                           ;iopin.c: 67: else LATC &= pin;
  4610  0031B4  5003               	movf	i2digitalWrite@pin,w,c
  4611  0031B6  168B               	andwf	3979,f,c	;volatile
  4612                           
  4613                           ;iopin.c: 68: break;
  4614  0031B8  0012               	return	
  4615  0031BA                     i2l7100:
  4616  0031BA  0405               	decf	i2digitalWrite@val,w,c
  4617  0031BC  1006               	iorwf	i2digitalWrite@val+1,w,c
  4618  0031BE  A4D8               	btfss	status,2,c
  4619  0031C0  D003               	goto	i2l7104
  4620  0031C2  5003               	movf	i2digitalWrite@pin,w,c
  4621  0031C4  128C               	iorwf	3980,f,c	;volatile
  4622  0031C6  0012               	return	
  4623  0031C8                     i2l7104:
  4624                           
  4625                           ;iopin.c: 70: else LATD &= pin;
  4626  0031C8  5003               	movf	i2digitalWrite@pin,w,c
  4627  0031CA  168C               	andwf	3980,f,c	;volatile
  4628                           
  4629                           ;iopin.c: 71: }
  4630  0031CC  0012               	return	
  4631  0031CE                     i2l7106:
  4632  0031CE  C001  F007         	movff	i2digitalWrite@port,??i2_digitalWrite
  4633  0031D2  C002  F008         	movff	i2digitalWrite@port+1,??i2_digitalWrite+1
  4634                           
  4635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4636                           ; Switch size 1, requested type "space"
  4637                           ; Number of cases is 1, Range of values is 0 to 0
  4638                           ; switch strategies available:
  4639                           ; Name         Instructions Cycles
  4640                           ; simple_byte            4     3 (average)
  4641                           ;	Chosen strategy is simple_byte
  4642  0031D6  5008               	movf	??i2_digitalWrite+1,w,c
  4643  0031D8  0A00               	xorlw	0	; case 0
  4644  0031DA  A4D8               	btfss	status,2,c
  4645  0031DC  0012               	return	
  4646                           
  4647                           ; Switch size 1, requested type "space"
  4648                           ; Number of cases is 4, Range of values is 0 to 3
  4649                           ; switch strategies available:
  4650                           ; Name         Instructions Cycles
  4651                           ; simple_byte           13     7 (average)
  4652                           ;	Chosen strategy is simple_byte
  4653  0031DE  5007               	movf	??i2_digitalWrite,w,c
  4654  0031E0  0A00               	xorlw	0	; case 0
  4655  0031E2  B4D8               	btfsc	status,2,c
  4656  0031E4  D7CC               	goto	i2l7082
  4657  0031E6  0A01               	xorlw	1	; case 1
  4658  0031E8  B4D8               	btfsc	status,2,c
  4659  0031EA  D7D3               	goto	i2l7088
  4660  0031EC  0A03               	xorlw	3	; case 2
  4661  0031EE  B4D8               	btfsc	status,2,c
  4662  0031F0  D7DA               	goto	i2l7094
  4663  0031F2  0A01               	xorlw	1	; case 3
  4664  0031F4  A4D8               	btfss	status,2,c
  4665  0031F6  0012               	return	
  4666  0031F8  D7E0               	goto	i2l7100
  4667  0031FA                     __end_ofi2_digitalWrite:
  4668                           	opt stack 0
  4669                           pclatu	equ	0xFFB
  4670                           pclath	equ	0xFFA
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           prodh	equ	0xFF4
  4676                           prodl	equ	0xFF3
  4677                           intcon	equ	0xFF2
  4678                           intcon3	equ	0xFF0
  4679                           postinc0	equ	0xFEE
  4680                           fsr0h	equ	0xFEA
  4681                           fsr0l	equ	0xFE9
  4682                           wreg	equ	0xFE8
  4683                           postdec1	equ	0xFE5
  4684                           fsr1h	equ	0xFE2
  4685                           fsr1l	equ	0xFE1
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function _printf *****************
  4691 ;; Defined at:
  4692 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  f               2   85[COMRAM] PTR const unsigned char 
  4695 ;;		 -> STR_5(9), STR_4(8), STR_3(9), STR_2(2), 
  4696 ;;		 -> STR_1(2), 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  idx             1  100[COMRAM] unsigned char 
  4699 ;;  tmpval          4  113[COMRAM] struct .
  4700 ;;  val             4  107[COMRAM] unsigned long 
  4701 ;;  fval            3  117[COMRAM] unsigned long 
  4702 ;;  cp              3    0        PTR const unsigned char 
  4703 ;;  exp             2  111[COMRAM] int 
  4704 ;;  prec            2  105[COMRAM] int 
  4705 ;;  flag            2  103[COMRAM] unsigned short 
  4706 ;;  ap              2  101[COMRAM] PTR void [1]
  4707 ;;		 -> ?_printf(2), 
  4708 ;;  len             2    0        unsigned int 
  4709 ;;  width           2    0        int 
  4710 ;;  c               1  120[COMRAM] char 
  4711 ;;  d               1    0        unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  2   85[COMRAM] int 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4721 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;Total ram usage:       36 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    4
  4728 ;; This function calls:
  4729 ;;		___awdiv
  4730 ;;		___ftge
  4731 ;;		___ftsub
  4732 ;;		___lldiv
  4733 ;;		___llmod
  4734 ;;		___lltoft
  4735 ;;		___wmul
  4736 ;;		__div_to_l_
  4737 ;;		__tdiv_to_l_
  4738 ;;		_fround
  4739 ;;		_putch
  4740 ;;		_scale
  4741 ;;		i2___ftadd
  4742 ;;		i2___ftmul
  4743 ;;		i2___ftneg
  4744 ;;		i2___fttol
  4745 ;; This function is called by:
  4746 ;;		_service
  4747 ;;		_printb
  4748 ;;		_testFrequency
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text19
  4753  0010E0                     __ptext19:
  4754                           	opt stack 0
  4755  0010E0                     _printf:
  4756                           	opt stack 22
  4757                           
  4758                           ;doprnt.c: 466: va_list ap;
  4759                           ;doprnt.c: 499: signed char c;
  4760                           ;doprnt.c: 501: int width;
  4761                           ;doprnt.c: 504: int prec;
  4762                           ;doprnt.c: 508: unsigned short flag;
  4763                           ;doprnt.c: 515: char d;
  4764                           ;doprnt.c: 516: double fval;
  4765                           ;doprnt.c: 517: int exp;
  4766                           ;doprnt.c: 523: union {
  4767                           ;doprnt.c: 524: unsigned long vd;
  4768                           ;doprnt.c: 525: double integ;
  4769                           ;doprnt.c: 526: } tmpval;
  4770                           ;doprnt.c: 528: unsigned long val;
  4771                           ;doprnt.c: 529: unsigned len;
  4772                           ;doprnt.c: 530: const char * cp;
  4773                           ;doprnt.c: 533: *ap = __va_start();
  4774                           
  4775                           ;incstack = 0
  4776  0010E0  0E58               	movlw	low (?_printf+2)
  4777  0010E2  6E66               	movwf	printf@ap,c
  4778  0010E4  0E00               	movlw	high (?_printf+2)
  4779  0010E6  6E67               	movwf	printf@ap+1,c
  4780                           
  4781                           ;doprnt.c: 536: while(c = *f++) {
  4782  0010E8  D344               	goto	i2l7062
  4783  0010EA                     i2l6886:
  4784                           
  4785                           ;doprnt.c: 538: if(c != '%')
  4786  0010EA  0E25               	movlw	37
  4787  0010EC  1879               	xorwf	printf@c,w,c
  4788  0010EE  B4D8               	btfsc	status,2,c
  4789  0010F0  D004               	goto	i2l6890
  4790                           
  4791                           ;doprnt.c: 540: {
  4792                           ;doprnt.c: 541: (putch(c) );
  4793  0010F2  5079               	movf	printf@c,w,c
  4794  0010F4  EC6F  F01C         	call	_putch
  4795                           
  4796                           ;doprnt.c: 542: continue;
  4797  0010F8  D33C               	goto	i2l7062
  4798  0010FA                     i2l6890:
  4799                           
  4800                           ;doprnt.c: 543: }
  4801                           ;doprnt.c: 548: flag = 0;
  4802  0010FA  0E00               	movlw	0
  4803  0010FC  6E69               	movwf	printf@flag+1,c
  4804  0010FE  0E00               	movlw	0
  4805  001100  6E68               	movwf	printf@flag,c
  4806                           
  4807                           ;doprnt.c: 635: switch(c = *f++) {
  4808  001102  D002               	goto	i2l6896
  4809  001104                     i2l6892:
  4810                           
  4811                           ;doprnt.c: 663: flag |= 0x400;
  4812  001104  8469               	bsf	printf@flag+1,2,c
  4813                           
  4814                           ;doprnt.c: 723: break;
  4815                           
  4816                           ;doprnt.c: 718: case 'x':
  4817                           
  4818                           ;doprnt.c: 664: break;
  4819  001106  D013               	goto	i2l6898
  4820  001108                     i2l6896:
  4821  001108  C056  FFF6         	movff	printf@f,tblptrl
  4822  00110C  C057  FFF7         	movff	printf@f+1,tblptrh
  4823  001110  4A56               	infsnz	printf@f,f,c
  4824  001112  2A57               	incf	printf@f+1,f,c
  4825  001114                     	if	0	;tblptru may be non-zero
  4826  001114                     	endif
  4827  001114                     	if	0	;tblptru may be non-zero
  4828  001114                     	endif
  4829  001114  0008               	tblrd		*
  4830  001116  CFF5 F079          	movff	tablat,printf@c
  4831  00111A  5079               	movf	printf@c,w,c
  4832                           
  4833                           ; Switch size 1, requested type "space"
  4834                           ; Number of cases is 3, Range of values is 0 to 120
  4835                           ; switch strategies available:
  4836                           ; Name         Instructions Cycles
  4837                           ; simple_byte           10     6 (average)
  4838                           ;	Chosen strategy is simple_byte
  4839  00111C  0A00               	xorlw	0	; case 0
  4840  00111E  B4D8               	btfsc	status,2,c
  4841  001120  0012               	return	
  4842  001122  0A66               	xorlw	102	; case 102
  4843  001124  B4D8               	btfsc	status,2,c
  4844  001126  D7EE               	goto	i2l6892
  4845  001128  0A1E               	xorlw	30	; case 120
  4846  00112A  A4D8               	btfss	status,2,c
  4847  00112C  D322               	goto	i2l7062
  4848  00112E                     i2l6898:
  4849                           
  4850                           ;doprnt.c: 825: if(flag & (0x700)) {
  4851  00112E  0E07               	movlw	7
  4852  001130  1469               	andwf	printf@flag+1,w,c
  4853  001132  B4D8               	btfsc	status,2,c
  4854  001134  D29C               	goto	i2l7030
  4855                           
  4856                           ;doprnt.c: 829: prec = 6;
  4857  001136  0E00               	movlw	0
  4858  001138  6E6B               	movwf	printf@prec+1,c
  4859  00113A  0E06               	movlw	6
  4860  00113C  6E6A               	movwf	printf@prec,c
  4861                           
  4862                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4863  00113E  C066  FFD9         	movff	printf@ap,fsr2l
  4864  001142  C067  FFDA         	movff	printf@ap+1,fsr2h
  4865  001146  CFDE F076          	movff	postinc2,printf@fval
  4866  00114A  CFDE F077          	movff	postinc2,printf@fval+1
  4867  00114E  CFDD F078          	movff	postdec2,printf@fval+2
  4868  001152  0E03               	movlw	3
  4869  001154  2666               	addwf	printf@ap,f,c
  4870  001156  0E00               	movlw	0
  4871  001158  2267               	addwfc	printf@ap+1,f,c
  4872                           
  4873                           ;doprnt.c: 831: if(fval < 0.0) {
  4874  00115A  AE78               	btfss	printf@fval+2,7,c
  4875  00115C  D010               	goto	i2l6912
  4876                           
  4877                           ;doprnt.c: 832: fval = -fval;
  4878  00115E  C076  F031         	movff	printf@fval,i2___ftneg@f1
  4879  001162  C077  F032         	movff	printf@fval+1,i2___ftneg@f1+1
  4880  001166  C078  F033         	movff	printf@fval+2,i2___ftneg@f1+2
  4881  00116A  EC4B  F01C         	call	i2___ftneg	;wreg free
  4882  00116E  C031  F076         	movff	?i2___ftneg,printf@fval
  4883  001172  C032  F077         	movff	?i2___ftneg+1,printf@fval+1
  4884  001176  C033  F078         	movff	?i2___ftneg+2,printf@fval+2
  4885                           
  4886                           ;doprnt.c: 833: flag |= 0x03;
  4887  00117A  0E03               	movlw	3
  4888  00117C  1268               	iorwf	printf@flag,f,c
  4889  00117E                     i2l6912:
  4890                           
  4891                           ;doprnt.c: 834: }
  4892                           ;doprnt.c: 835: exp = 0;
  4893  00117E  0E00               	movlw	0
  4894  001180  6E71               	movwf	printf@exp+1,c
  4895  001182  0E00               	movlw	0
  4896  001184  6E70               	movwf	printf@exp,c
  4897                           
  4898                           ;doprnt.c: 836: if( fval!=0) {
  4899  001186  5076               	movf	printf@fval,w,c
  4900  001188  1077               	iorwf	printf@fval+1,w,c
  4901  00118A  1078               	iorwf	printf@fval+2,w,c
  4902  00118C  B4D8               	btfsc	status,2,c
  4903  00118E  D083               	goto	i2l6940
  4904                           
  4905                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4906  001190  0E82               	movlw	130
  4907  001192  6E5C               	movwf	??_printf& (0+255),c
  4908  001194  0EFF               	movlw	255
  4909  001196  6E5D               	movwf	(??_printf+1)& (0+255),c
  4910  001198  C076  F05E         	movff	printf@fval,??_printf+2
  4911  00119C  C077  F05F         	movff	printf@fval+1,??_printf+3
  4912  0011A0  C078  F060         	movff	printf@fval+2,??_printf+4
  4913  0011A4  C079  F061         	movff	printf@fval+3,??_printf+5
  4914  0011A8  0E10               	movlw	16
  4915  0011AA  D005               	goto	i2u857_40
  4916  0011AC                     i2u857_45:
  4917  0011AC  90D8               	bcf	status,0,c
  4918  0011AE  3261               	rrcf	??_printf+5,f,c
  4919  0011B0  3260               	rrcf	??_printf+4,f,c
  4920  0011B2  325F               	rrcf	??_printf+3,f,c
  4921  0011B4  325E               	rrcf	??_printf+2,f,c
  4922  0011B6                     i2u857_40:
  4923  0011B6  2EE8               	decfsz	wreg,f,c
  4924  0011B8  D7F9               	goto	i2u857_45
  4925  0011BA  505E               	movf	??_printf+2,w,c
  4926  0011BC  245C               	addwf	??_printf,w,c
  4927  0011BE  6E70               	movwf	printf@exp,c
  4928  0011C0  0E00               	movlw	0
  4929  0011C2  205D               	addwfc	??_printf+1,w,c
  4930  0011C4  6E71               	movwf	printf@exp+1,c
  4931                           
  4932                           ;doprnt.c: 838: exp--;
  4933  0011C6  0670               	decf	printf@exp,f,c
  4934  0011C8  A0D8               	btfss	status,0,c
  4935  0011CA  0671               	decf	printf@exp+1,f,c
  4936                           
  4937                           ;doprnt.c: 839: exp *= 3;
  4938  0011CC  C070  F00F         	movff	printf@exp,___wmul@multiplier
  4939  0011D0  C071  F010         	movff	printf@exp+1,___wmul@multiplier+1
  4940  0011D4  0E00               	movlw	0
  4941  0011D6  6E12               	movwf	___wmul@multiplicand+1,c
  4942  0011D8  0E03               	movlw	3
  4943  0011DA  6E11               	movwf	___wmul@multiplicand,c
  4944  0011DC  EC38  F01C         	call	___wmul	;wreg free
  4945  0011E0  C00F  F070         	movff	?___wmul,printf@exp
  4946  0011E4  C010  F071         	movff	?___wmul+1,printf@exp+1
  4947                           
  4948                           ;doprnt.c: 840: exp /= 10;
  4949  0011E8  C070  F007         	movff	printf@exp,___awdiv@dividend
  4950  0011EC  C071  F008         	movff	printf@exp+1,___awdiv@dividend+1
  4951  0011F0  0E00               	movlw	0
  4952  0011F2  6E0A               	movwf	___awdiv@divisor+1,c
  4953  0011F4  0E0A               	movlw	10
  4954  0011F6  6E09               	movwf	___awdiv@divisor,c
  4955  0011F8  ECDC  F019         	call	___awdiv	;wreg free
  4956  0011FC  C007  F070         	movff	?___awdiv,printf@exp
  4957  001200  C008  F071         	movff	?___awdiv+1,printf@exp+1
  4958                           
  4959                           ;doprnt.c: 841: if(exp < 0)
  4960  001204  AE71               	btfss	printf@exp+1,7,c
  4961  001206  D003               	goto	i2l6928
  4962                           
  4963                           ;doprnt.c: 842: exp--;
  4964  001208  0670               	decf	printf@exp,f,c
  4965  00120A  A0D8               	btfss	status,0,c
  4966  00120C  0671               	decf	printf@exp+1,f,c
  4967  00120E                     i2l6928:
  4968                           
  4969                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4970  00120E  5070               	movf	printf@exp,w,c
  4971  001210  0800               	sublw	0
  4972  001212  ECC6  F00B         	call	_scale
  4973  001216  C031  F072         	movff	?_scale,printf@tmpval
  4974  00121A  C032  F073         	movff	?_scale+1,printf@tmpval+1
  4975  00121E  C033  F074         	movff	?_scale+2,printf@tmpval+2
  4976                           
  4977                           ;doprnt.c: 847: tmpval.integ *= fval;
  4978  001222  C072  F022         	movff	printf@tmpval,i2___ftmul@f1
  4979  001226  C073  F023         	movff	printf@tmpval+1,i2___ftmul@f1+1
  4980  00122A  C074  F024         	movff	printf@tmpval+2,i2___ftmul@f1+2
  4981  00122E  C076  F025         	movff	printf@fval,i2___ftmul@f2
  4982  001232  C077  F026         	movff	printf@fval+1,i2___ftmul@f2+1
  4983  001236  C078  F027         	movff	printf@fval+2,i2___ftmul@f2+2
  4984  00123A  ECF3  F016         	call	i2___ftmul	;wreg free
  4985  00123E  C022  F072         	movff	?i2___ftmul,printf@tmpval
  4986  001242  C023  F073         	movff	?i2___ftmul+1,printf@tmpval+1
  4987  001246  C024  F074         	movff	?i2___ftmul+2,printf@tmpval+2
  4988                           
  4989                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4990  00124A  C072  F001         	movff	printf@tmpval,___ftge@ff1
  4991  00124E  C073  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  4992  001252  C074  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  4993  001256  0E00               	movlw	0
  4994  001258  6E04               	movwf	___ftge@ff2,c
  4995  00125A  0E80               	movlw	128
  4996  00125C  6E05               	movwf	___ftge@ff2+1,c
  4997  00125E  0E3F               	movlw	63
  4998  001260  6E06               	movwf	___ftge@ff2+2,c
  4999  001262  EC94  F019         	call	___ftge	;wreg free
  5000  001266  B0D8               	btfsc	status,0,c
  5001  001268  D004               	goto	i2l6936
  5002                           
  5003                           ;doprnt.c: 849: exp--;
  5004  00126A  0670               	decf	printf@exp,f,c
  5005  00126C  A0D8               	btfss	status,0,c
  5006  00126E  0671               	decf	printf@exp+1,f,c
  5007  001270  D012               	goto	i2l6940
  5008  001272                     i2l6936:
  5009                           
  5010                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  5011  001272  C072  F001         	movff	printf@tmpval,___ftge@ff1
  5012  001276  C073  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  5013  00127A  C074  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  5014  00127E  0E00               	movlw	0
  5015  001280  6E04               	movwf	___ftge@ff2,c
  5016  001282  0E20               	movlw	32
  5017  001284  6E05               	movwf	___ftge@ff2+1,c
  5018  001286  0E41               	movlw	65
  5019  001288  6E06               	movwf	___ftge@ff2+2,c
  5020  00128A  EC94  F019         	call	___ftge	;wreg free
  5021  00128E  A0D8               	btfss	status,0,c
  5022  001290  D002               	goto	i2l6940
  5023                           
  5024                           ;doprnt.c: 851: exp++;
  5025  001292  4A70               	infsnz	printf@exp,f,c
  5026  001294  2A71               	incf	printf@exp+1,f,c
  5027  001296                     i2l6940:
  5028                           
  5029                           ;doprnt.c: 852: }
  5030                           ;doprnt.c: 1112: if(prec <= 12)
  5031  001296  BE6B               	btfsc	printf@prec+1,7,c
  5032  001298  D006               	goto	i2l6942
  5033  00129A  506B               	movf	printf@prec+1,w,c
  5034  00129C  E11B               	bnz	i2l6944
  5035  00129E  0E0D               	movlw	13
  5036  0012A0  5C6A               	subwf	printf@prec,w,c
  5037  0012A2  B0D8               	btfsc	status,0,c
  5038  0012A4  D017               	goto	i2l6944
  5039  0012A6                     i2l6942:
  5040                           
  5041                           ;doprnt.c: 1113: fval += fround(prec);
  5042  0012A6  C076  F03B         	movff	printf@fval,i2___ftadd@f1
  5043  0012AA  C077  F03C         	movff	printf@fval+1,i2___ftadd@f1+1
  5044  0012AE  C078  F03D         	movff	printf@fval+2,i2___ftadd@f1+2
  5045  0012B2  506A               	movf	printf@prec,w,c
  5046  0012B4  ECF2  F00E         	call	_fround
  5047  0012B8  C031  F03E         	movff	?_fround,i2___ftadd@f2
  5048  0012BC  C032  F03F         	movff	?_fround+1,i2___ftadd@f2+1
  5049  0012C0  C033  F040         	movff	?_fround+2,i2___ftadd@f2+2
  5050  0012C4  ECF1  F010         	call	i2___ftadd	;wreg free
  5051  0012C8  C03B  F076         	movff	?i2___ftadd,printf@fval
  5052  0012CC  C03C  F077         	movff	?i2___ftadd+1,printf@fval+1
  5053  0012D0  C03D  F078         	movff	?i2___ftadd+2,printf@fval+2
  5054  0012D4                     i2l6944:
  5055                           
  5056                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5057  0012D4  BE71               	btfsc	printf@exp+1,7,c
  5058  0012D6  D006               	goto	i2l6946
  5059  0012D8  5071               	movf	printf@exp+1,w,c
  5060  0012DA  E11E               	bnz	i2l6952
  5061  0012DC  0E0A               	movlw	10
  5062  0012DE  5C70               	subwf	printf@exp,w,c
  5063  0012E0  B0D8               	btfsc	status,0,c
  5064  0012E2  D01A               	goto	i2l6952
  5065  0012E4                     i2l6946:
  5066  0012E4  5076               	movf	printf@fval,w,c
  5067  0012E6  1077               	iorwf	printf@fval+1,w,c
  5068  0012E8  1078               	iorwf	printf@fval+2,w,c
  5069  0012EA  B4D8               	btfsc	status,2,c
  5070  0012EC  D051               	goto	i2l6966
  5071  0012EE  C076  F047         	movff	printf@fval,i2___fttol@f1
  5072  0012F2  C077  F048         	movff	printf@fval+1,i2___fttol@f1+1
  5073  0012F6  C078  F049         	movff	printf@fval+2,i2___fttol@f1+2
  5074  0012FA  EC79  F016         	call	i2___fttol	;wreg free
  5075  0012FE  5047               	movf	?i2___fttol,w,c
  5076  001300  1048               	iorwf	?i2___fttol+1,w,c
  5077  001302  1049               	iorwf	?i2___fttol+2,w,c
  5078  001304  104A               	iorwf	?i2___fttol+3,w,c
  5079  001306  B4D8               	btfsc	status,2,c
  5080  001308  BE71               	btfsc	printf@exp+1,7,c
  5081  00130A  D042               	goto	i2l6966
  5082  00130C  5071               	movf	printf@exp+1,w,c
  5083  00130E  E104               	bnz	i2l6952
  5084  001310  0E02               	movlw	2
  5085  001312  5C70               	subwf	printf@exp,w,c
  5086  001314  A0D8               	btfss	status,0,c
  5087  001316  D03C               	goto	i2l6966
  5088  001318                     i2l6952:
  5089                           
  5090                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5091  001318  C072  F001         	movff	printf@tmpval,___ftge@ff1
  5092  00131C  C073  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  5093  001320  C074  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  5094  001324  0E70               	movlw	112
  5095  001326  6E04               	movwf	___ftge@ff2,c
  5096  001328  0E89               	movlw	137
  5097  00132A  6E05               	movwf	___ftge@ff2+1,c
  5098  00132C  0E40               	movlw	64
  5099  00132E  6E06               	movwf	___ftge@ff2+2,c
  5100  001330  EC94  F019         	call	___ftge	;wreg free
  5101  001334  B0D8               	btfsc	status,0,c
  5102  001336  D002               	goto	i2l6956
  5103                           
  5104                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5105  001338  0EF7               	movlw	247
  5106  00133A  D001               	goto	L1
  5107  00133C                     i2l6956:
  5108                           
  5109                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5110  00133C  0EF8               	movlw	248
  5111  00133E                     L1:
  5112  00133E  2670               	addwf	printf@exp,f,c
  5113  001340  0EFF               	movlw	255
  5114  001342  2271               	addwfc	printf@exp+1,f,c
  5115                           
  5116                           ;doprnt.c: 1124: }
  5117                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  5118  001344  5070               	movf	printf@exp,w,c
  5119  001346  ECC6  F00B         	call	_scale
  5120  00134A  C031  F072         	movff	?_scale,printf@tmpval
  5121  00134E  C032  F073         	movff	?_scale+1,printf@tmpval+1
  5122  001352  C033  F074         	movff	?_scale+2,printf@tmpval+2
  5123                           
  5124                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5125  001356  C076  F001         	movff	printf@fval,__tdiv_to_l_@f1
  5126  00135A  C077  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  5127  00135E  C078  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  5128  001362  C072  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  5129  001366  C073  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  5130  00136A  C074  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  5131  00136E  ECBE  F013         	call	__tdiv_to_l_	;wreg free
  5132  001372  C001  F06C         	movff	?__tdiv_to_l_,printf@val
  5133  001376  C002  F06D         	movff	?__tdiv_to_l_+1,printf@val+1
  5134  00137A  C003  F06E         	movff	?__tdiv_to_l_+2,printf@val+2
  5135  00137E  C004  F06F         	movff	?__tdiv_to_l_+3,printf@val+3
  5136                           
  5137                           ;doprnt.c: 1129: fval = 0.0;
  5138  001382  0E00               	movlw	0
  5139  001384  6E76               	movwf	printf@fval,c
  5140  001386  0E00               	movlw	0
  5141  001388  6E77               	movwf	printf@fval+1,c
  5142  00138A  0E00               	movlw	0
  5143  00138C  6E78               	movwf	printf@fval+2,c
  5144                           
  5145                           ;doprnt.c: 1130: } else {
  5146  00138E  D032               	goto	i2l6970
  5147  001390                     i2l6966:
  5148                           
  5149                           ;doprnt.c: 1131: val = (unsigned long)fval;
  5150  001390  C076  F047         	movff	printf@fval,i2___fttol@f1
  5151  001394  C077  F048         	movff	printf@fval+1,i2___fttol@f1+1
  5152  001398  C078  F049         	movff	printf@fval+2,i2___fttol@f1+2
  5153  00139C  EC79  F016         	call	i2___fttol	;wreg free
  5154  0013A0  C047  F06C         	movff	?i2___fttol,printf@val
  5155  0013A4  C048  F06D         	movff	?i2___fttol+1,printf@val+1
  5156  0013A8  C049  F06E         	movff	?i2___fttol+2,printf@val+2
  5157  0013AC  C04A  F06F         	movff	?i2___fttol+3,printf@val+3
  5158                           
  5159                           ;doprnt.c: 1132: fval -= (double)val;
  5160  0013B0  C076  F047         	movff	printf@fval,___ftsub@f1
  5161  0013B4  C077  F048         	movff	printf@fval+1,___ftsub@f1+1
  5162  0013B8  C078  F049         	movff	printf@fval+2,___ftsub@f1+2
  5163  0013BC  C06C  F009         	movff	printf@val,___lltoft@c
  5164  0013C0  C06D  F00A         	movff	printf@val+1,___lltoft@c+1
  5165  0013C4  C06E  F00B         	movff	printf@val+2,___lltoft@c+2
  5166  0013C8  C06F  F00C         	movff	printf@val+3,___lltoft@c+3
  5167  0013CC  EC7E  F01B         	call	___lltoft	;wreg free
  5168  0013D0  C009  F04A         	movff	?___lltoft,___ftsub@f2
  5169  0013D4  C00A  F04B         	movff	?___lltoft+1,___ftsub@f2+1
  5170  0013D8  C00B  F04C         	movff	?___lltoft+2,___ftsub@f2+2
  5171  0013DC  ECCF  F01B         	call	___ftsub	;wreg free
  5172  0013E0  C047  F076         	movff	?___ftsub,printf@fval
  5173  0013E4  C048  F077         	movff	?___ftsub+1,printf@fval+1
  5174  0013E8  C049  F078         	movff	?___ftsub+2,printf@fval+2
  5175                           
  5176                           ;doprnt.c: 1133: exp = 0;
  5177  0013EC  0E00               	movlw	0
  5178  0013EE  6E71               	movwf	printf@exp+1,c
  5179  0013F0  0E00               	movlw	0
  5180  0013F2  6E70               	movwf	printf@exp,c
  5181  0013F4                     i2l6970:
  5182                           
  5183                           ;doprnt.c: 1134: }
  5184                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5185  0013F4  0E01               	movlw	1
  5186  0013F6  6E79               	movwf	printf@c,c
  5187  0013F8                     i2l6972:
  5188  0013F8  0E0A               	movlw	10
  5189  0013FA  1879               	xorwf	printf@c,w,c
  5190  0013FC  B4D8               	btfsc	status,2,c
  5191  0013FE  D018               	goto	i2l6984
  5192                           
  5193                           ;doprnt.c: 1137: if(val < dpowers[c])
  5194  001400  5079               	movf	printf@c,w,c
  5195  001402  0D04               	mullw	4
  5196  001404  0E01               	movlw	low _dpowers
  5197  001406  24F3               	addwf	prodl,w,c
  5198  001408  6EF6               	movwf	tblptrl,c
  5199  00140A  0E10               	movlw	high _dpowers
  5200  00140C  20F4               	addwfc	prodh,w,c
  5201  00140E  6EF7               	movwf	tblptrh,c
  5202  001410                     	if	0	;There are less than 3 active tblptr bytes
  5203  001410                     	endif
  5204  001410  0009               	tblrd		*+
  5205  001412  50F5               	movf	tablat,w,c
  5206  001414  5C6C               	subwf	printf@val,w,c
  5207  001416  0009               	tblrd		*+
  5208  001418  50F5               	movf	tablat,w,c
  5209  00141A  586D               	subwfb	printf@val+1,w,c
  5210  00141C  0009               	tblrd		*+
  5211  00141E  50F5               	movf	tablat,w,c
  5212  001420  586E               	subwfb	printf@val+2,w,c
  5213  001422  0009               	tblrd		*+
  5214  001424  50F5               	movf	tablat,w,c
  5215  001426  586F               	subwfb	printf@val+3,w,c
  5216  001428  A0D8               	btfss	status,0,c
  5217  00142A  D002               	goto	i2l6984
  5218                           
  5219                           ;doprnt.c: 1138: break;
  5220  00142C  2A79               	incf	printf@c,f,c
  5221  00142E  D7E4               	goto	i2l6972
  5222  001430                     i2l6984:
  5223                           
  5224                           ;doprnt.c: 1175: {
  5225                           ;doprnt.c: 1188: if(flag & 0x03)
  5226  001430  0E03               	movlw	3
  5227  001432  1468               	andwf	printf@flag,w,c
  5228  001434  6E5C               	movwf	??_printf& (0+255),c
  5229  001436  0E00               	movlw	0
  5230  001438  1469               	andwf	printf@flag+1,w,c
  5231  00143A  6E5D               	movwf	(??_printf+1)& (0+255),c
  5232  00143C  505C               	movf	??_printf,w,c
  5233  00143E  105D               	iorwf	??_printf+1,w,c
  5234  001440  B4D8               	btfsc	status,2,c
  5235  001442  D048               	goto	i2l6994
  5236                           
  5237                           ;doprnt.c: 1190: (putch('-') );
  5238  001444  0E2D               	movlw	45
  5239  001446  EC6F  F01C         	call	_putch
  5240                           
  5241                           ;doprnt.c: 1195: }
  5242                           ;doprnt.c: 1196: while(c--) {
  5243  00144A  D044               	goto	i2l6994
  5244  00144C                     i2l6988:
  5245                           
  5246                           ;doprnt.c: 1200: {
  5247                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5248  00144C  C06C  F001         	movff	printf@val,___lldiv@dividend
  5249  001450  C06D  F002         	movff	printf@val+1,___lldiv@dividend+1
  5250  001454  C06E  F003         	movff	printf@val+2,___lldiv@dividend+2
  5251  001458  C06F  F004         	movff	printf@val+3,___lldiv@dividend+3
  5252  00145C  5079               	movf	printf@c,w,c
  5253  00145E  0D04               	mullw	4
  5254  001460  0E01               	movlw	low _dpowers
  5255  001462  24F3               	addwf	prodl,w,c
  5256  001464  6EF6               	movwf	tblptrl,c
  5257  001466  0E10               	movlw	high _dpowers
  5258  001468  20F4               	addwfc	prodh,w,c
  5259  00146A  6EF7               	movwf	tblptrh,c
  5260  00146C                     	if	0	;There are less than 3 active tblptr bytes
  5261  00146C                     	endif
  5262  00146C  0009               	tblrd		*+
  5263  00146E  CFF5 F005          	movff	tablat,___lldiv@divisor
  5264  001472  0009               	tblrd		*+
  5265  001474  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  5266  001478  0009               	tblrd		*+
  5267  00147A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  5268  00147E  000A               	tblrd		*-
  5269  001480  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  5270  001484  EC1E  F01A         	call	___lldiv	;wreg free
  5271  001488  C001  F072         	movff	?___lldiv,printf@tmpval
  5272  00148C  C002  F073         	movff	?___lldiv+1,printf@tmpval+1
  5273  001490  C003  F074         	movff	?___lldiv+2,printf@tmpval+2
  5274  001494  C004  F075         	movff	?___lldiv+3,printf@tmpval+3
  5275                           
  5276                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5277  001498  C072  F001         	movff	printf@tmpval,___llmod@dividend
  5278  00149C  C073  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  5279  0014A0  C074  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  5280  0014A4  C075  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  5281  0014A8  0E0A               	movlw	10
  5282  0014AA  6E05               	movwf	___llmod@divisor,c
  5283  0014AC  0E00               	movlw	0
  5284  0014AE  6E06               	movwf	___llmod@divisor+1,c
  5285  0014B0  0E00               	movlw	0
  5286  0014B2  6E07               	movwf	___llmod@divisor+2,c
  5287  0014B4  0E00               	movlw	0
  5288  0014B6  6E08               	movwf	___llmod@divisor+3,c
  5289  0014B8  EC4B  F01B         	call	___llmod	;wreg free
  5290  0014BC  C001  F072         	movff	?___llmod,printf@tmpval
  5291  0014C0  C002  F073         	movff	?___llmod+1,printf@tmpval+1
  5292  0014C4  C003  F074         	movff	?___llmod+2,printf@tmpval+2
  5293  0014C8  C004  F075         	movff	?___llmod+3,printf@tmpval+3
  5294                           
  5295                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  5296  0014CC  5072               	movf	printf@tmpval,w,c
  5297  0014CE  0F30               	addlw	48
  5298  0014D0  EC6F  F01C         	call	_putch
  5299  0014D4                     i2l6994:
  5300  0014D4  0679               	decf	printf@c,f,c
  5301  0014D6  2879               	incf	printf@c,w,c
  5302  0014D8  B4D8               	btfsc	status,2,c
  5303  0014DA  D007               	goto	i2l7000
  5304  0014DC  D7B7               	goto	i2l6988
  5305  0014DE                     i2l6996:
  5306                           
  5307                           ;doprnt.c: 1208: (putch('0') );
  5308  0014DE  0E30               	movlw	48
  5309  0014E0  EC6F  F01C         	call	_putch
  5310                           
  5311                           ;doprnt.c: 1209: exp--;
  5312  0014E4  0670               	decf	printf@exp,f,c
  5313  0014E6  A0D8               	btfss	status,0,c
  5314  0014E8  0671               	decf	printf@exp+1,f,c
  5315  0014EA                     i2l7000:
  5316  0014EA  BE71               	btfsc	printf@exp+1,7,c
  5317  0014EC  D005               	goto	i2l7002
  5318  0014EE  5071               	movf	printf@exp+1,w,c
  5319  0014F0  E1F6               	bnz	i2l6996
  5320  0014F2  0470               	decf	printf@exp,w,c
  5321  0014F4  B0D8               	btfsc	status,0,c
  5322  0014F6  D7F3               	goto	i2l6996
  5323  0014F8                     i2l7002:
  5324                           
  5325                           ;doprnt.c: 1210: }
  5326                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5327  0014F8  BE6B               	btfsc	printf@prec+1,7,c
  5328  0014FA  D009               	goto	i2l435
  5329  0014FC  506B               	movf	printf@prec+1,w,c
  5330  0014FE  E104               	bnz	i2u873_40
  5331  001500  0E09               	movlw	9
  5332  001502  5C6A               	subwf	printf@prec,w,c
  5333  001504  A0D8               	btfss	status,0,c
  5334  001506  D003               	goto	i2l435
  5335  001508                     i2u873_40:
  5336                           
  5337                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5338  001508  0E08               	movlw	8
  5339  00150A  6E79               	movwf	printf@c,c
  5340  00150C  D002               	goto	i2l7006
  5341  00150E                     i2l435:
  5342                           
  5343                           ;doprnt.c: 1213: else
  5344                           ;doprnt.c: 1214: c = prec;
  5345  00150E  C06A  F079         	movff	printf@prec,printf@c
  5346  001512                     i2l7006:
  5347                           
  5348                           ;doprnt.c: 1215: prec -= c;
  5349  001512  5079               	movf	printf@c,w,c
  5350  001514  5E6A               	subwf	printf@prec,f,c
  5351  001516  0E00               	movlw	0
  5352  001518  BE79               	btfsc	printf@c,7,c
  5353  00151A  0EFF               	movlw	255
  5354  00151C  5A6B               	subwfb	printf@prec+1,f,c
  5355                           
  5356                           ;doprnt.c: 1219: if(c)
  5357  00151E  5079               	movf	printf@c,w,c
  5358  001520  B4D8               	btfsc	status,2,c
  5359  001522  D003               	goto	i2l7012
  5360                           
  5361                           ;doprnt.c: 1221: (putch('.') );
  5362  001524  0E2E               	movlw	46
  5363  001526  EC6F  F01C         	call	_putch
  5364  00152A                     i2l7012:
  5365                           
  5366                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5367  00152A  5079               	movf	printf@c,w,c
  5368  00152C  ECC6  F00B         	call	_scale
  5369  001530  C031  F062         	movff	?_scale,_printf$1208
  5370  001534  C032  F063         	movff	?_scale+1,_printf$1208+1
  5371  001538  C033  F064         	movff	?_scale+2,_printf$1208+2
  5372                           
  5373                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5374  00153C  C076  F025         	movff	printf@fval,i2___ftmul@f2
  5375  001540  C077  F026         	movff	printf@fval+1,i2___ftmul@f2+1
  5376  001544  C078  F027         	movff	printf@fval+2,i2___ftmul@f2+2
  5377  001548  C062  F022         	movff	_printf$1208,i2___ftmul@f1
  5378  00154C  C063  F023         	movff	_printf$1208+1,i2___ftmul@f1+1
  5379  001550  C064  F024         	movff	_printf$1208+2,i2___ftmul@f1+2
  5380  001554  ECF3  F016         	call	i2___ftmul	;wreg free
  5381  001558  C022  F047         	movff	?i2___ftmul,i2___fttol@f1
  5382  00155C  C023  F048         	movff	?i2___ftmul+1,i2___fttol@f1+1
  5383  001560  C024  F049         	movff	?i2___ftmul+2,i2___fttol@f1+2
  5384  001564  EC79  F016         	call	i2___fttol	;wreg free
  5385  001568  C047  F06C         	movff	?i2___fttol,printf@val
  5386  00156C  C048  F06D         	movff	?i2___fttol+1,printf@val+1
  5387  001570  C049  F06E         	movff	?i2___fttol+2,printf@val+2
  5388  001574  C04A  F06F         	movff	?i2___fttol+3,printf@val+3
  5389                           
  5390                           ;doprnt.c: 1228: while(c--) {
  5391  001578  D06A               	goto	i2l7022
  5392  00157A                     i2l7016:
  5393                           
  5394                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  5395  00157A  C06C  F001         	movff	printf@val,___lldiv@dividend
  5396  00157E  C06D  F002         	movff	printf@val+1,___lldiv@dividend+1
  5397  001582  C06E  F003         	movff	printf@val+2,___lldiv@dividend+2
  5398  001586  C06F  F004         	movff	printf@val+3,___lldiv@dividend+3
  5399  00158A  5079               	movf	printf@c,w,c
  5400  00158C  0D04               	mullw	4
  5401  00158E  0E01               	movlw	low _dpowers
  5402  001590  24F3               	addwf	prodl,w,c
  5403  001592  6EF6               	movwf	tblptrl,c
  5404  001594  0E10               	movlw	high _dpowers
  5405  001596  20F4               	addwfc	prodh,w,c
  5406  001598  6EF7               	movwf	tblptrh,c
  5407  00159A                     	if	0	;There are less than 3 active tblptr bytes
  5408  00159A                     	endif
  5409  00159A  0009               	tblrd		*+
  5410  00159C  CFF5 F005          	movff	tablat,___lldiv@divisor
  5411  0015A0  0009               	tblrd		*+
  5412  0015A2  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  5413  0015A6  0009               	tblrd		*+
  5414  0015A8  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  5415  0015AC  000A               	tblrd		*-
  5416  0015AE  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  5417  0015B2  EC1E  F01A         	call	___lldiv	;wreg free
  5418  0015B6  C001  F072         	movff	?___lldiv,printf@tmpval
  5419  0015BA  C002  F073         	movff	?___lldiv+1,printf@tmpval+1
  5420  0015BE  C003  F074         	movff	?___lldiv+2,printf@tmpval+2
  5421  0015C2  C004  F075         	movff	?___lldiv+3,printf@tmpval+3
  5422                           
  5423                           ;doprnt.c: 1230: tmpval.vd %= 10;
  5424  0015C6  C072  F001         	movff	printf@tmpval,___llmod@dividend
  5425  0015CA  C073  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  5426  0015CE  C074  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  5427  0015D2  C075  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  5428  0015D6  0E0A               	movlw	10
  5429  0015D8  6E05               	movwf	___llmod@divisor,c
  5430  0015DA  0E00               	movlw	0
  5431  0015DC  6E06               	movwf	___llmod@divisor+1,c
  5432  0015DE  0E00               	movlw	0
  5433  0015E0  6E07               	movwf	___llmod@divisor+2,c
  5434  0015E2  0E00               	movlw	0
  5435  0015E4  6E08               	movwf	___llmod@divisor+3,c
  5436  0015E6  EC4B  F01B         	call	___llmod	;wreg free
  5437  0015EA  C001  F072         	movff	?___llmod,printf@tmpval
  5438  0015EE  C002  F073         	movff	?___llmod+1,printf@tmpval+1
  5439  0015F2  C003  F074         	movff	?___llmod+2,printf@tmpval+2
  5440  0015F6  C004  F075         	movff	?___llmod+3,printf@tmpval+3
  5441                           
  5442                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  5443  0015FA  5072               	movf	printf@tmpval,w,c
  5444  0015FC  0F30               	addlw	48
  5445  0015FE  EC6F  F01C         	call	_putch
  5446                           
  5447                           ;doprnt.c: 1232: val %= dpowers[c];
  5448  001602  C06C  F001         	movff	printf@val,___llmod@dividend
  5449  001606  C06D  F002         	movff	printf@val+1,___llmod@dividend+1
  5450  00160A  C06E  F003         	movff	printf@val+2,___llmod@dividend+2
  5451  00160E  C06F  F004         	movff	printf@val+3,___llmod@dividend+3
  5452  001612  5079               	movf	printf@c,w,c
  5453  001614  0D04               	mullw	4
  5454  001616  0E01               	movlw	low _dpowers
  5455  001618  24F3               	addwf	prodl,w,c
  5456  00161A  6EF6               	movwf	tblptrl,c
  5457  00161C  0E10               	movlw	high _dpowers
  5458  00161E  20F4               	addwfc	prodh,w,c
  5459  001620  6EF7               	movwf	tblptrh,c
  5460  001622                     	if	0	;There are less than 3 active tblptr bytes
  5461  001622                     	endif
  5462  001622  0009               	tblrd		*+
  5463  001624  CFF5 F005          	movff	tablat,___llmod@divisor
  5464  001628  0009               	tblrd		*+
  5465  00162A  CFF5 F006          	movff	tablat,___llmod@divisor+1
  5466  00162E  0009               	tblrd		*+
  5467  001630  CFF5 F007          	movff	tablat,___llmod@divisor+2
  5468  001634  000A               	tblrd		*-
  5469  001636  CFF5 F008          	movff	tablat,___llmod@divisor+3
  5470  00163A  EC4B  F01B         	call	___llmod	;wreg free
  5471  00163E  C001  F06C         	movff	?___llmod,printf@val
  5472  001642  C002  F06D         	movff	?___llmod+1,printf@val+1
  5473  001646  C003  F06E         	movff	?___llmod+2,printf@val+2
  5474  00164A  C004  F06F         	movff	?___llmod+3,printf@val+3
  5475  00164E                     i2l7022:
  5476  00164E  0679               	decf	printf@c,f,c
  5477  001650  2879               	incf	printf@c,w,c
  5478  001652  B4D8               	btfsc	status,2,c
  5479  001654  D007               	goto	i2l7028
  5480  001656  D791               	goto	i2l7016
  5481  001658                     i2l7024:
  5482                           
  5483                           ;doprnt.c: 1236: (putch('0') );
  5484  001658  0E30               	movlw	48
  5485  00165A  EC6F  F01C         	call	_putch
  5486                           
  5487                           ;doprnt.c: 1237: prec--;
  5488  00165E  066A               	decf	printf@prec,f,c
  5489  001660  A0D8               	btfss	status,0,c
  5490  001662  066B               	decf	printf@prec+1,f,c
  5491  001664                     i2l7028:
  5492  001664  506A               	movf	printf@prec,w,c
  5493  001666  106B               	iorwf	printf@prec+1,w,c
  5494  001668  B4D8               	btfsc	status,2,c
  5495  00166A  D083               	goto	i2l7062
  5496  00166C  D7F5               	goto	i2l7024
  5497  00166E                     i2l7030:
  5498                           
  5499                           ;doprnt.c: 1246: }
  5500                           ;doprnt.c: 1273: {
  5501                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5502  00166E  C066  FFD9         	movff	printf@ap,fsr2l
  5503  001672  C067  FFDA         	movff	printf@ap+1,fsr2h
  5504  001676  CFDE F05C          	movff	postinc2,??_printf
  5505  00167A  CFDD F05D          	movff	postdec2,??_printf+1
  5506  00167E  C05C  F06C         	movff	??_printf,printf@val
  5507  001682  C05D  F06D         	movff	??_printf+1,printf@val+1
  5508  001686  6A6E               	clrf	printf@val+2,c
  5509  001688  6A6F               	clrf	printf@val+3,c
  5510  00168A  0E02               	movlw	2
  5511  00168C  2666               	addwf	printf@ap,f,c
  5512  00168E  0E00               	movlw	0
  5513  001690  2267               	addwfc	printf@ap+1,f,c
  5514                           
  5515                           ;doprnt.c: 1287: }
  5516                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5517  001692  0E01               	movlw	1
  5518  001694  6E79               	movwf	printf@c,c
  5519  001696                     i2l7036:
  5520  001696  0E08               	movlw	8
  5521  001698  1879               	xorwf	printf@c,w,c
  5522  00169A  B4D8               	btfsc	status,2,c
  5523  00169C  D018               	goto	i2l7048
  5524                           
  5525                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5526  00169E  5079               	movf	printf@c,w,c
  5527  0016A0  0D04               	mullw	4
  5528  0016A2  0E77               	movlw	low _hexpowers
  5529  0016A4  24F3               	addwf	prodl,w,c
  5530  0016A6  6EF6               	movwf	tblptrl,c
  5531  0016A8  0E10               	movlw	high _hexpowers
  5532  0016AA  20F4               	addwfc	prodh,w,c
  5533  0016AC  6EF7               	movwf	tblptrh,c
  5534  0016AE                     	if	0	;There are less than 3 active tblptr bytes
  5535  0016AE                     	endif
  5536  0016AE  0009               	tblrd		*+
  5537  0016B0  50F5               	movf	tablat,w,c
  5538  0016B2  5C6C               	subwf	printf@val,w,c
  5539  0016B4  0009               	tblrd		*+
  5540  0016B6  50F5               	movf	tablat,w,c
  5541  0016B8  586D               	subwfb	printf@val+1,w,c
  5542  0016BA  0009               	tblrd		*+
  5543  0016BC  50F5               	movf	tablat,w,c
  5544  0016BE  586E               	subwfb	printf@val+2,w,c
  5545  0016C0  0009               	tblrd		*+
  5546  0016C2  50F5               	movf	tablat,w,c
  5547  0016C4  586F               	subwfb	printf@val+3,w,c
  5548  0016C6  A0D8               	btfss	status,0,c
  5549  0016C8  D002               	goto	i2l7048
  5550                           
  5551                           ;doprnt.c: 1318: break;
  5552  0016CA  2A79               	incf	printf@c,f,c
  5553  0016CC  D7E4               	goto	i2l7036
  5554  0016CE                     i2l7048:
  5555                           
  5556                           ;doprnt.c: 1422: {
  5557                           ;doprnt.c: 1438: if(flag & 0x03)
  5558  0016CE  0E03               	movlw	3
  5559  0016D0  1468               	andwf	printf@flag,w,c
  5560  0016D2  6E5C               	movwf	??_printf& (0+255),c
  5561  0016D4  0E00               	movlw	0
  5562  0016D6  1469               	andwf	printf@flag+1,w,c
  5563  0016D8  6E5D               	movwf	(??_printf+1)& (0+255),c
  5564  0016DA  505C               	movf	??_printf,w,c
  5565  0016DC  105D               	iorwf	??_printf+1,w,c
  5566  0016DE  B4D8               	btfsc	status,2,c
  5567  0016E0  D003               	goto	i2l7052
  5568                           
  5569                           ;doprnt.c: 1439: (putch('-') );
  5570  0016E2  0E2D               	movlw	45
  5571  0016E4  EC6F  F01C         	call	_putch
  5572  0016E8                     i2l7052:
  5573                           
  5574                           ;doprnt.c: 1469: }
  5575                           ;doprnt.c: 1472: prec = c;
  5576  0016E8  5079               	movf	printf@c,w,c
  5577  0016EA  6E6A               	movwf	printf@prec,c
  5578  0016EC  6A6B               	clrf	printf@prec+1,c
  5579  0016EE  BE6A               	btfsc	printf@prec,7,c
  5580  0016F0  066B               	decf	printf@prec+1,f,c
  5581                           
  5582                           ;doprnt.c: 1474: while(prec--) {
  5583  0016F2  D037               	goto	i2l7060
  5584  0016F4                     i2l7054:
  5585                           
  5586                           ;doprnt.c: 1478: {
  5587                           ;doprnt.c: 1499: {
  5588                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5589  0016F4  C06C  F001         	movff	printf@val,___lldiv@dividend
  5590  0016F8  C06D  F002         	movff	printf@val+1,___lldiv@dividend+1
  5591  0016FC  C06E  F003         	movff	printf@val+2,___lldiv@dividend+2
  5592  001700  C06F  F004         	movff	printf@val+3,___lldiv@dividend+3
  5593  001704  C06A  F05C         	movff	printf@prec,??_printf
  5594  001708  C06B  F05D         	movff	printf@prec+1,??_printf+1
  5595  00170C  90D8               	bcf	status,0,c
  5596  00170E  365C               	rlcf	??_printf,f,c
  5597  001710  365D               	rlcf	??_printf+1,f,c
  5598  001712  90D8               	bcf	status,0,c
  5599  001714  365C               	rlcf	??_printf,f,c
  5600  001716  365D               	rlcf	??_printf+1,f,c
  5601  001718  0E77               	movlw	low _hexpowers
  5602  00171A  245C               	addwf	??_printf,w,c
  5603  00171C  6EF6               	movwf	tblptrl,c
  5604  00171E  0E10               	movlw	high _hexpowers
  5605  001720  205D               	addwfc	??_printf+1,w,c
  5606  001722  6EF7               	movwf	tblptrh,c
  5607  001724                     	if	0	;There are less than 3 active tblptr bytes
  5608  001724                     	endif
  5609  001724  0009               	tblrd		*+
  5610  001726  CFF5 F005          	movff	tablat,___lldiv@divisor
  5611  00172A  0009               	tblrd		*+
  5612  00172C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  5613  001730  0009               	tblrd		*+
  5614  001732  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  5615  001736  000A               	tblrd		*-
  5616  001738  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  5617  00173C  EC1E  F01A         	call	___lldiv	;wreg free
  5618  001740  5001               	movf	?___lldiv,w,c
  5619  001742  0B0F               	andlw	15
  5620  001744  6E65               	movwf	printf@idx,c
  5621                           
  5622                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  5623  001746  5065               	movf	printf@idx,w,c
  5624  001748  0D01               	mullw	1
  5625  00174A  0EAF               	movlw	low STR_6
  5626  00174C  24F3               	addwf	prodl,w,c
  5627  00174E  6EF6               	movwf	tblptrl,c
  5628  001750  0E10               	movlw	high STR_6
  5629  001752  20F4               	addwfc	prodh,w,c
  5630  001754  6EF7               	movwf	tblptrh,c
  5631  001756                     	if	0	;There are less than 3 active tblptr bytes
  5632  001756                     	endif
  5633  001756  0008               	tblrd		*
  5634  001758  CFF5 F079          	movff	tablat,printf@c
  5635                           
  5636                           ;doprnt.c: 1508: }
  5637                           ;doprnt.c: 1523: }
  5638                           ;doprnt.c: 1524: (putch(c) );
  5639  00175C  5079               	movf	printf@c,w,c
  5640  00175E  EC6F  F01C         	call	_putch
  5641  001762                     i2l7060:
  5642  001762  066A               	decf	printf@prec,f,c
  5643  001764  A0D8               	btfss	status,0,c
  5644  001766  066B               	decf	printf@prec+1,f,c
  5645  001768  286A               	incf	printf@prec,w,c
  5646  00176A  E1C4               	bnz	i2l7054
  5647  00176C  286B               	incf	printf@prec+1,w,c
  5648  00176E  A4D8               	btfss	status,2,c
  5649  001770  D7C1               	goto	i2l7054
  5650  001772                     i2l7062:
  5651  001772  C056  FFF6         	movff	printf@f,tblptrl
  5652  001776  C057  FFF7         	movff	printf@f+1,tblptrh
  5653  00177A  4A56               	infsnz	printf@f,f,c
  5654  00177C  2A57               	incf	printf@f+1,f,c
  5655  00177E                     	if	0	;tblptru may be non-zero
  5656  00177E                     	endif
  5657  00177E                     	if	0	;tblptru may be non-zero
  5658  00177E                     	endif
  5659  00177E  0008               	tblrd		*
  5660  001780  CFF5 F079          	movff	tablat,printf@c
  5661  001784  5079               	movf	printf@c,w,c
  5662  001786  B4D8               	btfsc	status,2,c
  5663  001788  0012               	return	
  5664  00178A  D4AF               	goto	i2l6886
  5665  00178C                     __end_of_printf:
  5666                           	opt stack 0
  5667                           pclatu	equ	0xFFB
  5668                           pclath	equ	0xFFA
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           prodh	equ	0xFF4
  5674                           prodl	equ	0xFF3
  5675                           intcon	equ	0xFF2
  5676                           intcon3	equ	0xFF0
  5677                           postinc0	equ	0xFEE
  5678                           fsr0h	equ	0xFEA
  5679                           fsr0l	equ	0xFE9
  5680                           wreg	equ	0xFE8
  5681                           postdec1	equ	0xFE5
  5682                           fsr1h	equ	0xFE2
  5683                           fsr1l	equ	0xFE1
  5684                           postinc2	equ	0xFDE
  5685                           postdec2	equ	0xFDD
  5686                           fsr2h	equ	0xFDA
  5687                           fsr2l	equ	0xFD9
  5688                           status	equ	0xFD8
  5689                           
  5690 ;; *************** function i2___fttol *****************
  5691 ;; Defined at:
  5692 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  f1              3   70[COMRAM] float 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  __fttol         4   80[COMRAM] unsigned long 
  5697 ;;  __fttol         1   84[COMRAM] unsigned char 
  5698 ;;  __fttol         1   79[COMRAM] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  4   70[COMRAM] long 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;Total ram usage:       15 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_printf
  5718 ;;		i2_startT0
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text20
  5723  002CF2                     __ptext20:
  5724                           	opt stack 0
  5725  002CF2                     i2___fttol:
  5726                           	opt stack 25
  5727                           
  5728                           ;incstack = 0
  5729  002CF2  C049  F04B         	movff	i2___fttol@f1+2,??i2___fttol
  5730  002CF6  6A4C               	clrf	(??i2___fttol+1)& (0+255),c
  5731  002CF8  6A4D               	clrf	(??i2___fttol+2)& (0+255),c
  5732  002CFA  3448               	rlcf	i2___fttol@f1+1,w,c
  5733  002CFC  364B               	rlcf	??i2___fttol& (0+255),f,c
  5734  002CFE  E301               	bnc	u845_41
  5735  002D00  804C               	bsf	(??i2___fttol+1)& (0+255),0,c
  5736  002D02                     u845_41:
  5737  002D02  504B               	movf	??i2___fttol,w,c
  5738  002D04  6E55               	movwf	i2___fttol@exp1,c
  5739  002D06  5055               	movf	i2___fttol@exp1,w,c
  5740  002D08  A4D8               	btfss	status,2,c
  5741  002D0A  D009               	goto	i2l6844
  5742  002D0C  0E00               	movlw	0
  5743  002D0E  6E47               	movwf	?i2___fttol,c
  5744  002D10  0E00               	movlw	0
  5745  002D12  6E48               	movwf	?i2___fttol+1,c
  5746  002D14  0E00               	movlw	0
  5747  002D16  6E49               	movwf	?i2___fttol+2,c
  5748  002D18  0E00               	movlw	0
  5749  002D1A  6E4A               	movwf	?i2___fttol+3,c
  5750  002D1C  0012               	return	
  5751  002D1E                     i2l6844:
  5752  002D1E  0E17               	movlw	23
  5753  002D20  6E4B               	movwf	??i2___fttol& (0+255),c
  5754  002D22  C047  F04C         	movff	i2___fttol@f1,??i2___fttol+1
  5755  002D26  C048  F04D         	movff	i2___fttol@f1+1,??i2___fttol+2
  5756  002D2A  C049  F04E         	movff	i2___fttol@f1+2,??i2___fttol+3
  5757  002D2E  284B               	incf	??i2___fttol,w,c
  5758  002D30  6E4F               	movwf	(??i2___fttol+4)& (0+255),c
  5759  002D32  D004               	goto	i2u847_40
  5760  002D34                     i2u847_45:
  5761  002D34  90D8               	bcf	status,0,c
  5762  002D36  324E               	rrcf	??i2___fttol+3,f,c
  5763  002D38  324D               	rrcf	??i2___fttol+2,f,c
  5764  002D3A  324C               	rrcf	??i2___fttol+1,f,c
  5765  002D3C                     i2u847_40:
  5766  002D3C  2E4F               	decfsz	(??i2___fttol+4)& (0+255),f,c
  5767  002D3E  D7FA               	goto	i2u847_45
  5768  002D40  504C               	movf	??i2___fttol+1,w,c
  5769  002D42  6E50               	movwf	i2___fttol@sign1,c
  5770  002D44  8E48               	bsf	i2___fttol@f1+1,7,c
  5771  002D46  0EFF               	movlw	255
  5772  002D48  1647               	andwf	i2___fttol@f1,f,c
  5773  002D4A  0EFF               	movlw	255
  5774  002D4C  1648               	andwf	i2___fttol@f1+1,f,c
  5775  002D4E  0E00               	movlw	0
  5776  002D50  1649               	andwf	i2___fttol@f1+2,f,c
  5777  002D52  5047               	movf	i2___fttol@f1,w,c
  5778  002D54  6E51               	movwf	i2___fttol@lval,c
  5779  002D56  5048               	movf	i2___fttol@f1+1,w,c
  5780  002D58  6E52               	movwf	i2___fttol@lval+1,c
  5781  002D5A  5049               	movf	i2___fttol@f1+2,w,c
  5782  002D5C  6E53               	movwf	i2___fttol@lval+2,c
  5783  002D5E  6A54               	clrf	i2___fttol@lval+3,c
  5784  002D60  0E8E               	movlw	142
  5785  002D62  5E55               	subwf	i2___fttol@exp1,f,c
  5786  002D64  AE55               	btfss	i2___fttol@exp1,7,c
  5787  002D66  D016               	goto	i2l6866
  5788  002D68  5055               	movf	i2___fttol@exp1,w,c
  5789  002D6A  0A80               	xorlw	128
  5790  002D6C  0F8F               	addlw	143
  5791  002D6E  B0D8               	btfsc	status,0,c
  5792  002D70  D009               	goto	i2l6862
  5793  002D72  0E00               	movlw	0
  5794  002D74  6E47               	movwf	?i2___fttol,c
  5795  002D76  0E00               	movlw	0
  5796  002D78  6E48               	movwf	?i2___fttol+1,c
  5797  002D7A  0E00               	movlw	0
  5798  002D7C  6E49               	movwf	?i2___fttol+2,c
  5799  002D7E  0E00               	movlw	0
  5800  002D80  6E4A               	movwf	?i2___fttol+3,c
  5801  002D82  0012               	return	
  5802  002D84                     i2l6862:
  5803  002D84  90D8               	bcf	status,0,c
  5804  002D86  3254               	rrcf	i2___fttol@lval+3,f,c
  5805  002D88  3253               	rrcf	i2___fttol@lval+2,f,c
  5806  002D8A  3252               	rrcf	i2___fttol@lval+1,f,c
  5807  002D8C  3251               	rrcf	i2___fttol@lval,f,c
  5808  002D8E  3E55               	incfsz	i2___fttol@exp1,f,c
  5809  002D90  D7F9               	goto	i2l6862
  5810  002D92  D015               	goto	i2l6876
  5811  002D94                     i2l6866:
  5812  002D94  0E17               	movlw	23
  5813  002D96  6455               	cpfsgt	i2___fttol@exp1,c
  5814  002D98  D00F               	goto	i2l6874
  5815  002D9A  0E00               	movlw	0
  5816  002D9C  6E47               	movwf	?i2___fttol,c
  5817  002D9E  0E00               	movlw	0
  5818  002DA0  6E48               	movwf	?i2___fttol+1,c
  5819  002DA2  0E00               	movlw	0
  5820  002DA4  6E49               	movwf	?i2___fttol+2,c
  5821  002DA6  0E00               	movlw	0
  5822  002DA8  6E4A               	movwf	?i2___fttol+3,c
  5823  002DAA  0012               	return	
  5824  002DAC                     i2l6872:
  5825  002DAC  90D8               	bcf	status,0,c
  5826  002DAE  3651               	rlcf	i2___fttol@lval,f,c
  5827  002DB0  3652               	rlcf	i2___fttol@lval+1,f,c
  5828  002DB2  3653               	rlcf	i2___fttol@lval+2,f,c
  5829  002DB4  3654               	rlcf	i2___fttol@lval+3,f,c
  5830  002DB6  0655               	decf	i2___fttol@exp1,f,c
  5831  002DB8                     i2l6874:
  5832  002DB8  5055               	movf	i2___fttol@exp1,w,c
  5833  002DBA  A4D8               	btfss	status,2,c
  5834  002DBC  D7F7               	goto	i2l6872
  5835  002DBE                     i2l6876:
  5836  002DBE  5050               	movf	i2___fttol@sign1,w,c
  5837  002DC0  B4D8               	btfsc	status,2,c
  5838  002DC2  D008               	goto	i2l6880
  5839  002DC4  1E54               	comf	i2___fttol@lval+3,f,c
  5840  002DC6  1E53               	comf	i2___fttol@lval+2,f,c
  5841  002DC8  1E52               	comf	i2___fttol@lval+1,f,c
  5842  002DCA  6C51               	negf	i2___fttol@lval,c
  5843  002DCC  0E00               	movlw	0
  5844  002DCE  2252               	addwfc	i2___fttol@lval+1,f,c
  5845  002DD0  2253               	addwfc	i2___fttol@lval+2,f,c
  5846  002DD2  2254               	addwfc	i2___fttol@lval+3,f,c
  5847  002DD4                     i2l6880:
  5848  002DD4  C051  F047         	movff	i2___fttol@lval,?i2___fttol
  5849  002DD8  C052  F048         	movff	i2___fttol@lval+1,?i2___fttol+1
  5850  002DDC  C053  F049         	movff	i2___fttol@lval+2,?i2___fttol+2
  5851  002DE0  C054  F04A         	movff	i2___fttol@lval+3,?i2___fttol+3
  5852  002DE4  0012               	return	
  5853  002DE6                     __end_ofi2___fttol:
  5854                           	opt stack 0
  5855                           pclatu	equ	0xFFB
  5856                           pclath	equ	0xFFA
  5857                           tblptru	equ	0xFF8
  5858                           tblptrh	equ	0xFF7
  5859                           tblptrl	equ	0xFF6
  5860                           tablat	equ	0xFF5
  5861                           prodh	equ	0xFF4
  5862                           prodl	equ	0xFF3
  5863                           intcon	equ	0xFF2
  5864                           intcon3	equ	0xFF0
  5865                           postinc0	equ	0xFEE
  5866                           fsr0h	equ	0xFEA
  5867                           fsr0l	equ	0xFE9
  5868                           wreg	equ	0xFE8
  5869                           postdec1	equ	0xFE5
  5870                           fsr1h	equ	0xFE2
  5871                           fsr1l	equ	0xFE1
  5872                           postinc2	equ	0xFDE
  5873                           postdec2	equ	0xFDD
  5874                           fsr2h	equ	0xFDA
  5875                           fsr2l	equ	0xFD9
  5876                           status	equ	0xFD8
  5877                           
  5878 ;; *************** function i2___ftneg *****************
  5879 ;; Defined at:
  5880 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  f1              3   48[COMRAM] float 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  3   48[COMRAM] float 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5894 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;Total ram usage:        3 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_service
  5904 ;;		_printf
  5905 ;;		i2_startT0
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text21
  5910  003896                     __ptext21:
  5911                           	opt stack 0
  5912  003896                     i2___ftneg:
  5913                           	opt stack 25
  5914                           
  5915                           ;incstack = 0
  5916  003896  5031               	movf	i2___ftneg@f1,w,c
  5917  003898  1032               	iorwf	i2___ftneg@f1+1,w,c
  5918  00389A  1033               	iorwf	i2___ftneg@f1+2,w,c
  5919  00389C  B4D8               	btfsc	status,2,c
  5920  00389E  D006               	goto	i2l791
  5921  0038A0  0E00               	movlw	0
  5922  0038A2  1A31               	xorwf	i2___ftneg@f1,f,c
  5923  0038A4  0E00               	movlw	0
  5924  0038A6  1A32               	xorwf	i2___ftneg@f1+1,f,c
  5925  0038A8  0E80               	movlw	128
  5926  0038AA  1A33               	xorwf	i2___ftneg@f1+2,f,c
  5927  0038AC                     i2l791:
  5928  0038AC  C031  F031         	movff	i2___ftneg@f1,?i2___ftneg
  5929  0038B0  C032  F032         	movff	i2___ftneg@f1+1,?i2___ftneg+1
  5930  0038B4  C033  F033         	movff	i2___ftneg@f1+2,?i2___ftneg+2
  5931  0038B8  0012               	return		;funcret
  5932  0038BA                     __end_ofi2___ftneg:
  5933                           	opt stack 0
  5934                           pclatu	equ	0xFFB
  5935                           pclath	equ	0xFFA
  5936                           tblptru	equ	0xFF8
  5937                           tblptrh	equ	0xFF7
  5938                           tblptrl	equ	0xFF6
  5939                           tablat	equ	0xFF5
  5940                           prodh	equ	0xFF4
  5941                           prodl	equ	0xFF3
  5942                           intcon	equ	0xFF2
  5943                           intcon3	equ	0xFF0
  5944                           postinc0	equ	0xFEE
  5945                           fsr0h	equ	0xFEA
  5946                           fsr0l	equ	0xFE9
  5947                           wreg	equ	0xFE8
  5948                           postdec1	equ	0xFE5
  5949                           fsr1h	equ	0xFE2
  5950                           fsr1l	equ	0xFE1
  5951                           postinc2	equ	0xFDE
  5952                           postdec2	equ	0xFDD
  5953                           fsr2h	equ	0xFDA
  5954                           fsr2l	equ	0xFD9
  5955                           status	equ	0xFD8
  5956                           
  5957 ;; *************** function _scale *****************
  5958 ;; Defined at:
  5959 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  scl             1    wreg     char 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  scl             1   54[COMRAM] char 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  3   48[COMRAM] char 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5973 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;Total ram usage:        7 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    2
  5980 ;; This function calls:
  5981 ;;		___awdiv
  5982 ;;		___awmod
  5983 ;;		___wmul
  5984 ;;		i2___ftmul
  5985 ;; This function is called by:
  5986 ;;		_printf
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text22
  5991  00178C                     __ptext22:
  5992                           	opt stack 0
  5993  00178C                     _scale:
  5994                           	opt stack 23
  5995                           
  5996                           ;incstack = 0
  5997                           ;scale@scl stored from wreg
  5998  00178C  6E37               	movwf	scale@scl,c
  5999                           
  6000                           ;doprnt.c: 428: if(scl < 0) {
  6001  00178E  AE37               	btfss	scale@scl,7,c
  6002  001790  D0FB               	goto	i2l6334
  6003                           
  6004                           ;doprnt.c: 429: scl = -scl;
  6005  001792  6C37               	negf	scale@scl,c
  6006                           
  6007                           ;doprnt.c: 430: if(scl>=110)
  6008  001794  5037               	movf	scale@scl,w,c
  6009  001796  0A80               	xorlw	128
  6010  001798  0F12               	addlw	-238
  6011  00179A  A0D8               	btfss	status,0,c
  6012  00179C  D091               	goto	i2l6324
  6013                           
  6014                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6015  00179E  0E00               	movlw	0
  6016  0017A0  6E12               	movwf	___wmul@multiplicand+1,c
  6017  0017A2  0E03               	movlw	3
  6018  0017A4  6E11               	movwf	___wmul@multiplicand,c
  6019  0017A6  0E00               	movlw	0
  6020  0017A8  6E0A               	movwf	___awdiv@divisor+1,c
  6021  0017AA  0E0A               	movlw	10
  6022  0017AC  6E09               	movwf	___awdiv@divisor,c
  6023  0017AE  0E00               	movlw	0
  6024  0017B0  6E04               	movwf	___awmod@divisor+1,c
  6025  0017B2  0E64               	movlw	100
  6026  0017B4  6E03               	movwf	___awmod@divisor,c
  6027  0017B6  5037               	movf	scale@scl,w,c
  6028  0017B8  6E01               	movwf	___awmod@dividend,c
  6029  0017BA  6A02               	clrf	___awmod@dividend+1,c
  6030  0017BC  BE01               	btfsc	___awmod@dividend,7,c
  6031  0017BE  0602               	decf	___awmod@dividend+1,f,c
  6032  0017C0  EC13  F01B         	call	___awmod	;wreg free
  6033  0017C4  C001  F007         	movff	?___awmod,___awdiv@dividend
  6034  0017C8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  6035  0017CC  ECDC  F019         	call	___awdiv	;wreg free
  6036  0017D0  0E09               	movlw	9
  6037  0017D2  2407               	addwf	?___awdiv,w,c
  6038  0017D4  6E0F               	movwf	___wmul@multiplier,c
  6039  0017D6  0E00               	movlw	0
  6040  0017D8  2008               	addwfc	?___awdiv+1,w,c
  6041  0017DA  6E10               	movwf	___wmul@multiplier+1,c
  6042  0017DC  EC38  F01C         	call	___wmul	;wreg free
  6043  0017E0  0E29               	movlw	low __npowers_
  6044  0017E2  240F               	addwf	?___wmul,w,c
  6045  0017E4  6EF6               	movwf	tblptrl,c
  6046  0017E6  0E10               	movlw	high __npowers_
  6047  0017E8  2010               	addwfc	?___wmul+1,w,c
  6048  0017EA  6EF7               	movwf	tblptrh,c
  6049  0017EC                     	if	0	;There are less than 3 active tblptr bytes
  6050  0017EC                     	endif
  6051  0017EC  0009               	tblrd		*+
  6052  0017EE  CFF5 F025          	movff	tablat,i2___ftmul@f2
  6053  0017F2  0009               	tblrd		*+
  6054  0017F4  CFF5 F026          	movff	tablat,i2___ftmul@f2+1
  6055  0017F8  000A               	tblrd		*-
  6056  0017FA  CFF5 F027          	movff	tablat,i2___ftmul@f2+2
  6057  0017FE  0E00               	movlw	0
  6058  001800  6E0A               	movwf	___awdiv@divisor+1,c
  6059  001802  0E64               	movlw	100
  6060  001804  6E09               	movwf	___awdiv@divisor,c
  6061  001806  5037               	movf	scale@scl,w,c
  6062  001808  6E07               	movwf	___awdiv@dividend,c
  6063  00180A  6A08               	clrf	___awdiv@dividend+1,c
  6064  00180C  BE07               	btfsc	___awdiv@dividend,7,c
  6065  00180E  0608               	decf	___awdiv@dividend+1,f,c
  6066  001810  ECDC  F019         	call	___awdiv	;wreg free
  6067  001814  0E12               	movlw	18
  6068  001816  2407               	addwf	?___awdiv,w,c
  6069  001818  6E0F               	movwf	___wmul@multiplier,c
  6070  00181A  0E00               	movlw	0
  6071  00181C  2008               	addwfc	?___awdiv+1,w,c
  6072  00181E  6E10               	movwf	___wmul@multiplier+1,c
  6073  001820  0E00               	movlw	0
  6074  001822  6E12               	movwf	___wmul@multiplicand+1,c
  6075  001824  0E03               	movlw	3
  6076  001826  6E11               	movwf	___wmul@multiplicand,c
  6077  001828  EC38  F01C         	call	___wmul	;wreg free
  6078  00182C  0E29               	movlw	low __npowers_
  6079  00182E  240F               	addwf	?___wmul,w,c
  6080  001830  6EF6               	movwf	tblptrl,c
  6081  001832  0E10               	movlw	high __npowers_
  6082  001834  2010               	addwfc	?___wmul+1,w,c
  6083  001836  6EF7               	movwf	tblptrh,c
  6084  001838                     	if	0	;There are less than 3 active tblptr bytes
  6085  001838                     	endif
  6086  001838  0009               	tblrd		*+
  6087  00183A  CFF5 F022          	movff	tablat,i2___ftmul@f1
  6088  00183E  0009               	tblrd		*+
  6089  001840  CFF5 F023          	movff	tablat,i2___ftmul@f1+1
  6090  001844  000A               	tblrd		*-
  6091  001846  CFF5 F024          	movff	tablat,i2___ftmul@f1+2
  6092  00184A  ECF3  F016         	call	i2___ftmul	;wreg free
  6093  00184E  C022  F034         	movff	?i2___ftmul,_scale$1207
  6094  001852  C023  F035         	movff	?i2___ftmul+1,_scale$1207+1
  6095  001856  C024  F036         	movff	?i2___ftmul+2,_scale$1207+2
  6096                           
  6097                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6098  00185A  C034  F022         	movff	_scale$1207,i2___ftmul@f1
  6099  00185E  C035  F023         	movff	_scale$1207+1,i2___ftmul@f1+1
  6100  001862  C036  F024         	movff	_scale$1207+2,i2___ftmul@f1+2
  6101  001866  0E00               	movlw	0
  6102  001868  6E12               	movwf	___wmul@multiplicand+1,c
  6103  00186A  0E03               	movlw	3
  6104  00186C  6E11               	movwf	___wmul@multiplicand,c
  6105  00186E  0E00               	movlw	0
  6106  001870  6E04               	movwf	___awmod@divisor+1,c
  6107  001872  0E0A               	movlw	10
  6108  001874  6E03               	movwf	___awmod@divisor,c
  6109  001876  5037               	movf	scale@scl,w,c
  6110  001878  6E01               	movwf	___awmod@dividend,c
  6111  00187A  6A02               	clrf	___awmod@dividend+1,c
  6112  00187C  BE01               	btfsc	___awmod@dividend,7,c
  6113  00187E  0602               	decf	___awmod@dividend+1,f,c
  6114  001880  EC13  F01B         	call	___awmod	;wreg free
  6115  001884  C001  F00F         	movff	?___awmod,___wmul@multiplier
  6116  001888  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  6117  00188C  EC38  F01C         	call	___wmul	;wreg free
  6118  001890  0E29               	movlw	low __npowers_
  6119  001892  240F               	addwf	?___wmul,w,c
  6120  001894  6EF6               	movwf	tblptrl,c
  6121  001896  0E10               	movlw	high __npowers_
  6122  001898  2010               	addwfc	?___wmul+1,w,c
  6123  00189A  6EF7               	movwf	tblptrh,c
  6124  00189C                     	if	0	;There are less than 3 active tblptr bytes
  6125  00189C                     	endif
  6126  00189C  0009               	tblrd		*+
  6127  00189E  CFF5 F025          	movff	tablat,i2___ftmul@f2
  6128  0018A2  0009               	tblrd		*+
  6129  0018A4  CFF5 F026          	movff	tablat,i2___ftmul@f2+1
  6130  0018A8  000A               	tblrd		*-
  6131  0018AA  CFF5 F027          	movff	tablat,i2___ftmul@f2+2
  6132  0018AE  ECF3  F016         	call	i2___ftmul	;wreg free
  6133  0018B2  C022  F031         	movff	?i2___ftmul,?_scale
  6134  0018B6  C023  F032         	movff	?i2___ftmul+1,?_scale+1
  6135  0018BA  C024  F033         	movff	?i2___ftmul+2,?_scale+2
  6136  0018BE  0012               	return	
  6137  0018C0                     i2l6324:
  6138                           
  6139                           ;doprnt.c: 432: else if(scl > 10)
  6140  0018C0  5037               	movf	scale@scl,w,c
  6141  0018C2  0A80               	xorlw	128
  6142  0018C4  0F75               	addlw	-139
  6143  0018C6  A0D8               	btfss	status,0,c
  6144  0018C8  D04D               	goto	i2l6330
  6145                           
  6146                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6147  0018CA  0E00               	movlw	0
  6148  0018CC  6E0A               	movwf	___awdiv@divisor+1,c
  6149  0018CE  0E0A               	movlw	10
  6150  0018D0  6E09               	movwf	___awdiv@divisor,c
  6151  0018D2  5037               	movf	scale@scl,w,c
  6152  0018D4  6E07               	movwf	___awdiv@dividend,c
  6153  0018D6  6A08               	clrf	___awdiv@dividend+1,c
  6154  0018D8  BE07               	btfsc	___awdiv@dividend,7,c
  6155  0018DA  0608               	decf	___awdiv@dividend+1,f,c
  6156  0018DC  ECDC  F019         	call	___awdiv	;wreg free
  6157  0018E0  0E09               	movlw	9
  6158  0018E2  2407               	addwf	?___awdiv,w,c
  6159  0018E4  6E0F               	movwf	___wmul@multiplier,c
  6160  0018E6  0E00               	movlw	0
  6161  0018E8  2008               	addwfc	?___awdiv+1,w,c
  6162  0018EA  6E10               	movwf	___wmul@multiplier+1,c
  6163  0018EC  0E00               	movlw	0
  6164  0018EE  6E12               	movwf	___wmul@multiplicand+1,c
  6165  0018F0  0E03               	movlw	3
  6166  0018F2  6E11               	movwf	___wmul@multiplicand,c
  6167  0018F4  EC38  F01C         	call	___wmul	;wreg free
  6168  0018F8  0E29               	movlw	low __npowers_
  6169  0018FA  240F               	addwf	?___wmul,w,c
  6170  0018FC  6EF6               	movwf	tblptrl,c
  6171  0018FE  0E10               	movlw	high __npowers_
  6172  001900  2010               	addwfc	?___wmul+1,w,c
  6173  001902  6EF7               	movwf	tblptrh,c
  6174  001904                     	if	0	;There are less than 3 active tblptr bytes
  6175  001904                     	endif
  6176  001904  0009               	tblrd		*+
  6177  001906  CFF5 F022          	movff	tablat,i2___ftmul@f1
  6178  00190A  0009               	tblrd		*+
  6179  00190C  CFF5 F023          	movff	tablat,i2___ftmul@f1+1
  6180  001910  000A               	tblrd		*-
  6181  001912  CFF5 F024          	movff	tablat,i2___ftmul@f1+2
  6182  001916  0E00               	movlw	0
  6183  001918  6E12               	movwf	___wmul@multiplicand+1,c
  6184  00191A  0E03               	movlw	3
  6185  00191C  6E11               	movwf	___wmul@multiplicand,c
  6186  00191E  0E00               	movlw	0
  6187  001920  6E04               	movwf	___awmod@divisor+1,c
  6188  001922  0E0A               	movlw	10
  6189  001924  6E03               	movwf	___awmod@divisor,c
  6190  001926  5037               	movf	scale@scl,w,c
  6191  001928  6E01               	movwf	___awmod@dividend,c
  6192  00192A  6A02               	clrf	___awmod@dividend+1,c
  6193  00192C  BE01               	btfsc	___awmod@dividend,7,c
  6194  00192E  0602               	decf	___awmod@dividend+1,f,c
  6195  001930  EC13  F01B         	call	___awmod	;wreg free
  6196  001934  C001  F00F         	movff	?___awmod,___wmul@multiplier
  6197  001938  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  6198  00193C  EC38  F01C         	call	___wmul	;wreg free
  6199  001940  0E29               	movlw	low __npowers_
  6200  001942  240F               	addwf	?___wmul,w,c
  6201  001944  6EF6               	movwf	tblptrl,c
  6202  001946  0E10               	movlw	high __npowers_
  6203  001948  2010               	addwfc	?___wmul+1,w,c
  6204  00194A  6EF7               	movwf	tblptrh,c
  6205  00194C                     	if	0	;There are less than 3 active tblptr bytes
  6206  00194C                     	endif
  6207  00194C  0009               	tblrd		*+
  6208  00194E  CFF5 F025          	movff	tablat,i2___ftmul@f2
  6209  001952  0009               	tblrd		*+
  6210  001954  CFF5 F026          	movff	tablat,i2___ftmul@f2+1
  6211  001958  000A               	tblrd		*-
  6212  00195A  CFF5 F027          	movff	tablat,i2___ftmul@f2+2
  6213  00195E  ECF3  F016         	call	i2___ftmul	;wreg free
  6214  001962  D7A7               	goto	L2
  6215  001964                     i2l6330:
  6216                           
  6217                           ;doprnt.c: 434: return _npowers_[scl];
  6218  001964  5037               	movf	scale@scl,w,c
  6219  001966  0D03               	mullw	3
  6220  001968  0E29               	movlw	low __npowers_
  6221  00196A  24F3               	addwf	prodl,w,c
  6222  00196C  6EF6               	movwf	tblptrl,c
  6223  00196E  0E10               	movlw	high __npowers_
  6224  001970  20F4               	addwfc	prodh,w,c
  6225  001972  6EF7               	movwf	tblptrh,c
  6226  001974                     	if	0	;There are less than 3 active tblptr bytes
  6227  001974                     	endif
  6228  001974  0009               	tblrd		*+
  6229  001976  CFF5 F031          	movff	tablat,?_scale
  6230  00197A  0009               	tblrd		*+
  6231  00197C  CFF5 F032          	movff	tablat,?_scale+1
  6232  001980  000A               	tblrd		*-
  6233  001982  CFF5 F033          	movff	tablat,?_scale+2
  6234  001986  0012               	return	
  6235  001988                     i2l6334:
  6236                           
  6237                           ;doprnt.c: 435: }
  6238                           ;doprnt.c: 436: if(scl>=110)
  6239  001988  5037               	movf	scale@scl,w,c
  6240  00198A  0A80               	xorlw	128
  6241  00198C  0F12               	addlw	-238
  6242  00198E  A0D8               	btfss	status,0,c
  6243  001990  D091               	goto	i2l6342
  6244                           
  6245                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6246  001992  0E00               	movlw	0
  6247  001994  6E12               	movwf	___wmul@multiplicand+1,c
  6248  001996  0E03               	movlw	3
  6249  001998  6E11               	movwf	___wmul@multiplicand,c
  6250  00199A  0E00               	movlw	0
  6251  00199C  6E0A               	movwf	___awdiv@divisor+1,c
  6252  00199E  0E0A               	movlw	10
  6253  0019A0  6E09               	movwf	___awdiv@divisor,c
  6254  0019A2  0E00               	movlw	0
  6255  0019A4  6E04               	movwf	___awmod@divisor+1,c
  6256  0019A6  0E64               	movlw	100
  6257  0019A8  6E03               	movwf	___awmod@divisor,c
  6258  0019AA  5037               	movf	scale@scl,w,c
  6259  0019AC  6E01               	movwf	___awmod@dividend,c
  6260  0019AE  6A02               	clrf	___awmod@dividend+1,c
  6261  0019B0  BE01               	btfsc	___awmod@dividend,7,c
  6262  0019B2  0602               	decf	___awmod@dividend+1,f,c
  6263  0019B4  EC13  F01B         	call	___awmod	;wreg free
  6264  0019B8  C001  F007         	movff	?___awmod,___awdiv@dividend
  6265  0019BC  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  6266  0019C0  ECDC  F019         	call	___awdiv	;wreg free
  6267  0019C4  0E09               	movlw	9
  6268  0019C6  2407               	addwf	?___awdiv,w,c
  6269  0019C8  6E0F               	movwf	___wmul@multiplier,c
  6270  0019CA  0E00               	movlw	0
  6271  0019CC  2008               	addwfc	?___awdiv+1,w,c
  6272  0019CE  6E10               	movwf	___wmul@multiplier+1,c
  6273  0019D0  EC38  F01C         	call	___wmul	;wreg free
  6274  0019D4  0E50               	movlw	low __powers_
  6275  0019D6  240F               	addwf	?___wmul,w,c
  6276  0019D8  6EF6               	movwf	tblptrl,c
  6277  0019DA  0E10               	movlw	high __powers_
  6278  0019DC  2010               	addwfc	?___wmul+1,w,c
  6279  0019DE  6EF7               	movwf	tblptrh,c
  6280  0019E0                     	if	0	;There are less than 3 active tblptr bytes
  6281  0019E0                     	endif
  6282  0019E0  0009               	tblrd		*+
  6283  0019E2  CFF5 F025          	movff	tablat,i2___ftmul@f2
  6284  0019E6  0009               	tblrd		*+
  6285  0019E8  CFF5 F026          	movff	tablat,i2___ftmul@f2+1
  6286  0019EC  000A               	tblrd		*-
  6287  0019EE  CFF5 F027          	movff	tablat,i2___ftmul@f2+2
  6288  0019F2  0E00               	movlw	0
  6289  0019F4  6E0A               	movwf	___awdiv@divisor+1,c
  6290  0019F6  0E64               	movlw	100
  6291  0019F8  6E09               	movwf	___awdiv@divisor,c
  6292  0019FA  5037               	movf	scale@scl,w,c
  6293  0019FC  6E07               	movwf	___awdiv@dividend,c
  6294  0019FE  6A08               	clrf	___awdiv@dividend+1,c
  6295  001A00  BE07               	btfsc	___awdiv@dividend,7,c
  6296  001A02  0608               	decf	___awdiv@dividend+1,f,c
  6297  001A04  ECDC  F019         	call	___awdiv	;wreg free
  6298  001A08  0E12               	movlw	18
  6299  001A0A  2407               	addwf	?___awdiv,w,c
  6300  001A0C  6E0F               	movwf	___wmul@multiplier,c
  6301  001A0E  0E00               	movlw	0
  6302  001A10  2008               	addwfc	?___awdiv+1,w,c
  6303  001A12  6E10               	movwf	___wmul@multiplier+1,c
  6304  001A14  0E00               	movlw	0
  6305  001A16  6E12               	movwf	___wmul@multiplicand+1,c
  6306  001A18  0E03               	movlw	3
  6307  001A1A  6E11               	movwf	___wmul@multiplicand,c
  6308  001A1C  EC38  F01C         	call	___wmul	;wreg free
  6309  001A20  0E50               	movlw	low __powers_
  6310  001A22  240F               	addwf	?___wmul,w,c
  6311  001A24  6EF6               	movwf	tblptrl,c
  6312  001A26  0E10               	movlw	high __powers_
  6313  001A28  2010               	addwfc	?___wmul+1,w,c
  6314  001A2A  6EF7               	movwf	tblptrh,c
  6315  001A2C                     	if	0	;There are less than 3 active tblptr bytes
  6316  001A2C                     	endif
  6317  001A2C  0009               	tblrd		*+
  6318  001A2E  CFF5 F022          	movff	tablat,i2___ftmul@f1
  6319  001A32  0009               	tblrd		*+
  6320  001A34  CFF5 F023          	movff	tablat,i2___ftmul@f1+1
  6321  001A38  000A               	tblrd		*-
  6322  001A3A  CFF5 F024          	movff	tablat,i2___ftmul@f1+2
  6323  001A3E  ECF3  F016         	call	i2___ftmul	;wreg free
  6324  001A42  C022  F034         	movff	?i2___ftmul,_scale$1207
  6325  001A46  C023  F035         	movff	?i2___ftmul+1,_scale$1207+1
  6326  001A4A  C024  F036         	movff	?i2___ftmul+2,_scale$1207+2
  6327                           
  6328                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6329  001A4E  C034  F022         	movff	_scale$1207,i2___ftmul@f1
  6330  001A52  C035  F023         	movff	_scale$1207+1,i2___ftmul@f1+1
  6331  001A56  C036  F024         	movff	_scale$1207+2,i2___ftmul@f1+2
  6332  001A5A  0E00               	movlw	0
  6333  001A5C  6E12               	movwf	___wmul@multiplicand+1,c
  6334  001A5E  0E03               	movlw	3
  6335  001A60  6E11               	movwf	___wmul@multiplicand,c
  6336  001A62  0E00               	movlw	0
  6337  001A64  6E04               	movwf	___awmod@divisor+1,c
  6338  001A66  0E0A               	movlw	10
  6339  001A68  6E03               	movwf	___awmod@divisor,c
  6340  001A6A  5037               	movf	scale@scl,w,c
  6341  001A6C  6E01               	movwf	___awmod@dividend,c
  6342  001A6E  6A02               	clrf	___awmod@dividend+1,c
  6343  001A70  BE01               	btfsc	___awmod@dividend,7,c
  6344  001A72  0602               	decf	___awmod@dividend+1,f,c
  6345  001A74  EC13  F01B         	call	___awmod	;wreg free
  6346  001A78  C001  F00F         	movff	?___awmod,___wmul@multiplier
  6347  001A7C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  6348  001A80  EC38  F01C         	call	___wmul	;wreg free
  6349  001A84  0E50               	movlw	low __powers_
  6350  001A86  240F               	addwf	?___wmul,w,c
  6351  001A88  6EF6               	movwf	tblptrl,c
  6352  001A8A  0E10               	movlw	high __powers_
  6353  001A8C  2010               	addwfc	?___wmul+1,w,c
  6354  001A8E  6EF7               	movwf	tblptrh,c
  6355  001A90                     	if	0	;There are less than 3 active tblptr bytes
  6356  001A90                     	endif
  6357  001A90  0009               	tblrd		*+
  6358  001A92  CFF5 F025          	movff	tablat,i2___ftmul@f2
  6359  001A96  0009               	tblrd		*+
  6360  001A98  CFF5 F026          	movff	tablat,i2___ftmul@f2+1
  6361  001A9C  000A               	tblrd		*-
  6362  001A9E  CFF5 F027          	movff	tablat,i2___ftmul@f2+2
  6363  001AA2  ECF3  F016         	call	i2___ftmul	;wreg free
  6364  001AA6  C022  F031         	movff	?i2___ftmul,?_scale
  6365  001AAA  C023  F032         	movff	?i2___ftmul+1,?_scale+1
  6366  001AAE  C024  F033         	movff	?i2___ftmul+2,?_scale+2
  6367  001AB2  0012               	return	
  6368  001AB4                     i2l6342:
  6369                           
  6370                           ;doprnt.c: 438: else if(scl > 10)
  6371  001AB4  5037               	movf	scale@scl,w,c
  6372  001AB6  0A80               	xorlw	128
  6373  001AB8  0F75               	addlw	-139
  6374  001ABA  A0D8               	btfss	status,0,c
  6375  001ABC  D04D               	goto	i2l6348
  6376                           
  6377                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6378  001ABE  0E00               	movlw	0
  6379  001AC0  6E0A               	movwf	___awdiv@divisor+1,c
  6380  001AC2  0E0A               	movlw	10
  6381  001AC4  6E09               	movwf	___awdiv@divisor,c
  6382  001AC6  5037               	movf	scale@scl,w,c
  6383  001AC8  6E07               	movwf	___awdiv@dividend,c
  6384  001ACA  6A08               	clrf	___awdiv@dividend+1,c
  6385  001ACC  BE07               	btfsc	___awdiv@dividend,7,c
  6386  001ACE  0608               	decf	___awdiv@dividend+1,f,c
  6387  001AD0  ECDC  F019         	call	___awdiv	;wreg free
  6388  001AD4  0E09               	movlw	9
  6389  001AD6  2407               	addwf	?___awdiv,w,c
  6390  001AD8  6E0F               	movwf	___wmul@multiplier,c
  6391  001ADA  0E00               	movlw	0
  6392  001ADC  2008               	addwfc	?___awdiv+1,w,c
  6393  001ADE  6E10               	movwf	___wmul@multiplier+1,c
  6394  001AE0  0E00               	movlw	0
  6395  001AE2  6E12               	movwf	___wmul@multiplicand+1,c
  6396  001AE4  0E03               	movlw	3
  6397  001AE6  6E11               	movwf	___wmul@multiplicand,c
  6398  001AE8  EC38  F01C         	call	___wmul	;wreg free
  6399  001AEC  0E50               	movlw	low __powers_
  6400  001AEE  240F               	addwf	?___wmul,w,c
  6401  001AF0  6EF6               	movwf	tblptrl,c
  6402  001AF2  0E10               	movlw	high __powers_
  6403  001AF4  2010               	addwfc	?___wmul+1,w,c
  6404  001AF6  6EF7               	movwf	tblptrh,c
  6405  001AF8                     	if	0	;There are less than 3 active tblptr bytes
  6406  001AF8                     	endif
  6407  001AF8  0009               	tblrd		*+
  6408  001AFA  CFF5 F022          	movff	tablat,i2___ftmul@f1
  6409  001AFE  0009               	tblrd		*+
  6410  001B00  CFF5 F023          	movff	tablat,i2___ftmul@f1+1
  6411  001B04  000A               	tblrd		*-
  6412  001B06  CFF5 F024          	movff	tablat,i2___ftmul@f1+2
  6413  001B0A  0E00               	movlw	0
  6414  001B0C  6E12               	movwf	___wmul@multiplicand+1,c
  6415  001B0E  0E03               	movlw	3
  6416  001B10  6E11               	movwf	___wmul@multiplicand,c
  6417  001B12  0E00               	movlw	0
  6418  001B14  6E04               	movwf	___awmod@divisor+1,c
  6419  001B16  0E0A               	movlw	10
  6420  001B18  6E03               	movwf	___awmod@divisor,c
  6421  001B1A  5037               	movf	scale@scl,w,c
  6422  001B1C  6E01               	movwf	___awmod@dividend,c
  6423  001B1E  6A02               	clrf	___awmod@dividend+1,c
  6424  001B20  BE01               	btfsc	___awmod@dividend,7,c
  6425  001B22  0602               	decf	___awmod@dividend+1,f,c
  6426  001B24  EC13  F01B         	call	___awmod	;wreg free
  6427  001B28  C001  F00F         	movff	?___awmod,___wmul@multiplier
  6428  001B2C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  6429  001B30  EC38  F01C         	call	___wmul	;wreg free
  6430  001B34  0E50               	movlw	low __powers_
  6431  001B36  240F               	addwf	?___wmul,w,c
  6432  001B38  6EF6               	movwf	tblptrl,c
  6433  001B3A  0E10               	movlw	high __powers_
  6434  001B3C  2010               	addwfc	?___wmul+1,w,c
  6435  001B3E  6EF7               	movwf	tblptrh,c
  6436  001B40                     	if	0	;There are less than 3 active tblptr bytes
  6437  001B40                     	endif
  6438  001B40  0009               	tblrd		*+
  6439  001B42  CFF5 F025          	movff	tablat,i2___ftmul@f2
  6440  001B46  0009               	tblrd		*+
  6441  001B48  CFF5 F026          	movff	tablat,i2___ftmul@f2+1
  6442  001B4C  000A               	tblrd		*-
  6443  001B4E  CFF5 F027          	movff	tablat,i2___ftmul@f2+2
  6444  001B52  ECF3  F016         	call	i2___ftmul	;wreg free
  6445  001B56  D7A7               	goto	L3
  6446  001B58                     i2l6348:
  6447                           
  6448                           ;doprnt.c: 440: return _powers_[scl];
  6449  001B58  5037               	movf	scale@scl,w,c
  6450  001B5A  0D03               	mullw	3
  6451  001B5C  0E50               	movlw	low __powers_
  6452  001B5E  24F3               	addwf	prodl,w,c
  6453  001B60  6EF6               	movwf	tblptrl,c
  6454  001B62  0E10               	movlw	high __powers_
  6455  001B64  20F4               	addwfc	prodh,w,c
  6456  001B66  6EF7               	movwf	tblptrh,c
  6457  001B68                     	if	0	;There are less than 3 active tblptr bytes
  6458  001B68                     	endif
  6459  001B68  0009               	tblrd		*+
  6460  001B6A  CFF5 F031          	movff	tablat,?_scale
  6461  001B6E  0009               	tblrd		*+
  6462  001B70  CFF5 F032          	movff	tablat,?_scale+1
  6463  001B74  000A               	tblrd		*-
  6464  001B76  CFF5 F033          	movff	tablat,?_scale+2
  6465  001B7A  0012               	return	
  6466  001B7C                     __end_of_scale:
  6467                           	opt stack 0
  6468                           pclatu	equ	0xFFB
  6469                           pclath	equ	0xFFA
  6470                           tblptru	equ	0xFF8
  6471                           tblptrh	equ	0xFF7
  6472                           tblptrl	equ	0xFF6
  6473                           tablat	equ	0xFF5
  6474                           prodh	equ	0xFF4
  6475                           prodl	equ	0xFF3
  6476                           intcon	equ	0xFF2
  6477                           intcon3	equ	0xFF0
  6478                           postinc0	equ	0xFEE
  6479                           fsr0h	equ	0xFEA
  6480                           fsr0l	equ	0xFE9
  6481                           wreg	equ	0xFE8
  6482                           postdec1	equ	0xFE5
  6483                           fsr1h	equ	0xFE2
  6484                           fsr1l	equ	0xFE1
  6485                           postinc2	equ	0xFDE
  6486                           postdec2	equ	0xFDD
  6487                           fsr2h	equ	0xFDA
  6488                           fsr2l	equ	0xFD9
  6489                           status	equ	0xFD8
  6490                           
  6491 ;; *************** function _putch *****************
  6492 ;; Defined at:
  6493 ;;		line 35 in file "lcd.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  data            1    wreg     unsigned char 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  data            1    5[COMRAM] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;Total ram usage:        1 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    3
  6514 ;; This function calls:
  6515 ;;		_lcdNewline
  6516 ;;		i2_lcdNibble
  6517 ;; This function is called by:
  6518 ;;		_printf
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text23
  6523  0038DE                     __ptext23:
  6524                           	opt stack 0
  6525  0038DE                     _putch:
  6526                           	opt stack 22
  6527                           
  6528                           ;incstack = 0
  6529                           ;putch@data stored from wreg
  6530  0038DE  6E06               	movwf	putch@data,c
  6531                           
  6532                           ;lcd.c: 36: if(data == '\n')lcdNewline();
  6533  0038E0  0E0A               	movlw	10
  6534  0038E2  1806               	xorwf	putch@data,w,c
  6535  0038E4  A4D8               	btfss	status,2,c
  6536  0038E6  D003               	goto	i2l99
  6537  0038E8  EC89  F01C         	call	_lcdNewline	;wreg free
  6538  0038EC  0012               	return	
  6539  0038EE                     i2l99:
  6540                           
  6541                           ;lcd.c: 37: else
  6542                           ;lcd.c: 38: {
  6543                           ;lcd.c: 39: LATDbits.LATD2 = 1;
  6544  0038EE  848C               	bsf	3980,2,c	;volatile
  6545                           
  6546                           ;lcd.c: 40: _delay((unsigned long)((140)*(32000000/4000000.0)));
  6547  0038F0  0EE0               	movlw	224
  6548  0038F2                     i2u916_47:
  6549  0038F2  D000               	nop2	
  6550  0038F4  2EE8               	decfsz	wreg,f,c
  6551  0038F6  D7FD               	bra	i2u916_47
  6552                           
  6553                           ;lcd.c: 41: lcdNibble(data);
  6554  0038F8  5006               	movf	putch@data,w,c
  6555  0038FA  ECD8  F01A         	call	i2_lcdNibble
  6556  0038FE  0012               	return	
  6557  003900                     __end_of_putch:
  6558                           	opt stack 0
  6559                           pclatu	equ	0xFFB
  6560                           pclath	equ	0xFFA
  6561                           tblptru	equ	0xFF8
  6562                           tblptrh	equ	0xFF7
  6563                           tblptrl	equ	0xFF6
  6564                           tablat	equ	0xFF5
  6565                           prodh	equ	0xFF4
  6566                           prodl	equ	0xFF3
  6567                           intcon	equ	0xFF2
  6568                           intcon3	equ	0xFF0
  6569                           postinc0	equ	0xFEE
  6570                           fsr0h	equ	0xFEA
  6571                           fsr0l	equ	0xFE9
  6572                           wreg	equ	0xFE8
  6573                           postdec1	equ	0xFE5
  6574                           fsr1h	equ	0xFE2
  6575                           fsr1l	equ	0xFE1
  6576                           postinc2	equ	0xFDE
  6577                           postdec2	equ	0xFDD
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8
  6581                           
  6582 ;; *************** function _lcdNewline *****************
  6583 ;; Defined at:
  6584 ;;		line 78 in file "lcd.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      void 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;Total ram usage:        0 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    2
  6605 ;; This function calls:
  6606 ;;		i2_lcdInst
  6607 ;; This function is called by:
  6608 ;;		_putch
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text24
  6613  003912                     __ptext24:
  6614                           	opt stack 0
  6615  003912                     _lcdNewline:
  6616                           	opt stack 22
  6617                           
  6618                           ;lcd.c: 79: lcdInst(0b11000000);
  6619                           
  6620                           ;incstack = 0
  6621  003912  0EC0               	movlw	192
  6622  003914  EC5D  F01C         	call	i2_lcdInst
  6623  003918  0012               	return		;funcret
  6624  00391A                     __end_of_lcdNewline:
  6625                           	opt stack 0
  6626                           pclatu	equ	0xFFB
  6627                           pclath	equ	0xFFA
  6628                           tblptru	equ	0xFF8
  6629                           tblptrh	equ	0xFF7
  6630                           tblptrl	equ	0xFF6
  6631                           tablat	equ	0xFF5
  6632                           prodh	equ	0xFF4
  6633                           prodl	equ	0xFF3
  6634                           intcon	equ	0xFF2
  6635                           intcon3	equ	0xFF0
  6636                           postinc0	equ	0xFEE
  6637                           fsr0h	equ	0xFEA
  6638                           fsr0l	equ	0xFE9
  6639                           wreg	equ	0xFE8
  6640                           postdec1	equ	0xFE5
  6641                           fsr1h	equ	0xFE2
  6642                           fsr1l	equ	0xFE1
  6643                           postinc2	equ	0xFDE
  6644                           postdec2	equ	0xFDD
  6645                           fsr2h	equ	0xFDA
  6646                           fsr2l	equ	0xFD9
  6647                           status	equ	0xFD8
  6648                           
  6649 ;; *************** function _fround *****************
  6650 ;; Defined at:
  6651 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  prec            1    wreg     unsigned char 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  prec            1   57[COMRAM] unsigned char 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  3   48[COMRAM] unsigned char 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6665 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;Total ram usage:       10 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    2
  6672 ;; This function calls:
  6673 ;;		___awdiv
  6674 ;;		___awmod
  6675 ;;		___wmul
  6676 ;;		i2___ftmul
  6677 ;; This function is called by:
  6678 ;;		_printf
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text25
  6683  001DE4                     __ptext25:
  6684                           	opt stack 0
  6685  001DE4                     _fround:
  6686                           	opt stack 23
  6687                           
  6688                           ;incstack = 0
  6689                           ;fround@prec stored from wreg
  6690  001DE4  6E3A               	movwf	fround@prec,c
  6691                           
  6692                           ;doprnt.c: 413: if(prec>=110)
  6693  001DE6  0E6D               	movlw	109
  6694  001DE8  643A               	cpfsgt	fround@prec,c
  6695  001DEA  D09F               	goto	i2l6302
  6696                           
  6697                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6698  001DEC  0E00               	movlw	0
  6699  001DEE  6E12               	movwf	___wmul@multiplicand+1,c
  6700  001DF0  0E03               	movlw	3
  6701  001DF2  6E11               	movwf	___wmul@multiplicand,c
  6702  001DF4  0E00               	movlw	0
  6703  001DF6  6E0A               	movwf	___awdiv@divisor+1,c
  6704  001DF8  0E0A               	movlw	10
  6705  001DFA  6E09               	movwf	___awdiv@divisor,c
  6706  001DFC  0E00               	movlw	0
  6707  001DFE  6E04               	movwf	___awmod@divisor+1,c
  6708  001E00  0E64               	movlw	100
  6709  001E02  6E03               	movwf	___awmod@divisor,c
  6710  001E04  C03A  F001         	movff	fround@prec,___awmod@dividend
  6711  001E08  6A02               	clrf	___awmod@dividend+1,c
  6712  001E0A  EC13  F01B         	call	___awmod	;wreg free
  6713  001E0E  C001  F007         	movff	?___awmod,___awdiv@dividend
  6714  001E12  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  6715  001E16  ECDC  F019         	call	___awdiv	;wreg free
  6716  001E1A  0E09               	movlw	9
  6717  001E1C  2407               	addwf	?___awdiv,w,c
  6718  001E1E  6E0F               	movwf	___wmul@multiplier,c
  6719  001E20  0E00               	movlw	0
  6720  001E22  2008               	addwfc	?___awdiv+1,w,c
  6721  001E24  6E10               	movwf	___wmul@multiplier+1,c
  6722  001E26  EC38  F01C         	call	___wmul	;wreg free
  6723  001E2A  0E29               	movlw	low __npowers_
  6724  001E2C  240F               	addwf	?___wmul,w,c
  6725  001E2E  6EF6               	movwf	tblptrl,c
  6726  001E30  0E10               	movlw	high __npowers_
  6727  001E32  2010               	addwfc	?___wmul+1,w,c
  6728  001E34  6EF7               	movwf	tblptrh,c
  6729  001E36                     	if	0	;There are less than 3 active tblptr bytes
  6730  001E36                     	endif
  6731  001E36  0009               	tblrd		*+
  6732  001E38  CFF5 F025          	movff	tablat,i2___ftmul@f2
  6733  001E3C  0009               	tblrd		*+
  6734  001E3E  CFF5 F026          	movff	tablat,i2___ftmul@f2+1
  6735  001E42  000A               	tblrd		*-
  6736  001E44  CFF5 F027          	movff	tablat,i2___ftmul@f2+2
  6737  001E48  0E00               	movlw	0
  6738  001E4A  6E0A               	movwf	___awdiv@divisor+1,c
  6739  001E4C  0E64               	movlw	100
  6740  001E4E  6E09               	movwf	___awdiv@divisor,c
  6741  001E50  C03A  F007         	movff	fround@prec,___awdiv@dividend
  6742  001E54  6A08               	clrf	___awdiv@dividend+1,c
  6743  001E56  ECDC  F019         	call	___awdiv	;wreg free
  6744  001E5A  0E12               	movlw	18
  6745  001E5C  2407               	addwf	?___awdiv,w,c
  6746  001E5E  6E0F               	movwf	___wmul@multiplier,c
  6747  001E60  0E00               	movlw	0
  6748  001E62  2008               	addwfc	?___awdiv+1,w,c
  6749  001E64  6E10               	movwf	___wmul@multiplier+1,c
  6750  001E66  0E00               	movlw	0
  6751  001E68  6E12               	movwf	___wmul@multiplicand+1,c
  6752  001E6A  0E03               	movlw	3
  6753  001E6C  6E11               	movwf	___wmul@multiplicand,c
  6754  001E6E  EC38  F01C         	call	___wmul	;wreg free
  6755  001E72  0E29               	movlw	low __npowers_
  6756  001E74  240F               	addwf	?___wmul,w,c
  6757  001E76  6EF6               	movwf	tblptrl,c
  6758  001E78  0E10               	movlw	high __npowers_
  6759  001E7A  2010               	addwfc	?___wmul+1,w,c
  6760  001E7C  6EF7               	movwf	tblptrh,c
  6761  001E7E                     	if	0	;There are less than 3 active tblptr bytes
  6762  001E7E                     	endif
  6763  001E7E  0009               	tblrd		*+
  6764  001E80  CFF5 F022          	movff	tablat,i2___ftmul@f1
  6765  001E84  0009               	tblrd		*+
  6766  001E86  CFF5 F023          	movff	tablat,i2___ftmul@f1+1
  6767  001E8A  000A               	tblrd		*-
  6768  001E8C  CFF5 F024          	movff	tablat,i2___ftmul@f1+2
  6769  001E90  ECF3  F016         	call	i2___ftmul	;wreg free
  6770  001E94  C022  F037         	movff	?i2___ftmul,_fround$1205
  6771  001E98  C023  F038         	movff	?i2___ftmul+1,_fround$1205+1
  6772  001E9C  C024  F039         	movff	?i2___ftmul+2,_fround$1205+2
  6773                           
  6774                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6775  001EA0  0E00               	movlw	0
  6776  001EA2  6E12               	movwf	___wmul@multiplicand+1,c
  6777  001EA4  0E03               	movlw	3
  6778  001EA6  6E11               	movwf	___wmul@multiplicand,c
  6779  001EA8  0E00               	movlw	0
  6780  001EAA  6E04               	movwf	___awmod@divisor+1,c
  6781  001EAC  0E0A               	movlw	10
  6782  001EAE  6E03               	movwf	___awmod@divisor,c
  6783  001EB0  C03A  F001         	movff	fround@prec,___awmod@dividend
  6784  001EB4  6A02               	clrf	___awmod@dividend+1,c
  6785  001EB6  EC13  F01B         	call	___awmod	;wreg free
  6786  001EBA  C001  F00F         	movff	?___awmod,___wmul@multiplier
  6787  001EBE  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  6788  001EC2  EC38  F01C         	call	___wmul	;wreg free
  6789  001EC6  0E29               	movlw	low __npowers_
  6790  001EC8  240F               	addwf	?___wmul,w,c
  6791  001ECA  6EF6               	movwf	tblptrl,c
  6792  001ECC  0E10               	movlw	high __npowers_
  6793  001ECE  2010               	addwfc	?___wmul+1,w,c
  6794  001ED0  6EF7               	movwf	tblptrh,c
  6795  001ED2                     	if	0	;There are less than 3 active tblptr bytes
  6796  001ED2                     	endif
  6797  001ED2  0009               	tblrd		*+
  6798  001ED4  CFF5 F025          	movff	tablat,i2___ftmul@f2
  6799  001ED8  0009               	tblrd		*+
  6800  001EDA  CFF5 F026          	movff	tablat,i2___ftmul@f2+1
  6801  001EDE  000A               	tblrd		*-
  6802  001EE0  CFF5 F027          	movff	tablat,i2___ftmul@f2+2
  6803  001EE4  C037  F022         	movff	_fround$1205,i2___ftmul@f1
  6804  001EE8  C038  F023         	movff	_fround$1205+1,i2___ftmul@f1+1
  6805  001EEC  C039  F024         	movff	_fround$1205+2,i2___ftmul@f1+2
  6806  001EF0  ECF3  F016         	call	i2___ftmul	;wreg free
  6807  001EF4  C022  F034         	movff	?i2___ftmul,_fround$1206
  6808  001EF8  C023  F035         	movff	?i2___ftmul+1,_fround$1206+1
  6809  001EFC  C024  F036         	movff	?i2___ftmul+2,_fround$1206+2
  6810                           
  6811                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6812  001F00  C034  F022         	movff	_fround$1206,i2___ftmul@f1
  6813  001F04  C035  F023         	movff	_fround$1206+1,i2___ftmul@f1+1
  6814  001F08  C036  F024         	movff	_fround$1206+2,i2___ftmul@f1+2
  6815  001F0C  0E00               	movlw	0
  6816  001F0E  6E25               	movwf	i2___ftmul@f2,c
  6817  001F10  0E00               	movlw	0
  6818  001F12  6E26               	movwf	i2___ftmul@f2+1,c
  6819  001F14  0E3F               	movlw	63
  6820  001F16  6E27               	movwf	i2___ftmul@f2+2,c
  6821  001F18  ECF3  F016         	call	i2___ftmul	;wreg free
  6822  001F1C  C022  F031         	movff	?i2___ftmul,?_fround
  6823  001F20  C023  F032         	movff	?i2___ftmul+1,?_fround+1
  6824  001F24  C024  F033         	movff	?i2___ftmul+2,?_fround+2
  6825  001F28  0012               	return	
  6826  001F2A                     i2l6302:
  6827                           
  6828                           ;doprnt.c: 415: else if(prec > 10)
  6829  001F2A  0E0A               	movlw	10
  6830  001F2C  643A               	cpfsgt	fround@prec,c
  6831  001F2E  D05D               	goto	i2l6310
  6832                           
  6833                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6834  001F30  0E00               	movlw	0
  6835  001F32  6E12               	movwf	___wmul@multiplicand+1,c
  6836  001F34  0E03               	movlw	3
  6837  001F36  6E11               	movwf	___wmul@multiplicand,c
  6838  001F38  0E00               	movlw	0
  6839  001F3A  6E04               	movwf	___awmod@divisor+1,c
  6840  001F3C  0E0A               	movlw	10
  6841  001F3E  6E03               	movwf	___awmod@divisor,c
  6842  001F40  C03A  F001         	movff	fround@prec,___awmod@dividend
  6843  001F44  6A02               	clrf	___awmod@dividend+1,c
  6844  001F46  EC13  F01B         	call	___awmod	;wreg free
  6845  001F4A  C001  F00F         	movff	?___awmod,___wmul@multiplier
  6846  001F4E  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  6847  001F52  EC38  F01C         	call	___wmul	;wreg free
  6848  001F56  0E29               	movlw	low __npowers_
  6849  001F58  240F               	addwf	?___wmul,w,c
  6850  001F5A  6EF6               	movwf	tblptrl,c
  6851  001F5C  0E10               	movlw	high __npowers_
  6852  001F5E  2010               	addwfc	?___wmul+1,w,c
  6853  001F60  6EF7               	movwf	tblptrh,c
  6854  001F62                     	if	0	;There are less than 3 active tblptr bytes
  6855  001F62                     	endif
  6856  001F62  0009               	tblrd		*+
  6857  001F64  CFF5 F025          	movff	tablat,i2___ftmul@f2
  6858  001F68  0009               	tblrd		*+
  6859  001F6A  CFF5 F026          	movff	tablat,i2___ftmul@f2+1
  6860  001F6E  000A               	tblrd		*-
  6861  001F70  CFF5 F027          	movff	tablat,i2___ftmul@f2+2
  6862  001F74  0E00               	movlw	0
  6863  001F76  6E0A               	movwf	___awdiv@divisor+1,c
  6864  001F78  0E0A               	movlw	10
  6865  001F7A  6E09               	movwf	___awdiv@divisor,c
  6866  001F7C  C03A  F007         	movff	fround@prec,___awdiv@dividend
  6867  001F80  6A08               	clrf	___awdiv@dividend+1,c
  6868  001F82  ECDC  F019         	call	___awdiv	;wreg free
  6869  001F86  0E09               	movlw	9
  6870  001F88  2407               	addwf	?___awdiv,w,c
  6871  001F8A  6E0F               	movwf	___wmul@multiplier,c
  6872  001F8C  0E00               	movlw	0
  6873  001F8E  2008               	addwfc	?___awdiv+1,w,c
  6874  001F90  6E10               	movwf	___wmul@multiplier+1,c
  6875  001F92  0E00               	movlw	0
  6876  001F94  6E12               	movwf	___wmul@multiplicand+1,c
  6877  001F96  0E03               	movlw	3
  6878  001F98  6E11               	movwf	___wmul@multiplicand,c
  6879  001F9A  EC38  F01C         	call	___wmul	;wreg free
  6880  001F9E  0E29               	movlw	low __npowers_
  6881  001FA0  240F               	addwf	?___wmul,w,c
  6882  001FA2  6EF6               	movwf	tblptrl,c
  6883  001FA4  0E10               	movlw	high __npowers_
  6884  001FA6  2010               	addwfc	?___wmul+1,w,c
  6885  001FA8  6EF7               	movwf	tblptrh,c
  6886  001FAA                     	if	0	;There are less than 3 active tblptr bytes
  6887  001FAA                     	endif
  6888  001FAA  0009               	tblrd		*+
  6889  001FAC  CFF5 F022          	movff	tablat,i2___ftmul@f1
  6890  001FB0  0009               	tblrd		*+
  6891  001FB2  CFF5 F023          	movff	tablat,i2___ftmul@f1+1
  6892  001FB6  000A               	tblrd		*-
  6893  001FB8  CFF5 F024          	movff	tablat,i2___ftmul@f1+2
  6894  001FBC  ECF3  F016         	call	i2___ftmul	;wreg free
  6895  001FC0  C022  F037         	movff	?i2___ftmul,_fround$1205
  6896  001FC4  C023  F038         	movff	?i2___ftmul+1,_fround$1205+1
  6897  001FC8  C024  F039         	movff	?i2___ftmul+2,_fround$1205+2
  6898                           
  6899                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6900  001FCC  C037  F022         	movff	_fround$1205,i2___ftmul@f1
  6901  001FD0  C038  F023         	movff	_fround$1205+1,i2___ftmul@f1+1
  6902  001FD4  C039  F024         	movff	_fround$1205+2,i2___ftmul@f1+2
  6903  001FD8  0E00               	movlw	0
  6904  001FDA  6E25               	movwf	i2___ftmul@f2,c
  6905  001FDC  0E00               	movlw	0
  6906  001FDE  6E26               	movwf	i2___ftmul@f2+1,c
  6907  001FE0  0E3F               	movlw	63
  6908  001FE2  6E27               	movwf	i2___ftmul@f2+2,c
  6909  001FE4  ECF3  F016         	call	i2___ftmul	;wreg free
  6910  001FE8  D799               	goto	L4
  6911  001FEA                     i2l6310:
  6912                           
  6913                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6914  001FEA  503A               	movf	fround@prec,w,c
  6915  001FEC  0D03               	mullw	3
  6916  001FEE  0E29               	movlw	low __npowers_
  6917  001FF0  24F3               	addwf	prodl,w,c
  6918  001FF2  6EF6               	movwf	tblptrl,c
  6919  001FF4  0E10               	movlw	high __npowers_
  6920  001FF6  20F4               	addwfc	prodh,w,c
  6921  001FF8  6EF7               	movwf	tblptrh,c
  6922  001FFA                     	if	0	;There are less than 3 active tblptr bytes
  6923  001FFA                     	endif
  6924  001FFA  0009               	tblrd		*+
  6925  001FFC  CFF5 F022          	movff	tablat,i2___ftmul@f1
  6926  002000  0009               	tblrd		*+
  6927  002002  CFF5 F023          	movff	tablat,i2___ftmul@f1+1
  6928  002006  000A               	tblrd		*-
  6929  002008  CFF5 F024          	movff	tablat,i2___ftmul@f1+2
  6930  00200C  0E00               	movlw	0
  6931  00200E  6E25               	movwf	i2___ftmul@f2,c
  6932  002010  0E00               	movlw	0
  6933  002012  6E26               	movwf	i2___ftmul@f2+1,c
  6934  002014  0E3F               	movlw	63
  6935  002016  6E27               	movwf	i2___ftmul@f2+2,c
  6936  002018  ECF3  F016         	call	i2___ftmul	;wreg free
  6937  00201C  C022  F031         	movff	?i2___ftmul,?_fround
  6938  002020  C023  F032         	movff	?i2___ftmul+1,?_fround+1
  6939  002024  C024  F033         	movff	?i2___ftmul+2,?_fround+2
  6940  002028  0012               	return	
  6941  00202A                     __end_of_fround:
  6942                           	opt stack 0
  6943                           pclatu	equ	0xFFB
  6944                           pclath	equ	0xFFA
  6945                           tblptru	equ	0xFF8
  6946                           tblptrh	equ	0xFF7
  6947                           tblptrl	equ	0xFF6
  6948                           tablat	equ	0xFF5
  6949                           prodh	equ	0xFF4
  6950                           prodl	equ	0xFF3
  6951                           intcon	equ	0xFF2
  6952                           intcon3	equ	0xFF0
  6953                           postinc0	equ	0xFEE
  6954                           fsr0h	equ	0xFEA
  6955                           fsr0l	equ	0xFE9
  6956                           wreg	equ	0xFE8
  6957                           postdec1	equ	0xFE5
  6958                           fsr1h	equ	0xFE2
  6959                           fsr1l	equ	0xFE1
  6960                           postinc2	equ	0xFDE
  6961                           postdec2	equ	0xFDD
  6962                           fsr2h	equ	0xFDA
  6963                           fsr2l	equ	0xFD9
  6964                           status	equ	0xFD8
  6965                           
  6966 ;; *************** function i2___ftmul *****************
  6967 ;; Defined at:
  6968 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  f1              3   33[COMRAM] float 
  6971 ;;  f2              3   36[COMRAM] float 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;  __ftmul         3   43[COMRAM] unsigned um
  6974 ;;  __ftmul         1   47[COMRAM] unsigned char 
  6975 ;;  __ftmul         1   46[COMRAM] unsigned char 
  6976 ;;  __ftmul         1   42[COMRAM] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  3   33[COMRAM] float 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6986 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;Total ram usage:       15 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:    1
  6993 ;; This function calls:
  6994 ;;		i2___ftpack
  6995 ;; This function is called by:
  6996 ;;		_fround
  6997 ;;		_scale
  6998 ;;		_printf
  6999 ;;		i2_startT0
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text26
  7004  002DE6                     __ptext26:
  7005                           	opt stack 0
  7006  002DE6                     i2___ftmul:
  7007                           	opt stack 24
  7008                           
  7009                           ;incstack = 0
  7010  002DE6  C024  F028         	movff	i2___ftmul@f1+2,??i2___ftmul
  7011  002DEA  6A29               	clrf	(??i2___ftmul+1)& (0+255),c
  7012  002DEC  6A2A               	clrf	(??i2___ftmul+2)& (0+255),c
  7013  002DEE  3423               	rlcf	i2___ftmul@f1+1,w,c
  7014  002DF0  3628               	rlcf	??i2___ftmul& (0+255),f,c
  7015  002DF2  E301               	bnc	u753_41
  7016  002DF4  8029               	bsf	(??i2___ftmul+1)& (0+255),0,c
  7017  002DF6                     u753_41:
  7018  002DF6  5028               	movf	??i2___ftmul,w,c
  7019  002DF8  6E2B               	movwf	i2___ftmul@exp,c
  7020  002DFA  502B               	movf	i2___ftmul@exp,w,c
  7021  002DFC  A4D8               	btfss	status,2,c
  7022  002DFE  D007               	goto	i2l6242
  7023  002E00  0E00               	movlw	0
  7024  002E02  6E22               	movwf	?i2___ftmul,c
  7025  002E04  0E00               	movlw	0
  7026  002E06  6E23               	movwf	?i2___ftmul+1,c
  7027  002E08  0E00               	movlw	0
  7028  002E0A  6E24               	movwf	?i2___ftmul+2,c
  7029  002E0C  0012               	return	
  7030  002E0E                     i2l6242:
  7031  002E0E  C027  F028         	movff	i2___ftmul@f2+2,??i2___ftmul
  7032  002E12  6A29               	clrf	(??i2___ftmul+1)& (0+255),c
  7033  002E14  6A2A               	clrf	(??i2___ftmul+2)& (0+255),c
  7034  002E16  3426               	rlcf	i2___ftmul@f2+1,w,c
  7035  002E18  3628               	rlcf	??i2___ftmul& (0+255),f,c
  7036  002E1A  E301               	bnc	u755_41
  7037  002E1C  8029               	bsf	(??i2___ftmul+1)& (0+255),0,c
  7038  002E1E                     u755_41:
  7039  002E1E  5028               	movf	??i2___ftmul,w,c
  7040  002E20  6E30               	movwf	i2___ftmul@sign,c
  7041  002E22  5030               	movf	i2___ftmul@sign,w,c
  7042  002E24  A4D8               	btfss	status,2,c
  7043  002E26  D007               	goto	i2l6248
  7044  002E28  0E00               	movlw	0
  7045  002E2A  6E22               	movwf	?i2___ftmul,c
  7046  002E2C  0E00               	movlw	0
  7047  002E2E  6E23               	movwf	?i2___ftmul+1,c
  7048  002E30  0E00               	movlw	0
  7049  002E32  6E24               	movwf	?i2___ftmul+2,c
  7050  002E34  0012               	return	
  7051  002E36                     i2l6248:
  7052  002E36  5030               	movf	i2___ftmul@sign,w,c
  7053  002E38  0F7B               	addlw	123
  7054  002E3A  262B               	addwf	i2___ftmul@exp,f,c
  7055  002E3C  C024  F030         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  7056  002E40  5027               	movf	i2___ftmul@f2+2,w,c
  7057  002E42  1A30               	xorwf	i2___ftmul@sign,f,c
  7058  002E44  0E80               	movlw	128
  7059  002E46  1630               	andwf	i2___ftmul@sign,f,c
  7060  002E48  8E23               	bsf	i2___ftmul@f1+1,7,c
  7061  002E4A  8E26               	bsf	i2___ftmul@f2+1,7,c
  7062  002E4C  0EFF               	movlw	255
  7063  002E4E  1625               	andwf	i2___ftmul@f2,f,c
  7064  002E50  0EFF               	movlw	255
  7065  002E52  1626               	andwf	i2___ftmul@f2+1,f,c
  7066  002E54  0E00               	movlw	0
  7067  002E56  1627               	andwf	i2___ftmul@f2+2,f,c
  7068  002E58  0E00               	movlw	0
  7069  002E5A  6E2C               	movwf	i2___ftmul@f3_as_product,c
  7070  002E5C  0E00               	movlw	0
  7071  002E5E  6E2D               	movwf	i2___ftmul@f3_as_product+1,c
  7072  002E60  0E00               	movlw	0
  7073  002E62  6E2E               	movwf	i2___ftmul@f3_as_product+2,c
  7074  002E64  0E07               	movlw	7
  7075  002E66  6E2F               	movwf	i2___ftmul@cntr,c
  7076  002E68                     i2l6262:
  7077  002E68  A022               	btfss	i2___ftmul@f1,0,c
  7078  002E6A  D006               	goto	i2l6266
  7079  002E6C  5025               	movf	i2___ftmul@f2,w,c
  7080  002E6E  262C               	addwf	i2___ftmul@f3_as_product,f,c
  7081  002E70  5026               	movf	i2___ftmul@f2+1,w,c
  7082  002E72  222D               	addwfc	i2___ftmul@f3_as_product+1,f,c
  7083  002E74  5027               	movf	i2___ftmul@f2+2,w,c
  7084  002E76  222E               	addwfc	i2___ftmul@f3_as_product+2,f,c
  7085  002E78                     i2l6266:
  7086  002E78  90D8               	bcf	status,0,c
  7087  002E7A  3224               	rrcf	i2___ftmul@f1+2,f,c
  7088  002E7C  3223               	rrcf	i2___ftmul@f1+1,f,c
  7089  002E7E  3222               	rrcf	i2___ftmul@f1,f,c
  7090  002E80  90D8               	bcf	status,0,c
  7091  002E82  3625               	rlcf	i2___ftmul@f2,f,c
  7092  002E84  3626               	rlcf	i2___ftmul@f2+1,f,c
  7093  002E86  3627               	rlcf	i2___ftmul@f2+2,f,c
  7094  002E88  2E2F               	decfsz	i2___ftmul@cntr,f,c
  7095  002E8A  D7EE               	goto	i2l6262
  7096  002E8C  0E09               	movlw	9
  7097  002E8E  6E2F               	movwf	i2___ftmul@cntr,c
  7098  002E90                     i2l6272:
  7099  002E90  A022               	btfss	i2___ftmul@f1,0,c
  7100  002E92  D006               	goto	i2l6276
  7101  002E94  5025               	movf	i2___ftmul@f2,w,c
  7102  002E96  262C               	addwf	i2___ftmul@f3_as_product,f,c
  7103  002E98  5026               	movf	i2___ftmul@f2+1,w,c
  7104  002E9A  222D               	addwfc	i2___ftmul@f3_as_product+1,f,c
  7105  002E9C  5027               	movf	i2___ftmul@f2+2,w,c
  7106  002E9E  222E               	addwfc	i2___ftmul@f3_as_product+2,f,c
  7107  002EA0                     i2l6276:
  7108  002EA0  90D8               	bcf	status,0,c
  7109  002EA2  3224               	rrcf	i2___ftmul@f1+2,f,c
  7110  002EA4  3223               	rrcf	i2___ftmul@f1+1,f,c
  7111  002EA6  3222               	rrcf	i2___ftmul@f1,f,c
  7112  002EA8  90D8               	bcf	status,0,c
  7113  002EAA  322E               	rrcf	i2___ftmul@f3_as_product+2,f,c
  7114  002EAC  322D               	rrcf	i2___ftmul@f3_as_product+1,f,c
  7115  002EAE  322C               	rrcf	i2___ftmul@f3_as_product,f,c
  7116  002EB0  2E2F               	decfsz	i2___ftmul@cntr,f,c
  7117  002EB2  D7EE               	goto	i2l6272
  7118  002EB4  C02C  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  7119  002EB8  C02D  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  7120  002EBC  C02E  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  7121  002EC0  C02B  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  7122  002EC4  C030  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  7123  002EC8  EC50  F018         	call	i2___ftpack	;wreg free
  7124  002ECC  C001  F022         	movff	?i2___ftpack,?i2___ftmul
  7125  002ED0  C002  F023         	movff	?i2___ftpack+1,?i2___ftmul+1
  7126  002ED4  C003  F024         	movff	?i2___ftpack+2,?i2___ftmul+2
  7127  002ED8  0012               	return	
  7128  002EDA                     __end_ofi2___ftmul:
  7129                           	opt stack 0
  7130                           pclatu	equ	0xFFB
  7131                           pclath	equ	0xFFA
  7132                           tblptru	equ	0xFF8
  7133                           tblptrh	equ	0xFF7
  7134                           tblptrl	equ	0xFF6
  7135                           tablat	equ	0xFF5
  7136                           prodh	equ	0xFF4
  7137                           prodl	equ	0xFF3
  7138                           intcon	equ	0xFF2
  7139                           intcon3	equ	0xFF0
  7140                           postinc0	equ	0xFEE
  7141                           fsr0h	equ	0xFEA
  7142                           fsr0l	equ	0xFE9
  7143                           wreg	equ	0xFE8
  7144                           postdec1	equ	0xFE5
  7145                           fsr1h	equ	0xFE2
  7146                           fsr1l	equ	0xFE1
  7147                           postinc2	equ	0xFDE
  7148                           postdec2	equ	0xFDD
  7149                           fsr2h	equ	0xFDA
  7150                           fsr2l	equ	0xFD9
  7151                           status	equ	0xFD8
  7152                           
  7153 ;; *************** function ___wmul *****************
  7154 ;; Defined at:
  7155 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  multiplier      2   14[COMRAM] unsigned int 
  7158 ;;  multiplicand    2   16[COMRAM] unsigned int 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  product         2   18[COMRAM] unsigned int 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  2   14[COMRAM] unsigned int 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0, prodl, prodh
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;Total ram usage:        6 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_fround
  7180 ;;		_scale
  7181 ;;		_printf
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text27
  7186  003870                     __ptext27:
  7187                           	opt stack 0
  7188  003870                     ___wmul:
  7189                           	opt stack 24
  7190                           
  7191                           ;incstack = 0
  7192  003870  500F               	movf	___wmul@multiplier,w,c
  7193  003872  0211               	mulwf	___wmul@multiplicand,c
  7194  003874  CFF3 F013          	movff	prodl,___wmul@product
  7195  003878  CFF4 F014          	movff	prodh,___wmul@product+1
  7196  00387C  500F               	movf	___wmul@multiplier,w,c
  7197  00387E  0212               	mulwf	___wmul@multiplicand+1,c
  7198  003880  50F3               	movf	prodl,w,c
  7199  003882  2614               	addwf	___wmul@product+1,f,c
  7200  003884  5010               	movf	___wmul@multiplier+1,w,c
  7201  003886  0211               	mulwf	___wmul@multiplicand,c
  7202  003888  50F3               	movf	prodl,w,c
  7203  00388A  2614               	addwf	___wmul@product+1,f,c
  7204  00388C  C013  F00F         	movff	___wmul@product,?___wmul
  7205  003890  C014  F010         	movff	___wmul@product+1,?___wmul+1
  7206  003894  0012               	return	
  7207  003896                     __end_of___wmul:
  7208                           	opt stack 0
  7209                           pclatu	equ	0xFFB
  7210                           pclath	equ	0xFFA
  7211                           tblptru	equ	0xFF8
  7212                           tblptrh	equ	0xFF7
  7213                           tblptrl	equ	0xFF6
  7214                           tablat	equ	0xFF5
  7215                           prodh	equ	0xFF4
  7216                           prodl	equ	0xFF3
  7217                           intcon	equ	0xFF2
  7218                           intcon3	equ	0xFF0
  7219                           postinc0	equ	0xFEE
  7220                           fsr0h	equ	0xFEA
  7221                           fsr0l	equ	0xFE9
  7222                           wreg	equ	0xFE8
  7223                           postdec1	equ	0xFE5
  7224                           fsr1h	equ	0xFE2
  7225                           fsr1l	equ	0xFE1
  7226                           postinc2	equ	0xFDE
  7227                           postdec2	equ	0xFDD
  7228                           fsr2h	equ	0xFDA
  7229                           fsr2l	equ	0xFD9
  7230                           status	equ	0xFD8
  7231                           
  7232 ;; *************** function ___awmod *****************
  7233 ;; Defined at:
  7234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  dividend        2    0[COMRAM] int 
  7237 ;;  divisor         2    2[COMRAM] int 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;  sign            1    5[COMRAM] unsigned char 
  7240 ;;  counter         1    4[COMRAM] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  2    0[COMRAM] int 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7254 ;;Total ram usage:        6 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; This function calls:
  7257 ;;		Nothing
  7258 ;; This function is called by:
  7259 ;;		_fround
  7260 ;;		_scale
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text28
  7265  003626                     __ptext28:
  7266                           	opt stack 0
  7267  003626                     ___awmod:
  7268                           	opt stack 24
  7269                           
  7270                           ;incstack = 0
  7271  003626  0E00               	movlw	0
  7272  003628  6E06               	movwf	___awmod@sign,c
  7273  00362A  AE02               	btfss	___awmod@dividend+1,7,c
  7274  00362C  D006               	goto	i2l6138
  7275  00362E  6C01               	negf	___awmod@dividend,c
  7276  003630  1E02               	comf	___awmod@dividend+1,f,c
  7277  003632  B0D8               	btfsc	status,0,c
  7278  003634  2A02               	incf	___awmod@dividend+1,f,c
  7279  003636  0E01               	movlw	1
  7280  003638  6E06               	movwf	___awmod@sign,c
  7281  00363A                     i2l6138:
  7282  00363A  AE04               	btfss	___awmod@divisor+1,7,c
  7283  00363C  D004               	goto	i2l6142
  7284  00363E  6C03               	negf	___awmod@divisor,c
  7285  003640  1E04               	comf	___awmod@divisor+1,f,c
  7286  003642  B0D8               	btfsc	status,0,c
  7287  003644  2A04               	incf	___awmod@divisor+1,f,c
  7288  003646                     i2l6142:
  7289  003646  5003               	movf	___awmod@divisor,w,c
  7290  003648  1004               	iorwf	___awmod@divisor+1,w,c
  7291  00364A  B4D8               	btfsc	status,2,c
  7292  00364C  D018               	goto	i2l6158
  7293  00364E  0E01               	movlw	1
  7294  003650  6E05               	movwf	___awmod@counter,c
  7295  003652  D004               	goto	i2l6148
  7296  003654                     i2l6146:
  7297  003654  90D8               	bcf	status,0,c
  7298  003656  3603               	rlcf	___awmod@divisor,f,c
  7299  003658  3604               	rlcf	___awmod@divisor+1,f,c
  7300  00365A  2A05               	incf	___awmod@counter,f,c
  7301  00365C                     i2l6148:
  7302  00365C  AE04               	btfss	___awmod@divisor+1,7,c
  7303  00365E  D7FA               	goto	i2l6146
  7304  003660                     i2l6150:
  7305  003660  5003               	movf	___awmod@divisor,w,c
  7306  003662  5C01               	subwf	___awmod@dividend,w,c
  7307  003664  5004               	movf	___awmod@divisor+1,w,c
  7308  003666  5802               	subwfb	___awmod@dividend+1,w,c
  7309  003668  A0D8               	btfss	status,0,c
  7310  00366A  D004               	goto	i2l6154
  7311  00366C  5003               	movf	___awmod@divisor,w,c
  7312  00366E  5E01               	subwf	___awmod@dividend,f,c
  7313  003670  5004               	movf	___awmod@divisor+1,w,c
  7314  003672  5A02               	subwfb	___awmod@dividend+1,f,c
  7315  003674                     i2l6154:
  7316  003674  90D8               	bcf	status,0,c
  7317  003676  3204               	rrcf	___awmod@divisor+1,f,c
  7318  003678  3203               	rrcf	___awmod@divisor,f,c
  7319  00367A  2E05               	decfsz	___awmod@counter,f,c
  7320  00367C  D7F1               	goto	i2l6150
  7321  00367E                     i2l6158:
  7322  00367E  5006               	movf	___awmod@sign,w,c
  7323  003680  B4D8               	btfsc	status,2,c
  7324  003682  D004               	goto	i2l6162
  7325  003684  6C01               	negf	___awmod@dividend,c
  7326  003686  1E02               	comf	___awmod@dividend+1,f,c
  7327  003688  B0D8               	btfsc	status,0,c
  7328  00368A  2A02               	incf	___awmod@dividend+1,f,c
  7329  00368C                     i2l6162:
  7330  00368C  C001  F001         	movff	___awmod@dividend,?___awmod
  7331  003690  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7332  003694  0012               	return	
  7333  003696                     __end_of___awmod:
  7334                           	opt stack 0
  7335                           pclatu	equ	0xFFB
  7336                           pclath	equ	0xFFA
  7337                           tblptru	equ	0xFF8
  7338                           tblptrh	equ	0xFF7
  7339                           tblptrl	equ	0xFF6
  7340                           tablat	equ	0xFF5
  7341                           prodh	equ	0xFF4
  7342                           prodl	equ	0xFF3
  7343                           intcon	equ	0xFF2
  7344                           intcon3	equ	0xFF0
  7345                           postinc0	equ	0xFEE
  7346                           fsr0h	equ	0xFEA
  7347                           fsr0l	equ	0xFE9
  7348                           wreg	equ	0xFE8
  7349                           postdec1	equ	0xFE5
  7350                           fsr1h	equ	0xFE2
  7351                           fsr1l	equ	0xFE1
  7352                           postinc2	equ	0xFDE
  7353                           postdec2	equ	0xFDD
  7354                           fsr2h	equ	0xFDA
  7355                           fsr2l	equ	0xFD9
  7356                           status	equ	0xFD8
  7357                           
  7358 ;; *************** function ___awdiv *****************
  7359 ;; Defined at:
  7360 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  dividend        2    6[COMRAM] int 
  7363 ;;  divisor         2    8[COMRAM] int 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  quotient        2   12[COMRAM] int 
  7366 ;;  sign            1   11[COMRAM] unsigned char 
  7367 ;;  counter         1   10[COMRAM] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  2    6[COMRAM] int 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7380 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;Total ram usage:        8 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; This function calls:
  7384 ;;		Nothing
  7385 ;; This function is called by:
  7386 ;;		_fround
  7387 ;;		_scale
  7388 ;;		_printf
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text29
  7393  0033B8                     __ptext29:
  7394                           	opt stack 0
  7395  0033B8                     ___awdiv:
  7396                           	opt stack 24
  7397                           
  7398                           ;incstack = 0
  7399  0033B8  0E00               	movlw	0
  7400  0033BA  6E0C               	movwf	___awdiv@sign,c
  7401  0033BC  AE0A               	btfss	___awdiv@divisor+1,7,c
  7402  0033BE  D006               	goto	i2l6094
  7403  0033C0  6C09               	negf	___awdiv@divisor,c
  7404  0033C2  1E0A               	comf	___awdiv@divisor+1,f,c
  7405  0033C4  B0D8               	btfsc	status,0,c
  7406  0033C6  2A0A               	incf	___awdiv@divisor+1,f,c
  7407  0033C8  0E01               	movlw	1
  7408  0033CA  6E0C               	movwf	___awdiv@sign,c
  7409  0033CC                     i2l6094:
  7410  0033CC  AE08               	btfss	___awdiv@dividend+1,7,c
  7411  0033CE  D006               	goto	i2l6100
  7412  0033D0  6C07               	negf	___awdiv@dividend,c
  7413  0033D2  1E08               	comf	___awdiv@dividend+1,f,c
  7414  0033D4  B0D8               	btfsc	status,0,c
  7415  0033D6  2A08               	incf	___awdiv@dividend+1,f,c
  7416  0033D8  0E01               	movlw	1
  7417  0033DA  1A0C               	xorwf	___awdiv@sign,f,c
  7418  0033DC                     i2l6100:
  7419  0033DC  0E00               	movlw	0
  7420  0033DE  6E0E               	movwf	___awdiv@quotient+1,c
  7421  0033E0  0E00               	movlw	0
  7422  0033E2  6E0D               	movwf	___awdiv@quotient,c
  7423  0033E4  5009               	movf	___awdiv@divisor,w,c
  7424  0033E6  100A               	iorwf	___awdiv@divisor+1,w,c
  7425  0033E8  B4D8               	btfsc	status,2,c
  7426  0033EA  D01C               	goto	i2l6122
  7427  0033EC  0E01               	movlw	1
  7428  0033EE  6E0B               	movwf	___awdiv@counter,c
  7429  0033F0  D004               	goto	i2l6108
  7430  0033F2                     i2l6106:
  7431  0033F2  90D8               	bcf	status,0,c
  7432  0033F4  3609               	rlcf	___awdiv@divisor,f,c
  7433  0033F6  360A               	rlcf	___awdiv@divisor+1,f,c
  7434  0033F8  2A0B               	incf	___awdiv@counter,f,c
  7435  0033FA                     i2l6108:
  7436  0033FA  AE0A               	btfss	___awdiv@divisor+1,7,c
  7437  0033FC  D7FA               	goto	i2l6106
  7438  0033FE                     i2l6110:
  7439  0033FE  90D8               	bcf	status,0,c
  7440  003400  360D               	rlcf	___awdiv@quotient,f,c
  7441  003402  360E               	rlcf	___awdiv@quotient+1,f,c
  7442  003404  5009               	movf	___awdiv@divisor,w,c
  7443  003406  5C07               	subwf	___awdiv@dividend,w,c
  7444  003408  500A               	movf	___awdiv@divisor+1,w,c
  7445  00340A  5808               	subwfb	___awdiv@dividend+1,w,c
  7446  00340C  A0D8               	btfss	status,0,c
  7447  00340E  D005               	goto	i2l6118
  7448  003410  5009               	movf	___awdiv@divisor,w,c
  7449  003412  5E07               	subwf	___awdiv@dividend,f,c
  7450  003414  500A               	movf	___awdiv@divisor+1,w,c
  7451  003416  5A08               	subwfb	___awdiv@dividend+1,f,c
  7452  003418  800D               	bsf	___awdiv@quotient,0,c
  7453  00341A                     i2l6118:
  7454  00341A  90D8               	bcf	status,0,c
  7455  00341C  320A               	rrcf	___awdiv@divisor+1,f,c
  7456  00341E  3209               	rrcf	___awdiv@divisor,f,c
  7457  003420  2E0B               	decfsz	___awdiv@counter,f,c
  7458  003422  D7ED               	goto	i2l6110
  7459  003424                     i2l6122:
  7460  003424  500C               	movf	___awdiv@sign,w,c
  7461  003426  B4D8               	btfsc	status,2,c
  7462  003428  D004               	goto	i2l6126
  7463  00342A  6C0D               	negf	___awdiv@quotient,c
  7464  00342C  1E0E               	comf	___awdiv@quotient+1,f,c
  7465  00342E  B0D8               	btfsc	status,0,c
  7466  003430  2A0E               	incf	___awdiv@quotient+1,f,c
  7467  003432                     i2l6126:
  7468  003432  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  7469  003436  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  7470  00343A  0012               	return	
  7471  00343C                     __end_of___awdiv:
  7472                           	opt stack 0
  7473                           pclatu	equ	0xFFB
  7474                           pclath	equ	0xFFA
  7475                           tblptru	equ	0xFF8
  7476                           tblptrh	equ	0xFF7
  7477                           tblptrl	equ	0xFF6
  7478                           tablat	equ	0xFF5
  7479                           prodh	equ	0xFF4
  7480                           prodl	equ	0xFF3
  7481                           intcon	equ	0xFF2
  7482                           intcon3	equ	0xFF0
  7483                           postinc0	equ	0xFEE
  7484                           fsr0h	equ	0xFEA
  7485                           fsr0l	equ	0xFE9
  7486                           wreg	equ	0xFE8
  7487                           postdec1	equ	0xFE5
  7488                           fsr1h	equ	0xFE2
  7489                           fsr1l	equ	0xFE1
  7490                           postinc2	equ	0xFDE
  7491                           postdec2	equ	0xFDD
  7492                           fsr2h	equ	0xFDA
  7493                           fsr2l	equ	0xFD9
  7494                           status	equ	0xFD8
  7495                           
  7496 ;; *************** function __tdiv_to_l_ *****************
  7497 ;; Defined at:
  7498 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdivl.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  f1              3    0[COMRAM] float 
  7501 ;;  f2              3    3[COMRAM] float 
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;  quot            4    9[COMRAM] unsigned long 
  7504 ;;  exp1            1   14[COMRAM] unsigned char 
  7505 ;;  cntr            1   13[COMRAM] unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  4    0[COMRAM] unsigned long 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7515 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;Total ram usage:       15 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; This function calls:
  7522 ;;		Nothing
  7523 ;; This function is called by:
  7524 ;;		_printf
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           	psect	text30
  7529  00277C                     __ptext30:
  7530                           	opt stack 0
  7531  00277C                     __tdiv_to_l_:
  7532                           	opt stack 25
  7533                           
  7534                           ;incstack = 0
  7535  00277C  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7536  002780  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  7537  002782  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  7538  002784  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  7539  002786  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  7540  002788  E301               	bnc	u767_41
  7541  00278A  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  7542  00278C                     u767_41:
  7543  00278C  5007               	movf	??__tdiv_to_l_,w,c
  7544  00278E  6E0F               	movwf	__tdiv_to_l_@exp1,c
  7545  002790  500F               	movf	__tdiv_to_l_@exp1,w,c
  7546  002792  A4D8               	btfss	status,2,c
  7547  002794  D009               	goto	i2l6358
  7548  002796  0E00               	movlw	0
  7549  002798  6E01               	movwf	?__tdiv_to_l_,c
  7550  00279A  0E00               	movlw	0
  7551  00279C  6E02               	movwf	?__tdiv_to_l_+1,c
  7552  00279E  0E00               	movlw	0
  7553  0027A0  6E03               	movwf	?__tdiv_to_l_+2,c
  7554  0027A2  0E00               	movlw	0
  7555  0027A4  6E04               	movwf	?__tdiv_to_l_+3,c
  7556  0027A6  0012               	return	
  7557  0027A8                     i2l6358:
  7558  0027A8  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7559  0027AC  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  7560  0027AE  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  7561  0027B0  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  7562  0027B2  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  7563  0027B4  E301               	bnc	u769_41
  7564  0027B6  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  7565  0027B8                     u769_41:
  7566  0027B8  5007               	movf	??__tdiv_to_l_,w,c
  7567  0027BA  6E0E               	movwf	__tdiv_to_l_@cntr,c
  7568  0027BC  500E               	movf	__tdiv_to_l_@cntr,w,c
  7569  0027BE  A4D8               	btfss	status,2,c
  7570  0027C0  D009               	goto	i2l6364
  7571  0027C2  0E00               	movlw	0
  7572  0027C4  6E01               	movwf	?__tdiv_to_l_,c
  7573  0027C6  0E00               	movlw	0
  7574  0027C8  6E02               	movwf	?__tdiv_to_l_+1,c
  7575  0027CA  0E00               	movlw	0
  7576  0027CC  6E03               	movwf	?__tdiv_to_l_+2,c
  7577  0027CE  0E00               	movlw	0
  7578  0027D0  6E04               	movwf	?__tdiv_to_l_+3,c
  7579  0027D2  0012               	return	
  7580  0027D4                     i2l6364:
  7581  0027D4  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  7582  0027D6  0EFF               	movlw	255
  7583  0027D8  1601               	andwf	__tdiv_to_l_@f1,f,c
  7584  0027DA  0EFF               	movlw	255
  7585  0027DC  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  7586  0027DE  0E00               	movlw	0
  7587  0027E0  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  7588  0027E2  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  7589  0027E4  0EFF               	movlw	255
  7590  0027E6  1604               	andwf	__tdiv_to_l_@f2,f,c
  7591  0027E8  0EFF               	movlw	255
  7592  0027EA  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  7593  0027EC  0E00               	movlw	0
  7594  0027EE  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  7595  0027F0  0E00               	movlw	0
  7596  0027F2  6E0A               	movwf	__tdiv_to_l_@quot,c
  7597  0027F4  0E00               	movlw	0
  7598  0027F6  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  7599  0027F8  0E00               	movlw	0
  7600  0027FA  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  7601  0027FC  0E00               	movlw	0
  7602  0027FE  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  7603  002800  0E7F               	movlw	127
  7604  002802  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  7605  002804  500E               	movf	__tdiv_to_l_@cntr,w,c
  7606  002806  0F98               	addlw	152
  7607  002808  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  7608  00280A  0E18               	movlw	24
  7609  00280C  6E0E               	movwf	__tdiv_to_l_@cntr,c
  7610  00280E                     i2l759:
  7611  00280E  90D8               	bcf	status,0,c
  7612  002810  360A               	rlcf	__tdiv_to_l_@quot,f,c
  7613  002812  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  7614  002814  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  7615  002816  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  7616  002818  5004               	movf	__tdiv_to_l_@f2,w,c
  7617  00281A  5C01               	subwf	__tdiv_to_l_@f1,w,c
  7618  00281C  5005               	movf	__tdiv_to_l_@f2+1,w,c
  7619  00281E  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  7620  002820  5006               	movf	__tdiv_to_l_@f2+2,w,c
  7621  002822  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  7622  002824  A0D8               	btfss	status,0,c
  7623  002826  D007               	goto	i2l760
  7624  002828  5004               	movf	__tdiv_to_l_@f2,w,c
  7625  00282A  5E01               	subwf	__tdiv_to_l_@f1,f,c
  7626  00282C  5005               	movf	__tdiv_to_l_@f2+1,w,c
  7627  00282E  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  7628  002830  5006               	movf	__tdiv_to_l_@f2+2,w,c
  7629  002832  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  7630  002834  800A               	bsf	__tdiv_to_l_@quot,0,c
  7631  002836                     i2l760:
  7632  002836  90D8               	bcf	status,0,c
  7633  002838  3601               	rlcf	__tdiv_to_l_@f1,f,c
  7634  00283A  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  7635  00283C  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  7636  00283E  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  7637  002840  D7E6               	goto	i2l759
  7638  002842  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  7639  002844  D016               	goto	i2l6398
  7640  002846  500F               	movf	__tdiv_to_l_@exp1,w,c
  7641  002848  0A80               	xorlw	128
  7642  00284A  0F97               	addlw	151
  7643  00284C  B0D8               	btfsc	status,0,c
  7644  00284E  D009               	goto	i2l6394
  7645  002850  0E00               	movlw	0
  7646  002852  6E01               	movwf	?__tdiv_to_l_,c
  7647  002854  0E00               	movlw	0
  7648  002856  6E02               	movwf	?__tdiv_to_l_+1,c
  7649  002858  0E00               	movlw	0
  7650  00285A  6E03               	movwf	?__tdiv_to_l_+2,c
  7651  00285C  0E00               	movlw	0
  7652  00285E  6E04               	movwf	?__tdiv_to_l_+3,c
  7653  002860  0012               	return	
  7654  002862                     i2l6394:
  7655  002862  90D8               	bcf	status,0,c
  7656  002864  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  7657  002866  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  7658  002868  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  7659  00286A  320A               	rrcf	__tdiv_to_l_@quot,f,c
  7660  00286C  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  7661  00286E  D7F9               	goto	i2l6394
  7662  002870  D015               	goto	i2l766
  7663  002872                     i2l6398:
  7664  002872  0E17               	movlw	23
  7665  002874  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  7666  002876  D00F               	goto	i2l6406
  7667  002878  0E00               	movlw	0
  7668  00287A  6E01               	movwf	?__tdiv_to_l_,c
  7669  00287C  0E00               	movlw	0
  7670  00287E  6E02               	movwf	?__tdiv_to_l_+1,c
  7671  002880  0E00               	movlw	0
  7672  002882  6E03               	movwf	?__tdiv_to_l_+2,c
  7673  002884  0E00               	movlw	0
  7674  002886  6E04               	movwf	?__tdiv_to_l_+3,c
  7675  002888  0012               	return	
  7676  00288A                     i2l6404:
  7677  00288A  90D8               	bcf	status,0,c
  7678  00288C  360A               	rlcf	__tdiv_to_l_@quot,f,c
  7679  00288E  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  7680  002890  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  7681  002892  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  7682  002894  060F               	decf	__tdiv_to_l_@exp1,f,c
  7683  002896                     i2l6406:
  7684  002896  500F               	movf	__tdiv_to_l_@exp1,w,c
  7685  002898  A4D8               	btfss	status,2,c
  7686  00289A  D7F7               	goto	i2l6404
  7687  00289C                     i2l766:
  7688  00289C  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7689  0028A0  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7690  0028A4  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7691  0028A8  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7692  0028AC  0012               	return		;funcret
  7693  0028AE                     __end_of__tdiv_to_l_:
  7694                           	opt stack 0
  7695                           pclatu	equ	0xFFB
  7696                           pclath	equ	0xFFA
  7697                           tblptru	equ	0xFF8
  7698                           tblptrh	equ	0xFF7
  7699                           tblptrl	equ	0xFF6
  7700                           tablat	equ	0xFF5
  7701                           prodh	equ	0xFF4
  7702                           prodl	equ	0xFF3
  7703                           intcon	equ	0xFF2
  7704                           intcon3	equ	0xFF0
  7705                           postinc0	equ	0xFEE
  7706                           fsr0h	equ	0xFEA
  7707                           fsr0l	equ	0xFE9
  7708                           wreg	equ	0xFE8
  7709                           postdec1	equ	0xFE5
  7710                           fsr1h	equ	0xFE2
  7711                           fsr1l	equ	0xFE1
  7712                           postinc2	equ	0xFDE
  7713                           postdec2	equ	0xFDD
  7714                           fsr2h	equ	0xFDA
  7715                           fsr2l	equ	0xFD9
  7716                           status	equ	0xFD8
  7717                           
  7718 ;; *************** function __div_to_l_ *****************
  7719 ;; Defined at:
  7720 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fldivl.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  f1              3    0[COMRAM] unsigned long 
  7723 ;;  f2              3    3[COMRAM] unsigned long 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  quot            4    6[COMRAM] unsigned long 
  7726 ;;  exp1            1   11[COMRAM] unsigned char 
  7727 ;;  cntr            1   10[COMRAM] unsigned char 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  4    0[COMRAM] unsigned long 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7737 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7738 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7740 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7741 ;;Total ram usage:       12 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_printf
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text31
  7751  0028AE                     __ptext31:
  7752                           	opt stack 0
  7753  0028AE                     __div_to_l_:
  7754                           	opt stack 25
  7755                           
  7756                           ;incstack = 0
  7757  0028AE  3403               	rlcf	__div_to_l_@f1+2,w,c
  7758  0028B0  3404               	rlcf	__div_to_l_@f1+3,w,c
  7759  0028B2  6E0C               	movwf	__div_to_l_@exp1,c
  7760  0028B4  500C               	movf	__div_to_l_@exp1,w,c
  7761  0028B6  A4D8               	btfss	status,2,c
  7762  0028B8  D009               	goto	i2l6414
  7763  0028BA  0E00               	movlw	0
  7764  0028BC  6E01               	movwf	?__div_to_l_,c
  7765  0028BE  0E00               	movlw	0
  7766  0028C0  6E02               	movwf	?__div_to_l_+1,c
  7767  0028C2  0E00               	movlw	0
  7768  0028C4  6E03               	movwf	?__div_to_l_+2,c
  7769  0028C6  0E00               	movlw	0
  7770  0028C8  6E04               	movwf	?__div_to_l_+3,c
  7771  0028CA  0012               	return	
  7772  0028CC                     i2l6414:
  7773  0028CC  3406               	rlcf	__div_to_l_@f2+2,w,c
  7774  0028CE  3407               	rlcf	__div_to_l_@f2+3,w,c
  7775  0028D0  6E0B               	movwf	__div_to_l_@cntr,c
  7776  0028D2  500B               	movf	__div_to_l_@cntr,w,c
  7777  0028D4  A4D8               	btfss	status,2,c
  7778  0028D6  D009               	goto	i2l6420
  7779  0028D8  0E00               	movlw	0
  7780  0028DA  6E01               	movwf	?__div_to_l_,c
  7781  0028DC  0E00               	movlw	0
  7782  0028DE  6E02               	movwf	?__div_to_l_+1,c
  7783  0028E0  0E00               	movlw	0
  7784  0028E2  6E03               	movwf	?__div_to_l_+2,c
  7785  0028E4  0E00               	movlw	0
  7786  0028E6  6E04               	movwf	?__div_to_l_+3,c
  7787  0028E8  0012               	return	
  7788  0028EA                     i2l6420:
  7789  0028EA  8E03               	bsf	__div_to_l_@f1+2,7,c
  7790  0028EC  0EFF               	movlw	255
  7791  0028EE  1601               	andwf	__div_to_l_@f1,f,c
  7792  0028F0  0EFF               	movlw	255
  7793  0028F2  1602               	andwf	__div_to_l_@f1+1,f,c
  7794  0028F4  0EFF               	movlw	255
  7795  0028F6  1603               	andwf	__div_to_l_@f1+2,f,c
  7796  0028F8  0E00               	movlw	0
  7797  0028FA  1604               	andwf	__div_to_l_@f1+3,f,c
  7798  0028FC  8E06               	bsf	__div_to_l_@f2+2,7,c
  7799  0028FE  0EFF               	movlw	255
  7800  002900  1604               	andwf	__div_to_l_@f2,f,c
  7801  002902  0EFF               	movlw	255
  7802  002904  1605               	andwf	__div_to_l_@f2+1,f,c
  7803  002906  0EFF               	movlw	255
  7804  002908  1606               	andwf	__div_to_l_@f2+2,f,c
  7805  00290A  0E00               	movlw	0
  7806  00290C  1607               	andwf	__div_to_l_@f2+3,f,c
  7807  00290E  0E00               	movlw	0
  7808  002910  6E07               	movwf	__div_to_l_@quot,c
  7809  002912  0E00               	movlw	0
  7810  002914  6E08               	movwf	__div_to_l_@quot+1,c
  7811  002916  0E00               	movlw	0
  7812  002918  6E09               	movwf	__div_to_l_@quot+2,c
  7813  00291A  0E00               	movlw	0
  7814  00291C  6E0A               	movwf	__div_to_l_@quot+3,c
  7815  00291E  0E7F               	movlw	127
  7816  002920  5E0C               	subwf	__div_to_l_@exp1,f,c
  7817  002922  500B               	movf	__div_to_l_@cntr,w,c
  7818  002924  0FA0               	addlw	160
  7819  002926  5E0C               	subwf	__div_to_l_@exp1,f,c
  7820  002928  0E20               	movlw	32
  7821  00292A  6E0B               	movwf	__div_to_l_@cntr,c
  7822  00292C                     i2l6434:
  7823  00292C  90D8               	bcf	status,0,c
  7824  00292E  3607               	rlcf	__div_to_l_@quot,f,c
  7825  002930  3608               	rlcf	__div_to_l_@quot+1,f,c
  7826  002932  3609               	rlcf	__div_to_l_@quot+2,f,c
  7827  002934  360A               	rlcf	__div_to_l_@quot+3,f,c
  7828  002936  5004               	movf	__div_to_l_@f2,w,c
  7829  002938  5C01               	subwf	__div_to_l_@f1,w,c
  7830  00293A  5005               	movf	__div_to_l_@f2+1,w,c
  7831  00293C  5802               	subwfb	__div_to_l_@f1+1,w,c
  7832  00293E  5006               	movf	__div_to_l_@f2+2,w,c
  7833  002940  5803               	subwfb	__div_to_l_@f1+2,w,c
  7834  002942  5007               	movf	__div_to_l_@f2+3,w,c
  7835  002944  5804               	subwfb	__div_to_l_@f1+3,w,c
  7836  002946  A0D8               	btfss	status,0,c
  7837  002948  D009               	goto	i2l6442
  7838  00294A  5004               	movf	__div_to_l_@f2,w,c
  7839  00294C  5E01               	subwf	__div_to_l_@f1,f,c
  7840  00294E  5005               	movf	__div_to_l_@f2+1,w,c
  7841  002950  5A02               	subwfb	__div_to_l_@f1+1,f,c
  7842  002952  5006               	movf	__div_to_l_@f2+2,w,c
  7843  002954  5A03               	subwfb	__div_to_l_@f1+2,f,c
  7844  002956  5007               	movf	__div_to_l_@f2+3,w,c
  7845  002958  5A04               	subwfb	__div_to_l_@f1+3,f,c
  7846  00295A  8007               	bsf	__div_to_l_@quot,0,c
  7847  00295C                     i2l6442:
  7848  00295C  90D8               	bcf	status,0,c
  7849  00295E  3601               	rlcf	__div_to_l_@f1,f,c
  7850  002960  3602               	rlcf	__div_to_l_@f1+1,f,c
  7851  002962  3603               	rlcf	__div_to_l_@f1+2,f,c
  7852  002964  3604               	rlcf	__div_to_l_@f1+3,f,c
  7853  002966  2E0B               	decfsz	__div_to_l_@cntr,f,c
  7854  002968  D7E1               	goto	i2l6434
  7855  00296A  AE0C               	btfss	__div_to_l_@exp1,7,c
  7856  00296C  D016               	goto	i2l6458
  7857  00296E  500C               	movf	__div_to_l_@exp1,w,c
  7858  002970  0A80               	xorlw	128
  7859  002972  0F9F               	addlw	159
  7860  002974  B0D8               	btfsc	status,0,c
  7861  002976  D009               	goto	i2l6454
  7862  002978  0E00               	movlw	0
  7863  00297A  6E01               	movwf	?__div_to_l_,c
  7864  00297C  0E00               	movlw	0
  7865  00297E  6E02               	movwf	?__div_to_l_+1,c
  7866  002980  0E00               	movlw	0
  7867  002982  6E03               	movwf	?__div_to_l_+2,c
  7868  002984  0E00               	movlw	0
  7869  002986  6E04               	movwf	?__div_to_l_+3,c
  7870  002988  0012               	return	
  7871  00298A                     i2l6454:
  7872  00298A  90D8               	bcf	status,0,c
  7873  00298C  320A               	rrcf	__div_to_l_@quot+3,f,c
  7874  00298E  3209               	rrcf	__div_to_l_@quot+2,f,c
  7875  002990  3208               	rrcf	__div_to_l_@quot+1,f,c
  7876  002992  3207               	rrcf	__div_to_l_@quot,f,c
  7877  002994  3E0C               	incfsz	__div_to_l_@exp1,f,c
  7878  002996  D7F9               	goto	i2l6454
  7879  002998  D015               	goto	i2l662
  7880  00299A                     i2l6458:
  7881  00299A  0E1F               	movlw	31
  7882  00299C  640C               	cpfsgt	__div_to_l_@exp1,c
  7883  00299E  D00F               	goto	i2l6466
  7884  0029A0  0E00               	movlw	0
  7885  0029A2  6E01               	movwf	?__div_to_l_,c
  7886  0029A4  0E00               	movlw	0
  7887  0029A6  6E02               	movwf	?__div_to_l_+1,c
  7888  0029A8  0E00               	movlw	0
  7889  0029AA  6E03               	movwf	?__div_to_l_+2,c
  7890  0029AC  0E00               	movlw	0
  7891  0029AE  6E04               	movwf	?__div_to_l_+3,c
  7892  0029B0  0012               	return	
  7893  0029B2                     i2l6464:
  7894  0029B2  90D8               	bcf	status,0,c
  7895  0029B4  3607               	rlcf	__div_to_l_@quot,f,c
  7896  0029B6  3608               	rlcf	__div_to_l_@quot+1,f,c
  7897  0029B8  3609               	rlcf	__div_to_l_@quot+2,f,c
  7898  0029BA  360A               	rlcf	__div_to_l_@quot+3,f,c
  7899  0029BC  060C               	decf	__div_to_l_@exp1,f,c
  7900  0029BE                     i2l6466:
  7901  0029BE  500C               	movf	__div_to_l_@exp1,w,c
  7902  0029C0  A4D8               	btfss	status,2,c
  7903  0029C2  D7F7               	goto	i2l6464
  7904  0029C4                     i2l662:
  7905  0029C4  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  7906  0029C8  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7907  0029CC  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7908  0029D0  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7909  0029D4  0012               	return		;funcret
  7910  0029D6                     __end_of__div_to_l_:
  7911                           	opt stack 0
  7912                           pclatu	equ	0xFFB
  7913                           pclath	equ	0xFFA
  7914                           tblptru	equ	0xFF8
  7915                           tblptrh	equ	0xFF7
  7916                           tblptrl	equ	0xFF6
  7917                           tablat	equ	0xFF5
  7918                           prodh	equ	0xFF4
  7919                           prodl	equ	0xFF3
  7920                           intcon	equ	0xFF2
  7921                           intcon3	equ	0xFF0
  7922                           postinc0	equ	0xFEE
  7923                           fsr0h	equ	0xFEA
  7924                           fsr0l	equ	0xFE9
  7925                           wreg	equ	0xFE8
  7926                           postdec1	equ	0xFE5
  7927                           fsr1h	equ	0xFE2
  7928                           fsr1l	equ	0xFE1
  7929                           postinc2	equ	0xFDE
  7930                           postdec2	equ	0xFDD
  7931                           fsr2h	equ	0xFDA
  7932                           fsr2l	equ	0xFD9
  7933                           status	equ	0xFD8
  7934                           
  7935 ;; *************** function ___lltoft *****************
  7936 ;; Defined at:
  7937 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  c               4    8[COMRAM] unsigned long 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  exp             1   16[COMRAM] unsigned char 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  3    8[COMRAM] float 
  7944 ;; Registers used:
  7945 ;;		wreg, status,2, status,0, cstack
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;Total ram usage:        9 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; Hardware stack levels required when called:    1
  7958 ;; This function calls:
  7959 ;;		i2___ftpack
  7960 ;; This function is called by:
  7961 ;;		_printf
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text32
  7966  0036FC                     __ptext32:
  7967                           	opt stack 0
  7968  0036FC                     ___lltoft:
  7969                           	opt stack 24
  7970                           
  7971                           ;incstack = 0
  7972  0036FC  0E8E               	movlw	142
  7973  0036FE  6E11               	movwf	___lltoft@exp,c
  7974  003700  D006               	goto	i2l6766
  7975  003702                     i2l6764:
  7976  003702  90D8               	bcf	status,0,c
  7977  003704  320C               	rrcf	___lltoft@c+3,f,c
  7978  003706  320B               	rrcf	___lltoft@c+2,f,c
  7979  003708  320A               	rrcf	___lltoft@c+1,f,c
  7980  00370A  3209               	rrcf	___lltoft@c,f,c
  7981  00370C  2A11               	incf	___lltoft@exp,f,c
  7982  00370E                     i2l6766:
  7983  00370E  0E00               	movlw	0
  7984  003710  1409               	andwf	___lltoft@c,w,c
  7985  003712  6E0D               	movwf	??___lltoft& (0+255),c
  7986  003714  0E00               	movlw	0
  7987  003716  140A               	andwf	___lltoft@c+1,w,c
  7988  003718  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  7989  00371A  0E00               	movlw	0
  7990  00371C  140B               	andwf	___lltoft@c+2,w,c
  7991  00371E  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  7992  003720  0EFF               	movlw	255
  7993  003722  140C               	andwf	___lltoft@c+3,w,c
  7994  003724  6E10               	movwf	(??___lltoft+3)& (0+255),c
  7995  003726  500D               	movf	??___lltoft,w,c
  7996  003728  100E               	iorwf	??___lltoft+1,w,c
  7997  00372A  100F               	iorwf	??___lltoft+2,w,c
  7998  00372C  1010               	iorwf	??___lltoft+3,w,c
  7999  00372E  A4D8               	btfss	status,2,c
  8000  003730  D7E8               	goto	i2l6764
  8001  003732  C009  F001         	movff	___lltoft@c,i2___ftpack@arg
  8002  003736  C00A  F002         	movff	___lltoft@c+1,i2___ftpack@arg+1
  8003  00373A  C00B  F003         	movff	___lltoft@c+2,i2___ftpack@arg+2
  8004  00373E  C011  F004         	movff	___lltoft@exp,i2___ftpack@exp
  8005  003742  0E00               	movlw	0
  8006  003744  6E05               	movwf	i2___ftpack@sign,c
  8007  003746  EC50  F018         	call	i2___ftpack	;wreg free
  8008  00374A  C001  F009         	movff	?i2___ftpack,?___lltoft
  8009  00374E  C002  F00A         	movff	?i2___ftpack+1,?___lltoft+1
  8010  003752  C003  F00B         	movff	?i2___ftpack+2,?___lltoft+2
  8011  003756  0012               	return	
  8012  003758                     __end_of___lltoft:
  8013                           	opt stack 0
  8014                           pclatu	equ	0xFFB
  8015                           pclath	equ	0xFFA
  8016                           tblptru	equ	0xFF8
  8017                           tblptrh	equ	0xFF7
  8018                           tblptrl	equ	0xFF6
  8019                           tablat	equ	0xFF5
  8020                           prodh	equ	0xFF4
  8021                           prodl	equ	0xFF3
  8022                           intcon	equ	0xFF2
  8023                           intcon3	equ	0xFF0
  8024                           postinc0	equ	0xFEE
  8025                           fsr0h	equ	0xFEA
  8026                           fsr0l	equ	0xFE9
  8027                           wreg	equ	0xFE8
  8028                           postdec1	equ	0xFE5
  8029                           fsr1h	equ	0xFE2
  8030                           fsr1l	equ	0xFE1
  8031                           postinc2	equ	0xFDE
  8032                           postdec2	equ	0xFDD
  8033                           fsr2h	equ	0xFDA
  8034                           fsr2l	equ	0xFD9
  8035                           status	equ	0xFD8
  8036                           
  8037 ;; *************** function ___llmod *****************
  8038 ;; Defined at:
  8039 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\llmod.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  dividend        4    0[COMRAM] unsigned long 
  8042 ;;  divisor         4    4[COMRAM] unsigned long 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  counter         1    8[COMRAM] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  4    0[COMRAM] unsigned long 
  8047 ;; Registers used:
  8048 ;;		wreg, status,2, status,0
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8054 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;Total ram usage:        9 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; This function calls:
  8061 ;;		Nothing
  8062 ;; This function is called by:
  8063 ;;		_printf
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           	psect	text33
  8068  003696                     __ptext33:
  8069                           	opt stack 0
  8070  003696                     ___llmod:
  8071                           	opt stack 25
  8072                           
  8073                           ;incstack = 0
  8074  003696  5005               	movf	___llmod@divisor,w,c
  8075  003698  1006               	iorwf	___llmod@divisor+1,w,c
  8076  00369A  1007               	iorwf	___llmod@divisor+2,w,c
  8077  00369C  1008               	iorwf	___llmod@divisor+3,w,c
  8078  00369E  B4D8               	btfsc	status,2,c
  8079  0036A0  D024               	goto	i2l846
  8080  0036A2  0E01               	movlw	1
  8081  0036A4  6E09               	movwf	___llmod@counter,c
  8082  0036A6  D006               	goto	i2l6752
  8083  0036A8                     i2l6750:
  8084  0036A8  90D8               	bcf	status,0,c
  8085  0036AA  3605               	rlcf	___llmod@divisor,f,c
  8086  0036AC  3606               	rlcf	___llmod@divisor+1,f,c
  8087  0036AE  3607               	rlcf	___llmod@divisor+2,f,c
  8088  0036B0  3608               	rlcf	___llmod@divisor+3,f,c
  8089  0036B2  2A09               	incf	___llmod@counter,f,c
  8090  0036B4                     i2l6752:
  8091  0036B4  AE08               	btfss	___llmod@divisor+3,7,c
  8092  0036B6  D7F8               	goto	i2l6750
  8093  0036B8                     i2l6754:
  8094  0036B8  5005               	movf	___llmod@divisor,w,c
  8095  0036BA  5C01               	subwf	___llmod@dividend,w,c
  8096  0036BC  5006               	movf	___llmod@divisor+1,w,c
  8097  0036BE  5802               	subwfb	___llmod@dividend+1,w,c
  8098  0036C0  5007               	movf	___llmod@divisor+2,w,c
  8099  0036C2  5803               	subwfb	___llmod@dividend+2,w,c
  8100  0036C4  5008               	movf	___llmod@divisor+3,w,c
  8101  0036C6  5804               	subwfb	___llmod@dividend+3,w,c
  8102  0036C8  A0D8               	btfss	status,0,c
  8103  0036CA  D008               	goto	i2l6758
  8104  0036CC  5005               	movf	___llmod@divisor,w,c
  8105  0036CE  5E01               	subwf	___llmod@dividend,f,c
  8106  0036D0  5006               	movf	___llmod@divisor+1,w,c
  8107  0036D2  5A02               	subwfb	___llmod@dividend+1,f,c
  8108  0036D4  5007               	movf	___llmod@divisor+2,w,c
  8109  0036D6  5A03               	subwfb	___llmod@dividend+2,f,c
  8110  0036D8  5008               	movf	___llmod@divisor+3,w,c
  8111  0036DA  5A04               	subwfb	___llmod@dividend+3,f,c
  8112  0036DC                     i2l6758:
  8113  0036DC  90D8               	bcf	status,0,c
  8114  0036DE  3208               	rrcf	___llmod@divisor+3,f,c
  8115  0036E0  3207               	rrcf	___llmod@divisor+2,f,c
  8116  0036E2  3206               	rrcf	___llmod@divisor+1,f,c
  8117  0036E4  3205               	rrcf	___llmod@divisor,f,c
  8118  0036E6  2E09               	decfsz	___llmod@counter,f,c
  8119  0036E8  D7E7               	goto	i2l6754
  8120  0036EA                     i2l846:
  8121  0036EA  C001  F001         	movff	___llmod@dividend,?___llmod
  8122  0036EE  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  8123  0036F2  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  8124  0036F6  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  8125  0036FA  0012               	return		;funcret
  8126  0036FC                     __end_of___llmod:
  8127                           	opt stack 0
  8128                           pclatu	equ	0xFFB
  8129                           pclath	equ	0xFFA
  8130                           tblptru	equ	0xFF8
  8131                           tblptrh	equ	0xFF7
  8132                           tblptrl	equ	0xFF6
  8133                           tablat	equ	0xFF5
  8134                           prodh	equ	0xFF4
  8135                           prodl	equ	0xFF3
  8136                           intcon	equ	0xFF2
  8137                           intcon3	equ	0xFF0
  8138                           postinc0	equ	0xFEE
  8139                           fsr0h	equ	0xFEA
  8140                           fsr0l	equ	0xFE9
  8141                           wreg	equ	0xFE8
  8142                           postdec1	equ	0xFE5
  8143                           fsr1h	equ	0xFE2
  8144                           fsr1l	equ	0xFE1
  8145                           postinc2	equ	0xFDE
  8146                           postdec2	equ	0xFDD
  8147                           fsr2h	equ	0xFDA
  8148                           fsr2l	equ	0xFD9
  8149                           status	equ	0xFD8
  8150                           
  8151 ;; *************** function ___lldiv *****************
  8152 ;; Defined at:
  8153 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  dividend        4    0[COMRAM] unsigned long 
  8156 ;;  divisor         4    4[COMRAM] unsigned long 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  quotient        4    9[COMRAM] unsigned long 
  8159 ;;  counter         1    8[COMRAM] unsigned char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  4    0[COMRAM] unsigned long 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8169 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8172 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8173 ;;Total ram usage:       13 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; This function calls:
  8176 ;;		Nothing
  8177 ;; This function is called by:
  8178 ;;		_printf
  8179 ;;		_I2C_Master_Init
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text34
  8184  00343C                     __ptext34:
  8185                           	opt stack 0
  8186  00343C                     ___lldiv:
  8187                           	opt stack 25
  8188                           
  8189                           ;incstack = 0
  8190  00343C  0E00               	movlw	0
  8191  00343E  6E0A               	movwf	___lldiv@quotient,c
  8192  003440  0E00               	movlw	0
  8193  003442  6E0B               	movwf	___lldiv@quotient+1,c
  8194  003444  0E00               	movlw	0
  8195  003446  6E0C               	movwf	___lldiv@quotient+2,c
  8196  003448  0E00               	movlw	0
  8197  00344A  6E0D               	movwf	___lldiv@quotient+3,c
  8198  00344C  5005               	movf	___lldiv@divisor,w,c
  8199  00344E  1006               	iorwf	___lldiv@divisor+1,w,c
  8200  003450  1007               	iorwf	___lldiv@divisor+2,w,c
  8201  003452  1008               	iorwf	___lldiv@divisor+3,w,c
  8202  003454  B4D8               	btfsc	status,2,c
  8203  003456  D02A               	goto	i2l836
  8204  003458  0E01               	movlw	1
  8205  00345A  6E09               	movwf	___lldiv@counter,c
  8206  00345C  D006               	goto	i2l6732
  8207  00345E                     i2l6730:
  8208  00345E  90D8               	bcf	status,0,c
  8209  003460  3605               	rlcf	___lldiv@divisor,f,c
  8210  003462  3606               	rlcf	___lldiv@divisor+1,f,c
  8211  003464  3607               	rlcf	___lldiv@divisor+2,f,c
  8212  003466  3608               	rlcf	___lldiv@divisor+3,f,c
  8213  003468  2A09               	incf	___lldiv@counter,f,c
  8214  00346A                     i2l6732:
  8215  00346A  AE08               	btfss	___lldiv@divisor+3,7,c
  8216  00346C  D7F8               	goto	i2l6730
  8217  00346E                     i2l6734:
  8218  00346E  90D8               	bcf	status,0,c
  8219  003470  360A               	rlcf	___lldiv@quotient,f,c
  8220  003472  360B               	rlcf	___lldiv@quotient+1,f,c
  8221  003474  360C               	rlcf	___lldiv@quotient+2,f,c
  8222  003476  360D               	rlcf	___lldiv@quotient+3,f,c
  8223  003478  5005               	movf	___lldiv@divisor,w,c
  8224  00347A  5C01               	subwf	___lldiv@dividend,w,c
  8225  00347C  5006               	movf	___lldiv@divisor+1,w,c
  8226  00347E  5802               	subwfb	___lldiv@dividend+1,w,c
  8227  003480  5007               	movf	___lldiv@divisor+2,w,c
  8228  003482  5803               	subwfb	___lldiv@dividend+2,w,c
  8229  003484  5008               	movf	___lldiv@divisor+3,w,c
  8230  003486  5804               	subwfb	___lldiv@dividend+3,w,c
  8231  003488  A0D8               	btfss	status,0,c
  8232  00348A  D009               	goto	i2l6742
  8233  00348C  5005               	movf	___lldiv@divisor,w,c
  8234  00348E  5E01               	subwf	___lldiv@dividend,f,c
  8235  003490  5006               	movf	___lldiv@divisor+1,w,c
  8236  003492  5A02               	subwfb	___lldiv@dividend+1,f,c
  8237  003494  5007               	movf	___lldiv@divisor+2,w,c
  8238  003496  5A03               	subwfb	___lldiv@dividend+2,f,c
  8239  003498  5008               	movf	___lldiv@divisor+3,w,c
  8240  00349A  5A04               	subwfb	___lldiv@dividend+3,f,c
  8241  00349C  800A               	bsf	___lldiv@quotient,0,c
  8242  00349E                     i2l6742:
  8243  00349E  90D8               	bcf	status,0,c
  8244  0034A0  3208               	rrcf	___lldiv@divisor+3,f,c
  8245  0034A2  3207               	rrcf	___lldiv@divisor+2,f,c
  8246  0034A4  3206               	rrcf	___lldiv@divisor+1,f,c
  8247  0034A6  3205               	rrcf	___lldiv@divisor,f,c
  8248  0034A8  2E09               	decfsz	___lldiv@counter,f,c
  8249  0034AA  D7E1               	goto	i2l6734
  8250  0034AC                     i2l836:
  8251  0034AC  C00A  F001         	movff	___lldiv@quotient,?___lldiv
  8252  0034B0  C00B  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  8253  0034B4  C00C  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  8254  0034B8  C00D  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  8255  0034BC  0012               	return		;funcret
  8256  0034BE                     __end_of___lldiv:
  8257                           	opt stack 0
  8258                           pclatu	equ	0xFFB
  8259                           pclath	equ	0xFFA
  8260                           tblptru	equ	0xFF8
  8261                           tblptrh	equ	0xFF7
  8262                           tblptrl	equ	0xFF6
  8263                           tablat	equ	0xFF5
  8264                           prodh	equ	0xFF4
  8265                           prodl	equ	0xFF3
  8266                           intcon	equ	0xFF2
  8267                           intcon3	equ	0xFF0
  8268                           postinc0	equ	0xFEE
  8269                           fsr0h	equ	0xFEA
  8270                           fsr0l	equ	0xFE9
  8271                           wreg	equ	0xFE8
  8272                           postdec1	equ	0xFE5
  8273                           fsr1h	equ	0xFE2
  8274                           fsr1l	equ	0xFE1
  8275                           postinc2	equ	0xFDE
  8276                           postdec2	equ	0xFDD
  8277                           fsr2h	equ	0xFDA
  8278                           fsr2l	equ	0xFD9
  8279                           status	equ	0xFD8
  8280                           
  8281 ;; *************** function ___ftsub *****************
  8282 ;; Defined at:
  8283 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  f1              3   70[COMRAM] float 
  8286 ;;  f2              3   73[COMRAM] float 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  3   70[COMRAM] float 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0, cstack
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8298 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8302 ;;Total ram usage:        6 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:    2
  8305 ;; This function calls:
  8306 ;;		i2___ftadd
  8307 ;; This function is called by:
  8308 ;;		_service
  8309 ;;		_printf
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text35
  8314  00379E                     __ptext35:
  8315                           	opt stack 0
  8316  00379E                     ___ftsub:
  8317                           	opt stack 23
  8318                           
  8319                           ;incstack = 0
  8320  00379E  504A               	movf	___ftsub@f2,w,c
  8321  0037A0  104B               	iorwf	___ftsub@f2+1,w,c
  8322  0037A2  104C               	iorwf	___ftsub@f2+2,w,c
  8323  0037A4  B4D8               	btfsc	status,2,c
  8324  0037A6  D006               	goto	i2l6652
  8325  0037A8  0E00               	movlw	0
  8326  0037AA  1A4A               	xorwf	___ftsub@f2,f,c
  8327  0037AC  0E00               	movlw	0
  8328  0037AE  1A4B               	xorwf	___ftsub@f2+1,f,c
  8329  0037B0  0E80               	movlw	128
  8330  0037B2  1A4C               	xorwf	___ftsub@f2+2,f,c
  8331  0037B4                     i2l6652:
  8332  0037B4  C047  F03B         	movff	___ftsub@f1,i2___ftadd@f1
  8333  0037B8  C048  F03C         	movff	___ftsub@f1+1,i2___ftadd@f1+1
  8334  0037BC  C049  F03D         	movff	___ftsub@f1+2,i2___ftadd@f1+2
  8335  0037C0  C04A  F03E         	movff	___ftsub@f2,i2___ftadd@f2
  8336  0037C4  C04B  F03F         	movff	___ftsub@f2+1,i2___ftadd@f2+1
  8337  0037C8  C04C  F040         	movff	___ftsub@f2+2,i2___ftadd@f2+2
  8338  0037CC  ECF1  F010         	call	i2___ftadd	;wreg free
  8339  0037D0  C03B  F047         	movff	?i2___ftadd,?___ftsub
  8340  0037D4  C03C  F048         	movff	?i2___ftadd+1,?___ftsub+1
  8341  0037D8  C03D  F049         	movff	?i2___ftadd+2,?___ftsub+2
  8342  0037DC  0012               	return	
  8343  0037DE                     __end_of___ftsub:
  8344                           	opt stack 0
  8345                           pclatu	equ	0xFFB
  8346                           pclath	equ	0xFFA
  8347                           tblptru	equ	0xFF8
  8348                           tblptrh	equ	0xFF7
  8349                           tblptrl	equ	0xFF6
  8350                           tablat	equ	0xFF5
  8351                           prodh	equ	0xFF4
  8352                           prodl	equ	0xFF3
  8353                           intcon	equ	0xFF2
  8354                           intcon3	equ	0xFF0
  8355                           postinc0	equ	0xFEE
  8356                           fsr0h	equ	0xFEA
  8357                           fsr0l	equ	0xFE9
  8358                           wreg	equ	0xFE8
  8359                           postdec1	equ	0xFE5
  8360                           fsr1h	equ	0xFE2
  8361                           fsr1l	equ	0xFE1
  8362                           postinc2	equ	0xFDE
  8363                           postdec2	equ	0xFDD
  8364                           fsr2h	equ	0xFDA
  8365                           fsr2l	equ	0xFD9
  8366                           status	equ	0xFD8
  8367                           
  8368 ;; *************** function i2___ftadd *****************
  8369 ;; Defined at:
  8370 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  f1              3   58[COMRAM] float 
  8373 ;;  f2              3   61[COMRAM] float 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  __ftadd         1   69[COMRAM] unsigned char 
  8376 ;;  __ftadd         1   68[COMRAM] unsigned char 
  8377 ;;  __ftadd         1   67[COMRAM] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  3   58[COMRAM] float 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8387 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;Total ram usage:       12 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    1
  8394 ;; This function calls:
  8395 ;;		i2___ftpack
  8396 ;; This function is called by:
  8397 ;;		_service
  8398 ;;		_printf
  8399 ;;		___ftsub
  8400 ;;		i2_startT0
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text36
  8405  0021E2                     __ptext36:
  8406                           	opt stack 0
  8407  0021E2                     i2___ftadd:
  8408                           	opt stack 24
  8409                           
  8410                           ;incstack = 0
  8411  0021E2  C03D  F041         	movff	i2___ftadd@f1+2,??i2___ftadd
  8412  0021E6  6A42               	clrf	(??i2___ftadd+1)& (0+255),c
  8413  0021E8  6A43               	clrf	(??i2___ftadd+2)& (0+255),c
  8414  0021EA  343C               	rlcf	i2___ftadd@f1+1,w,c
  8415  0021EC  3641               	rlcf	??i2___ftadd& (0+255),f,c
  8416  0021EE  E301               	bnc	u732_41
  8417  0021F0  8042               	bsf	(??i2___ftadd+1)& (0+255),0,c
  8418  0021F2                     u732_41:
  8419  0021F2  5041               	movf	??i2___ftadd,w,c
  8420  0021F4  6E46               	movwf	i2___ftadd@exp1,c
  8421  0021F6  C040  F041         	movff	i2___ftadd@f2+2,??i2___ftadd
  8422  0021FA  6A42               	clrf	(??i2___ftadd+1)& (0+255),c
  8423  0021FC  6A43               	clrf	(??i2___ftadd+2)& (0+255),c
  8424  0021FE  343F               	rlcf	i2___ftadd@f2+1,w,c
  8425  002200  3641               	rlcf	??i2___ftadd& (0+255),f,c
  8426  002202  E301               	bnc	u733_41
  8427  002204  8042               	bsf	(??i2___ftadd+1)& (0+255),0,c
  8428  002206                     u733_41:
  8429  002206  5041               	movf	??i2___ftadd,w,c
  8430  002208  6E45               	movwf	i2___ftadd@exp2,c
  8431  00220A  5046               	movf	i2___ftadd@exp1,w,c
  8432  00220C  B4D8               	btfsc	status,2,c
  8433  00220E  D00B               	goto	i2l717
  8434  002210  5045               	movf	i2___ftadd@exp2,w,c
  8435  002212  5C46               	subwf	i2___ftadd@exp1,w,c
  8436  002214  B0D8               	btfsc	status,0,c
  8437  002216  D00E               	goto	i2l6174
  8438  002218  5046               	movf	i2___ftadd@exp1,w,c
  8439  00221A  0800               	sublw	0
  8440  00221C  2445               	addwf	i2___ftadd@exp2,w,c
  8441  00221E  6E41               	movwf	??i2___ftadd& (0+255),c
  8442  002220  0E18               	movlw	24
  8443  002222  6441               	cpfsgt	??i2___ftadd,c
  8444  002224  D007               	goto	i2l6174
  8445  002226                     i2l717:
  8446  002226  C03E  F03B         	movff	i2___ftadd@f2,?i2___ftadd
  8447  00222A  C03F  F03C         	movff	i2___ftadd@f2+1,?i2___ftadd+1
  8448  00222E  C040  F03D         	movff	i2___ftadd@f2+2,?i2___ftadd+2
  8449  002232  0012               	return	
  8450  002234                     i2l6174:
  8451  002234  5045               	movf	i2___ftadd@exp2,w,c
  8452  002236  B4D8               	btfsc	status,2,c
  8453  002238  D00B               	goto	i2l721
  8454  00223A  5046               	movf	i2___ftadd@exp1,w,c
  8455  00223C  5C45               	subwf	i2___ftadd@exp2,w,c
  8456  00223E  B0D8               	btfsc	status,0,c
  8457  002240  D00E               	goto	i2l6180
  8458  002242  5045               	movf	i2___ftadd@exp2,w,c
  8459  002244  0800               	sublw	0
  8460  002246  2446               	addwf	i2___ftadd@exp1,w,c
  8461  002248  6E41               	movwf	??i2___ftadd& (0+255),c
  8462  00224A  0E18               	movlw	24
  8463  00224C  6441               	cpfsgt	??i2___ftadd,c
  8464  00224E  D007               	goto	i2l6180
  8465  002250                     i2l721:
  8466  002250  C03B  F03B         	movff	i2___ftadd@f1,?i2___ftadd
  8467  002254  C03C  F03C         	movff	i2___ftadd@f1+1,?i2___ftadd+1
  8468  002258  C03D  F03D         	movff	i2___ftadd@f1+2,?i2___ftadd+2
  8469  00225C  0012               	return	
  8470  00225E                     i2l6180:
  8471  00225E  0E06               	movlw	6
  8472  002260  6E44               	movwf	i2___ftadd@sign,c
  8473  002262  BE3D               	btfsc	i2___ftadd@f1+2,7,c
  8474  002264  8E44               	bsf	i2___ftadd@sign,7,c
  8475  002266  BE40               	btfsc	i2___ftadd@f2+2,7,c
  8476  002268  8C44               	bsf	i2___ftadd@sign,6,c
  8477  00226A  8E3C               	bsf	i2___ftadd@f1+1,7,c
  8478  00226C  0EFF               	movlw	255
  8479  00226E  163B               	andwf	i2___ftadd@f1,f,c
  8480  002270  0EFF               	movlw	255
  8481  002272  163C               	andwf	i2___ftadd@f1+1,f,c
  8482  002274  0E00               	movlw	0
  8483  002276  163D               	andwf	i2___ftadd@f1+2,f,c
  8484  002278  8E3F               	bsf	i2___ftadd@f2+1,7,c
  8485  00227A  0EFF               	movlw	255
  8486  00227C  163E               	andwf	i2___ftadd@f2,f,c
  8487  00227E  0EFF               	movlw	255
  8488  002280  163F               	andwf	i2___ftadd@f2+1,f,c
  8489  002282  0E00               	movlw	0
  8490  002284  1640               	andwf	i2___ftadd@f2+2,f,c
  8491  002286  5045               	movf	i2___ftadd@exp2,w,c
  8492  002288  5C46               	subwf	i2___ftadd@exp1,w,c
  8493  00228A  B0D8               	btfsc	status,0,c
  8494  00228C  D01B               	goto	i2l6206
  8495  00228E                     i2l6196:
  8496  00228E  90D8               	bcf	status,0,c
  8497  002290  363E               	rlcf	i2___ftadd@f2,f,c
  8498  002292  363F               	rlcf	i2___ftadd@f2+1,f,c
  8499  002294  3640               	rlcf	i2___ftadd@f2+2,f,c
  8500  002296  0645               	decf	i2___ftadd@exp2,f,c
  8501  002298  5046               	movf	i2___ftadd@exp1,w,c
  8502  00229A  1845               	xorwf	i2___ftadd@exp2,w,c
  8503  00229C  B4D8               	btfsc	status,2,c
  8504  00229E  D00D               	goto	i2l6204
  8505  0022A0  0644               	decf	i2___ftadd@sign,f,c
  8506  0022A2  C044  F041         	movff	i2___ftadd@sign,??i2___ftadd
  8507  0022A6  0E07               	movlw	7
  8508  0022A8  1641               	andwf	??i2___ftadd,f,c
  8509  0022AA  B4D8               	btfsc	status,2,c
  8510  0022AC  D006               	goto	i2l6204
  8511  0022AE  D7EF               	goto	i2l6196
  8512  0022B0                     i2l6202:
  8513  0022B0  90D8               	bcf	status,0,c
  8514  0022B2  323D               	rrcf	i2___ftadd@f1+2,f,c
  8515  0022B4  323C               	rrcf	i2___ftadd@f1+1,f,c
  8516  0022B6  323B               	rrcf	i2___ftadd@f1,f,c
  8517  0022B8  2A46               	incf	i2___ftadd@exp1,f,c
  8518  0022BA                     i2l6204:
  8519  0022BA  5045               	movf	i2___ftadd@exp2,w,c
  8520  0022BC  1846               	xorwf	i2___ftadd@exp1,w,c
  8521  0022BE  B4D8               	btfsc	status,2,c
  8522  0022C0  D01F               	goto	i2l732
  8523  0022C2  D7F6               	goto	i2l6202
  8524  0022C4                     i2l6206:
  8525  0022C4  5046               	movf	i2___ftadd@exp1,w,c
  8526  0022C6  5C45               	subwf	i2___ftadd@exp2,w,c
  8527  0022C8  B0D8               	btfsc	status,0,c
  8528  0022CA  D01A               	goto	i2l732
  8529  0022CC                     i2l6208:
  8530  0022CC  90D8               	bcf	status,0,c
  8531  0022CE  363B               	rlcf	i2___ftadd@f1,f,c
  8532  0022D0  363C               	rlcf	i2___ftadd@f1+1,f,c
  8533  0022D2  363D               	rlcf	i2___ftadd@f1+2,f,c
  8534  0022D4  0646               	decf	i2___ftadd@exp1,f,c
  8535  0022D6  5046               	movf	i2___ftadd@exp1,w,c
  8536  0022D8  1845               	xorwf	i2___ftadd@exp2,w,c
  8537  0022DA  B4D8               	btfsc	status,2,c
  8538  0022DC  D00D               	goto	i2l6216
  8539  0022DE  0644               	decf	i2___ftadd@sign,f,c
  8540  0022E0  C044  F041         	movff	i2___ftadd@sign,??i2___ftadd
  8541  0022E4  0E07               	movlw	7
  8542  0022E6  1641               	andwf	??i2___ftadd,f,c
  8543  0022E8  B4D8               	btfsc	status,2,c
  8544  0022EA  D006               	goto	i2l6216
  8545  0022EC  D7EF               	goto	i2l6208
  8546  0022EE                     i2l6214:
  8547  0022EE  90D8               	bcf	status,0,c
  8548  0022F0  3240               	rrcf	i2___ftadd@f2+2,f,c
  8549  0022F2  323F               	rrcf	i2___ftadd@f2+1,f,c
  8550  0022F4  323E               	rrcf	i2___ftadd@f2,f,c
  8551  0022F6  2A45               	incf	i2___ftadd@exp2,f,c
  8552  0022F8                     i2l6216:
  8553  0022F8  5045               	movf	i2___ftadd@exp2,w,c
  8554  0022FA  1846               	xorwf	i2___ftadd@exp1,w,c
  8555  0022FC  A4D8               	btfss	status,2,c
  8556  0022FE  D7F7               	goto	i2l6214
  8557  002300                     i2l732:
  8558  002300  AE44               	btfss	i2___ftadd@sign,7,c
  8559  002302  D00C               	goto	i2l741
  8560  002304  0EFF               	movlw	255
  8561  002306  1A3B               	xorwf	i2___ftadd@f1,f,c
  8562  002308  0EFF               	movlw	255
  8563  00230A  1A3C               	xorwf	i2___ftadd@f1+1,f,c
  8564  00230C  0EFF               	movlw	255
  8565  00230E  1A3D               	xorwf	i2___ftadd@f1+2,f,c
  8566  002310  0E01               	movlw	1
  8567  002312  263B               	addwf	i2___ftadd@f1,f,c
  8568  002314  0E00               	movlw	0
  8569  002316  223C               	addwfc	i2___ftadd@f1+1,f,c
  8570  002318  0E00               	movlw	0
  8571  00231A  223D               	addwfc	i2___ftadd@f1+2,f,c
  8572  00231C                     i2l741:
  8573  00231C  AC44               	btfss	i2___ftadd@sign,6,c
  8574  00231E  D00C               	goto	i2l6222
  8575  002320  0EFF               	movlw	255
  8576  002322  1A3E               	xorwf	i2___ftadd@f2,f,c
  8577  002324  0EFF               	movlw	255
  8578  002326  1A3F               	xorwf	i2___ftadd@f2+1,f,c
  8579  002328  0EFF               	movlw	255
  8580  00232A  1A40               	xorwf	i2___ftadd@f2+2,f,c
  8581  00232C  0E01               	movlw	1
  8582  00232E  263E               	addwf	i2___ftadd@f2,f,c
  8583  002330  0E00               	movlw	0
  8584  002332  223F               	addwfc	i2___ftadd@f2+1,f,c
  8585  002334  0E00               	movlw	0
  8586  002336  2240               	addwfc	i2___ftadd@f2+2,f,c
  8587  002338                     i2l6222:
  8588  002338  0E00               	movlw	0
  8589  00233A  6E44               	movwf	i2___ftadd@sign,c
  8590  00233C  503B               	movf	i2___ftadd@f1,w,c
  8591  00233E  263E               	addwf	i2___ftadd@f2,f,c
  8592  002340  503C               	movf	i2___ftadd@f1+1,w,c
  8593  002342  223F               	addwfc	i2___ftadd@f2+1,f,c
  8594  002344  503D               	movf	i2___ftadd@f1+2,w,c
  8595  002346  2240               	addwfc	i2___ftadd@f2+2,f,c
  8596  002348  AE40               	btfss	i2___ftadd@f2+2,7,c
  8597  00234A  D00E               	goto	i2l6232
  8598  00234C  0EFF               	movlw	255
  8599  00234E  1A3E               	xorwf	i2___ftadd@f2,f,c
  8600  002350  0EFF               	movlw	255
  8601  002352  1A3F               	xorwf	i2___ftadd@f2+1,f,c
  8602  002354  0EFF               	movlw	255
  8603  002356  1A40               	xorwf	i2___ftadd@f2+2,f,c
  8604  002358  0E01               	movlw	1
  8605  00235A  263E               	addwf	i2___ftadd@f2,f,c
  8606  00235C  0E00               	movlw	0
  8607  00235E  223F               	addwfc	i2___ftadd@f2+1,f,c
  8608  002360  0E00               	movlw	0
  8609  002362  2240               	addwfc	i2___ftadd@f2+2,f,c
  8610  002364  0E01               	movlw	1
  8611  002366  6E44               	movwf	i2___ftadd@sign,c
  8612  002368                     i2l6232:
  8613  002368  C03E  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
  8614  00236C  C03F  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
  8615  002370  C040  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
  8616  002374  C046  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
  8617  002378  C044  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
  8618  00237C  EC50  F018         	call	i2___ftpack	;wreg free
  8619  002380  C001  F03B         	movff	?i2___ftpack,?i2___ftadd
  8620  002384  C002  F03C         	movff	?i2___ftpack+1,?i2___ftadd+1
  8621  002388  C003  F03D         	movff	?i2___ftpack+2,?i2___ftadd+2
  8622  00238C  0012               	return	
  8623  00238E                     __end_ofi2___ftadd:
  8624                           	opt stack 0
  8625                           pclatu	equ	0xFFB
  8626                           pclath	equ	0xFFA
  8627                           tblptru	equ	0xFF8
  8628                           tblptrh	equ	0xFF7
  8629                           tblptrl	equ	0xFF6
  8630                           tablat	equ	0xFF5
  8631                           prodh	equ	0xFF4
  8632                           prodl	equ	0xFF3
  8633                           intcon	equ	0xFF2
  8634                           intcon3	equ	0xFF0
  8635                           postinc0	equ	0xFEE
  8636                           fsr0h	equ	0xFEA
  8637                           fsr0l	equ	0xFE9
  8638                           wreg	equ	0xFE8
  8639                           postdec1	equ	0xFE5
  8640                           fsr1h	equ	0xFE2
  8641                           fsr1l	equ	0xFE1
  8642                           postinc2	equ	0xFDE
  8643                           postdec2	equ	0xFDD
  8644                           fsr2h	equ	0xFDA
  8645                           fsr2l	equ	0xFD9
  8646                           status	equ	0xFD8
  8647                           
  8648 ;; *************** function i2___ftpack *****************
  8649 ;; Defined at:
  8650 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;  arg             3    0[COMRAM] unsigned um
  8653 ;;  exp             1    3[COMRAM] unsigned char 
  8654 ;;  sign            1    4[COMRAM] unsigned char 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;		None
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  3    0[COMRAM] float 
  8659 ;; Registers used:
  8660 ;;		wreg, status,2, status,0
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8666 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8668 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8669 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8670 ;;Total ram usage:        8 bytes
  8671 ;; Hardware stack levels used:    1
  8672 ;; This function calls:
  8673 ;;		Nothing
  8674 ;; This function is called by:
  8675 ;;		___lltoft
  8676 ;;		i2___altoft
  8677 ;;		i2___ftadd
  8678 ;;		i2___ftdiv
  8679 ;;		i2___ftmul
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683                           	psect	text37
  8684  0030A0                     __ptext37:
  8685                           	opt stack 0
  8686  0030A0                     i2___ftpack:
  8687                           	opt stack 24
  8688                           
  8689                           ;incstack = 0
  8690  0030A0  5004               	movf	i2___ftpack@exp,w,c
  8691  0030A2  B4D8               	btfsc	status,2,c
  8692  0030A4  D005               	goto	i2l6010
  8693  0030A6  5001               	movf	i2___ftpack@arg,w,c
  8694  0030A8  1002               	iorwf	i2___ftpack@arg+1,w,c
  8695  0030AA  1003               	iorwf	i2___ftpack@arg+2,w,c
  8696  0030AC  A4D8               	btfss	status,2,c
  8697  0030AE  D00C               	goto	i2l6016
  8698  0030B0                     i2l6010:
  8699  0030B0  0E00               	movlw	0
  8700  0030B2  6E01               	movwf	?i2___ftpack,c
  8701  0030B4  0E00               	movlw	0
  8702  0030B6  6E02               	movwf	?i2___ftpack+1,c
  8703  0030B8  0E00               	movlw	0
  8704  0030BA  6E03               	movwf	?i2___ftpack+2,c
  8705  0030BC  0012               	return	
  8706  0030BE                     i2l6014:
  8707  0030BE  2A04               	incf	i2___ftpack@exp,f,c
  8708  0030C0  90D8               	bcf	status,0,c
  8709  0030C2  3203               	rrcf	i2___ftpack@arg+2,f,c
  8710  0030C4  3202               	rrcf	i2___ftpack@arg+1,f,c
  8711  0030C6  3201               	rrcf	i2___ftpack@arg,f,c
  8712  0030C8                     i2l6016:
  8713  0030C8  0E00               	movlw	0
  8714  0030CA  1401               	andwf	i2___ftpack@arg,w,c
  8715  0030CC  6E06               	movwf	??i2___ftpack& (0+255),c
  8716  0030CE  0E00               	movlw	0
  8717  0030D0  1402               	andwf	i2___ftpack@arg+1,w,c
  8718  0030D2  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  8719  0030D4  0EFE               	movlw	254
  8720  0030D6  1403               	andwf	i2___ftpack@arg+2,w,c
  8721  0030D8  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  8722  0030DA  5006               	movf	??i2___ftpack,w,c
  8723  0030DC  1007               	iorwf	??i2___ftpack+1,w,c
  8724  0030DE  1008               	iorwf	??i2___ftpack+2,w,c
  8725  0030E0  B4D8               	btfsc	status,2,c
  8726  0030E2  D00C               	goto	i2l6022
  8727  0030E4  D7EC               	goto	i2l6014
  8728  0030E6                     i2l6018:
  8729  0030E6  2A04               	incf	i2___ftpack@exp,f,c
  8730  0030E8  0E01               	movlw	1
  8731  0030EA  2601               	addwf	i2___ftpack@arg,f,c
  8732  0030EC  0E00               	movlw	0
  8733  0030EE  2202               	addwfc	i2___ftpack@arg+1,f,c
  8734  0030F0  0E00               	movlw	0
  8735  0030F2  2203               	addwfc	i2___ftpack@arg+2,f,c
  8736  0030F4  90D8               	bcf	status,0,c
  8737  0030F6  3203               	rrcf	i2___ftpack@arg+2,f,c
  8738  0030F8  3202               	rrcf	i2___ftpack@arg+1,f,c
  8739  0030FA  3201               	rrcf	i2___ftpack@arg,f,c
  8740  0030FC                     i2l6022:
  8741  0030FC  0E00               	movlw	0
  8742  0030FE  1401               	andwf	i2___ftpack@arg,w,c
  8743  003100  6E06               	movwf	??i2___ftpack& (0+255),c
  8744  003102  0E00               	movlw	0
  8745  003104  1402               	andwf	i2___ftpack@arg+1,w,c
  8746  003106  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  8747  003108  0EFF               	movlw	255
  8748  00310A  1403               	andwf	i2___ftpack@arg+2,w,c
  8749  00310C  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  8750  00310E  5006               	movf	??i2___ftpack,w,c
  8751  003110  1007               	iorwf	??i2___ftpack+1,w,c
  8752  003112  1008               	iorwf	??i2___ftpack+2,w,c
  8753  003114  B4D8               	btfsc	status,2,c
  8754  003116  D006               	goto	i2l6026
  8755  003118  D7E6               	goto	i2l6018
  8756  00311A                     i2l6024:
  8757  00311A  0604               	decf	i2___ftpack@exp,f,c
  8758  00311C  90D8               	bcf	status,0,c
  8759  00311E  3601               	rlcf	i2___ftpack@arg,f,c
  8760  003120  3602               	rlcf	i2___ftpack@arg+1,f,c
  8761  003122  3603               	rlcf	i2___ftpack@arg+2,f,c
  8762  003124                     i2l6026:
  8763  003124  BE02               	btfsc	i2___ftpack@arg+1,7,c
  8764  003126  D003               	goto	i2l694
  8765  003128  0E02               	movlw	2
  8766  00312A  6004               	cpfslt	i2___ftpack@exp,c
  8767  00312C  D7F6               	goto	i2l6024
  8768  00312E                     i2l694:
  8769  00312E  A004               	btfss	i2___ftpack@exp,0,c
  8770  003130  9E02               	bcf	i2___ftpack@arg+1,7,c
  8771  003132  90D8               	bcf	status,0,c
  8772  003134  3204               	rrcf	i2___ftpack@exp,f,c
  8773  003136  5004               	movf	i2___ftpack@exp,w,c
  8774  003138  1203               	iorwf	i2___ftpack@arg+2,f,c
  8775  00313A  5005               	movf	i2___ftpack@sign,w,c
  8776  00313C  A4D8               	btfss	status,2,c
  8777  00313E  8E03               	bsf	i2___ftpack@arg+2,7,c
  8778  003140  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  8779  003144  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  8780  003148  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  8781  00314C  0012               	return	
  8782  00314E                     __end_ofi2___ftpack:
  8783                           	opt stack 0
  8784                           pclatu	equ	0xFFB
  8785                           pclath	equ	0xFFA
  8786                           tblptru	equ	0xFF8
  8787                           tblptrh	equ	0xFF7
  8788                           tblptrl	equ	0xFF6
  8789                           tablat	equ	0xFF5
  8790                           prodh	equ	0xFF4
  8791                           prodl	equ	0xFF3
  8792                           intcon	equ	0xFF2
  8793                           intcon3	equ	0xFF0
  8794                           postinc0	equ	0xFEE
  8795                           fsr0h	equ	0xFEA
  8796                           fsr0l	equ	0xFE9
  8797                           wreg	equ	0xFE8
  8798                           postdec1	equ	0xFE5
  8799                           fsr1h	equ	0xFE2
  8800                           fsr1l	equ	0xFE1
  8801                           postinc2	equ	0xFDE
  8802                           postdec2	equ	0xFDD
  8803                           fsr2h	equ	0xFDA
  8804                           fsr2l	equ	0xFD9
  8805                           status	equ	0xFD8
  8806                           
  8807 ;; *************** function ___ftge *****************
  8808 ;; Defined at:
  8809 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  ff1             3    0[COMRAM] float 
  8812 ;;  ff2             3    3[COMRAM] float 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;		None
  8815 ;; Return value:  Size  Location     Type
  8816 ;;		None               void
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8824 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;Total ram usage:        9 bytes
  8829 ;; Hardware stack levels used:    1
  8830 ;; This function calls:
  8831 ;;		Nothing
  8832 ;; This function is called by:
  8833 ;;		_printf
  8834 ;; This function uses a non-reentrant model
  8835 ;;
  8836                           
  8837                           	psect	text38
  8838  003328                     __ptext38:
  8839                           	opt stack 0
  8840  003328                     ___ftge:
  8841                           	opt stack 25
  8842                           
  8843                           ;incstack = 0
  8844  003328  AE03               	btfss	___ftge@ff1+2,7,c
  8845  00332A  D016               	goto	i2l6660
  8846  00332C  C001  F007         	movff	___ftge@ff1,??___ftge
  8847  003330  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  8848  003334  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  8849  003338  1E07               	comf	??___ftge,f,c
  8850  00333A  1E08               	comf	??___ftge+1,f,c
  8851  00333C  1E09               	comf	??___ftge+2,f,c
  8852  00333E  2A07               	incf	??___ftge,f,c
  8853  003340  0E00               	movlw	0
  8854  003342  2208               	addwfc	??___ftge+1,f,c
  8855  003344  2209               	addwfc	??___ftge+2,f,c
  8856  003346  0E00               	movlw	0
  8857  003348  2407               	addwf	??___ftge,w,c
  8858  00334A  6E01               	movwf	___ftge@ff1,c
  8859  00334C  0E00               	movlw	0
  8860  00334E  2008               	addwfc	??___ftge+1,w,c
  8861  003350  6E02               	movwf	___ftge@ff1+1,c
  8862  003352  0E80               	movlw	128
  8863  003354  2009               	addwfc	??___ftge+2,w,c
  8864  003356  6E03               	movwf	___ftge@ff1+2,c
  8865  003358                     i2l6660:
  8866  003358  AE06               	btfss	___ftge@ff2+2,7,c
  8867  00335A  D016               	goto	i2l6664
  8868  00335C  C004  F007         	movff	___ftge@ff2,??___ftge
  8869  003360  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  8870  003364  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  8871  003368  1E07               	comf	??___ftge,f,c
  8872  00336A  1E08               	comf	??___ftge+1,f,c
  8873  00336C  1E09               	comf	??___ftge+2,f,c
  8874  00336E  2A07               	incf	??___ftge,f,c
  8875  003370  0E00               	movlw	0
  8876  003372  2208               	addwfc	??___ftge+1,f,c
  8877  003374  2209               	addwfc	??___ftge+2,f,c
  8878  003376  0E00               	movlw	0
  8879  003378  2407               	addwf	??___ftge,w,c
  8880  00337A  6E04               	movwf	___ftge@ff2,c
  8881  00337C  0E00               	movlw	0
  8882  00337E  2008               	addwfc	??___ftge+1,w,c
  8883  003380  6E05               	movwf	___ftge@ff2+1,c
  8884  003382  0E80               	movlw	128
  8885  003384  2009               	addwfc	??___ftge+2,w,c
  8886  003386  6E06               	movwf	___ftge@ff2+2,c
  8887  003388                     i2l6664:
  8888  003388  0E00               	movlw	0
  8889  00338A  1A01               	xorwf	___ftge@ff1,f,c
  8890  00338C  0E00               	movlw	0
  8891  00338E  1A02               	xorwf	___ftge@ff1+1,f,c
  8892  003390  0E80               	movlw	128
  8893  003392  1A03               	xorwf	___ftge@ff1+2,f,c
  8894  003394  0E00               	movlw	0
  8895  003396  1A04               	xorwf	___ftge@ff2,f,c
  8896  003398  0E00               	movlw	0
  8897  00339A  1A05               	xorwf	___ftge@ff2+1,f,c
  8898  00339C  0E80               	movlw	128
  8899  00339E  1A06               	xorwf	___ftge@ff2+2,f,c
  8900  0033A0  5004               	movf	___ftge@ff2,w,c
  8901  0033A2  5C01               	subwf	___ftge@ff1,w,c
  8902  0033A4  5005               	movf	___ftge@ff2+1,w,c
  8903  0033A6  5802               	subwfb	___ftge@ff1+1,w,c
  8904  0033A8  5006               	movf	___ftge@ff2+2,w,c
  8905  0033AA  5803               	subwfb	___ftge@ff1+2,w,c
  8906  0033AC  B0D8               	btfsc	status,0,c
  8907  0033AE  D002               	goto	i2l6670
  8908  0033B0  90D8               	bcf	status,0,c
  8909  0033B2  0012               	return	
  8910  0033B4                     i2l6670:
  8911  0033B4  80D8               	bsf	status,0,c
  8912  0033B6  0012               	return	
  8913  0033B8                     __end_of___ftge:
  8914                           	opt stack 0
  8915                           pclatu	equ	0xFFB
  8916                           pclath	equ	0xFFA
  8917                           tblptru	equ	0xFF8
  8918                           tblptrh	equ	0xFF7
  8919                           tblptrl	equ	0xFF6
  8920                           tablat	equ	0xFF5
  8921                           prodh	equ	0xFF4
  8922                           prodl	equ	0xFF3
  8923                           intcon	equ	0xFF2
  8924                           intcon3	equ	0xFF0
  8925                           postinc0	equ	0xFEE
  8926                           fsr0h	equ	0xFEA
  8927                           fsr0l	equ	0xFE9
  8928                           wreg	equ	0xFE8
  8929                           postdec1	equ	0xFE5
  8930                           fsr1h	equ	0xFE2
  8931                           fsr1l	equ	0xFE1
  8932                           postinc2	equ	0xFDE
  8933                           postdec2	equ	0xFDD
  8934                           fsr2h	equ	0xFDA
  8935                           fsr2l	equ	0xFD9
  8936                           status	equ	0xFD8
  8937                           
  8938 ;; *************** function _lcdClear *****************
  8939 ;; Defined at:
  8940 ;;		line 74 in file "lcd.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;		None
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;		None
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  1    wreg      void 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0, cstack
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;Total ram usage:        0 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; Hardware stack levels required when called:    2
  8961 ;; This function calls:
  8962 ;;		i2_lcdInst
  8963 ;; This function is called by:
  8964 ;;		_service
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	text39
  8969  00391A                     __ptext39:
  8970                           	opt stack 0
  8971  00391A                     _lcdClear:
  8972                           	opt stack 24
  8973                           
  8974                           ;lcd.c: 75: lcdInst(0b00000001);
  8975                           
  8976                           ;incstack = 0
  8977  00391A  0E01               	movlw	1
  8978  00391C  EC5D  F01C         	call	i2_lcdInst
  8979  003920  0012               	return		;funcret
  8980  003922                     __end_of_lcdClear:
  8981                           	opt stack 0
  8982                           pclatu	equ	0xFFB
  8983                           pclath	equ	0xFFA
  8984                           tblptru	equ	0xFF8
  8985                           tblptrh	equ	0xFF7
  8986                           tblptrl	equ	0xFF6
  8987                           tablat	equ	0xFF5
  8988                           prodh	equ	0xFF4
  8989                           prodl	equ	0xFF3
  8990                           intcon	equ	0xFF2
  8991                           intcon3	equ	0xFF0
  8992                           postinc0	equ	0xFEE
  8993                           fsr0h	equ	0xFEA
  8994                           fsr0l	equ	0xFE9
  8995                           wreg	equ	0xFE8
  8996                           postdec1	equ	0xFE5
  8997                           fsr1h	equ	0xFE2
  8998                           fsr1l	equ	0xFE1
  8999                           postinc2	equ	0xFDE
  9000                           postdec2	equ	0xFDD
  9001                           fsr2h	equ	0xFDA
  9002                           fsr2l	equ	0xFD9
  9003                           status	equ	0xFD8
  9004                           
  9005 ;; *************** function i2_lcdInst *****************
  9006 ;; Defined at:
  9007 ;;		line 27 in file "lcd.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  data            1    wreg     unsigned char 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  data            1    4[COMRAM] unsigned char 
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0, cstack
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9023 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;Total ram usage:        2 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:    1
  9028 ;; This function calls:
  9029 ;;		i2_lcdNibble
  9030 ;; This function is called by:
  9031 ;;		_lcdClear
  9032 ;;		_lcdNewline
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           	psect	text40
  9037  0038BA                     __ptext40:
  9038                           	opt stack 0
  9039  0038BA                     i2_lcdInst:
  9040                           	opt stack 22
  9041                           
  9042                           ;incstack = 0
  9043                           ;i2lcdInst@data stored from wreg
  9044  0038BA  6E05               	movwf	i2lcdInst@data,c
  9045                           
  9046                           ;lcd.c: 28: LATDbits.LATD2 = 0;
  9047  0038BC  948C               	bcf	3980,2,c	;volatile
  9048                           
  9049                           ;lcd.c: 29: _delay((unsigned long)((140)*(32000000/4000000.0)));
  9050  0038BE  0EE0               	movlw	224
  9051  0038C0                     i2u917_47:
  9052  0038C0  D000               	nop2	
  9053  0038C2  2EE8               	decfsz	wreg,f,c
  9054  0038C4  D7FD               	bra	i2u917_47
  9055                           
  9056                           ;lcd.c: 30: lcdNibble(data);
  9057  0038C6  5005               	movf	i2lcdInst@data,w,c
  9058  0038C8  ECD8  F01A         	call	i2_lcdNibble
  9059                           
  9060                           ;lcd.c: 31: _delay((unsigned long)((1000)*(32000000/4000000.0)));
  9061  0038CC  0E0B               	movlw	11
  9062  0038CE  6E04               	movwf	??i2_lcdInst& (0+255),c
  9063  0038D0  0E62               	movlw	98
  9064  0038D2                     i2u918_47:
  9065  0038D2  2EE8               	decfsz	wreg,f,c
  9066  0038D4  D7FE               	bra	i2u918_47
  9067  0038D6  2E04               	decfsz	??i2_lcdInst& (0+255),f,c
  9068  0038D8  D7FC               	bra	i2u918_47
  9069  0038DA  D000               	nop2	
  9070  0038DC  0012               	return		;funcret
  9071  0038DE                     __end_ofi2_lcdInst:
  9072                           	opt stack 0
  9073                           pclatu	equ	0xFFB
  9074                           pclath	equ	0xFFA
  9075                           tblptru	equ	0xFF8
  9076                           tblptrh	equ	0xFF7
  9077                           tblptrl	equ	0xFF6
  9078                           tablat	equ	0xFF5
  9079                           prodh	equ	0xFF4
  9080                           prodl	equ	0xFF3
  9081                           intcon	equ	0xFF2
  9082                           intcon3	equ	0xFF0
  9083                           postinc0	equ	0xFEE
  9084                           fsr0h	equ	0xFEA
  9085                           fsr0l	equ	0xFE9
  9086                           wreg	equ	0xFE8
  9087                           postdec1	equ	0xFE5
  9088                           fsr1h	equ	0xFE2
  9089                           fsr1l	equ	0xFE1
  9090                           postinc2	equ	0xFDE
  9091                           postdec2	equ	0xFDD
  9092                           fsr2h	equ	0xFDA
  9093                           fsr2l	equ	0xFD9
  9094                           status	equ	0xFD8
  9095                           
  9096 ;; *************** function i2_lcdNibble *****************
  9097 ;; Defined at:
  9098 ;;		line 46 in file "lcd.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;  data            1    wreg     unsigned char 
  9101 ;; Auto vars:     Size  Location     Type
  9102 ;;  data            1    2[COMRAM] unsigned char 
  9103 ;;  lcdNibble       1    1[COMRAM] unsigned char 
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  1    wreg      void 
  9106 ;; Registers used:
  9107 ;;		wreg, status,2, status,0
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9116 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9117 ;;Total ram usage:        3 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; This function calls:
  9120 ;;		Nothing
  9121 ;; This function is called by:
  9122 ;;		_putch
  9123 ;;		i2_lcdInst
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           
  9127                           	psect	text41
  9128  0035B0                     __ptext41:
  9129                           	opt stack 0
  9130  0035B0                     i2_lcdNibble:
  9131                           	opt stack 24
  9132                           
  9133                           ;incstack = 0
  9134                           ;i2lcdNibble@data stored from wreg
  9135  0035B0  6E03               	movwf	i2lcdNibble@data,c
  9136                           
  9137                           ;lcd.c: 48: char temp = data & 0xF0;
  9138  0035B2  5003               	movf	i2lcdNibble@data,w,c
  9139  0035B4  0BF0               	andlw	240
  9140  0035B6  6E02               	movwf	i2lcdNibble@temp,c
  9141                           
  9142                           ;lcd.c: 49: LATD = LATD & 0x0F;
  9143  0035B8  508C               	movf	3980,w,c	;volatile
  9144  0035BA  0B0F               	andlw	15
  9145  0035BC  6E8C               	movwf	3980,c	;volatile
  9146                           
  9147                           ;lcd.c: 50: LATD = temp | LATD;
  9148  0035BE  5002               	movf	i2lcdNibble@temp,w,c
  9149  0035C0  108C               	iorwf	3980,w,c	;volatile
  9150  0035C2  6E8C               	movwf	3980,c	;volatile
  9151                           
  9152                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  9153  0035C4  968C               	bcf	3980,3,c	;volatile
  9154                           
  9155                           ;lcd.c: 53: _delay((unsigned long)((600)*(32000000/4000000.0)));
  9156  0035C6  0E07               	movlw	7
  9157  0035C8  6E01               	movwf	??i2_lcdNibble& (0+255),c
  9158  0035CA  0E3A               	movlw	58
  9159  0035CC                     i2u919_47:
  9160  0035CC  2EE8               	decfsz	wreg,f,c
  9161  0035CE  D7FE               	bra	i2u919_47
  9162  0035D0  2E01               	decfsz	??i2_lcdNibble& (0+255),f,c
  9163  0035D2  D7FC               	bra	i2u919_47
  9164  0035D4  D000               	nop2	
  9165                           
  9166                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  9167  0035D6  868C               	bsf	3980,3,c	;volatile
  9168                           
  9169                           ;lcd.c: 55: _delay((unsigned long)((600)*(32000000/4000000.0)));
  9170  0035D8  0E07               	movlw	7
  9171  0035DA  6E01               	movwf	??i2_lcdNibble& (0+255),c
  9172  0035DC  0E3A               	movlw	58
  9173  0035DE                     i2u920_47:
  9174  0035DE  2EE8               	decfsz	wreg,f,c
  9175  0035E0  D7FE               	bra	i2u920_47
  9176  0035E2  2E01               	decfsz	??i2_lcdNibble& (0+255),f,c
  9177  0035E4  D7FC               	bra	i2u920_47
  9178  0035E6  D000               	nop2	
  9179                           
  9180                           ;lcd.c: 58: data = data << 4;
  9181  0035E8  3803               	swapf	i2lcdNibble@data,w,c
  9182  0035EA  0BF0               	andlw	240
  9183  0035EC  6E03               	movwf	i2lcdNibble@data,c
  9184                           
  9185                           ;lcd.c: 60: temp = data & 0xF0;
  9186  0035EE  5003               	movf	i2lcdNibble@data,w,c
  9187  0035F0  0BF0               	andlw	240
  9188  0035F2  6E02               	movwf	i2lcdNibble@temp,c
  9189                           
  9190                           ;lcd.c: 61: LATD = LATD & 0x0F;
  9191  0035F4  508C               	movf	3980,w,c	;volatile
  9192  0035F6  0B0F               	andlw	15
  9193  0035F8  6E8C               	movwf	3980,c	;volatile
  9194                           
  9195                           ;lcd.c: 62: LATD = temp | LATD;
  9196  0035FA  5002               	movf	i2lcdNibble@temp,w,c
  9197  0035FC  108C               	iorwf	3980,w,c	;volatile
  9198  0035FE  6E8C               	movwf	3980,c	;volatile
  9199                           
  9200                           ;lcd.c: 64: LATDbits.LATD3 = 0;
  9201  003600  968C               	bcf	3980,3,c	;volatile
  9202                           
  9203                           ;lcd.c: 65: _delay((unsigned long)((600)*(32000000/4000000.0)));
  9204  003602  0E07               	movlw	7
  9205  003604  6E01               	movwf	??i2_lcdNibble& (0+255),c
  9206  003606  0E3A               	movlw	58
  9207  003608                     i2u921_47:
  9208  003608  2EE8               	decfsz	wreg,f,c
  9209  00360A  D7FE               	bra	i2u921_47
  9210  00360C  2E01               	decfsz	??i2_lcdNibble& (0+255),f,c
  9211  00360E  D7FC               	bra	i2u921_47
  9212  003610  D000               	nop2	
  9213                           
  9214                           ;lcd.c: 66: LATDbits.LATD3 = 1;
  9215  003612  868C               	bsf	3980,3,c	;volatile
  9216                           
  9217                           ;lcd.c: 67: _delay((unsigned long)((600)*(32000000/4000000.0)));
  9218  003614  0E07               	movlw	7
  9219  003616  6E01               	movwf	??i2_lcdNibble& (0+255),c
  9220  003618  0E3A               	movlw	58
  9221  00361A                     i2u922_47:
  9222  00361A  2EE8               	decfsz	wreg,f,c
  9223  00361C  D7FE               	bra	i2u922_47
  9224  00361E  2E01               	decfsz	??i2_lcdNibble& (0+255),f,c
  9225  003620  D7FC               	bra	i2u922_47
  9226  003622  D000               	nop2	
  9227  003624  0012               	return		;funcret
  9228  003626                     __end_ofi2_lcdNibble:
  9229                           	opt stack 0
  9230                           pclatu	equ	0xFFB
  9231                           pclath	equ	0xFFA
  9232                           tblptru	equ	0xFF8
  9233                           tblptrh	equ	0xFF7
  9234                           tblptrl	equ	0xFF6
  9235                           tablat	equ	0xFF5
  9236                           prodh	equ	0xFF4
  9237                           prodl	equ	0xFF3
  9238                           intcon	equ	0xFF2
  9239                           intcon3	equ	0xFF0
  9240                           postinc0	equ	0xFEE
  9241                           fsr0h	equ	0xFEA
  9242                           fsr0l	equ	0xFE9
  9243                           wreg	equ	0xFE8
  9244                           postdec1	equ	0xFE5
  9245                           fsr1h	equ	0xFE2
  9246                           fsr1l	equ	0xFE1
  9247                           postinc2	equ	0xFDE
  9248                           postdec2	equ	0xFDD
  9249                           fsr2h	equ	0xFDA
  9250                           fsr2l	equ	0xFD9
  9251                           status	equ	0xFD8
  9252                           pclatu	equ	0xFFB
  9253                           pclath	equ	0xFFA
  9254                           tblptru	equ	0xFF8
  9255                           tblptrh	equ	0xFF7
  9256                           tblptrl	equ	0xFF6
  9257                           tablat	equ	0xFF5
  9258                           prodh	equ	0xFF4
  9259                           prodl	equ	0xFF3
  9260                           intcon	equ	0xFF2
  9261                           intcon3	equ	0xFF0
  9262                           postinc0	equ	0xFEE
  9263                           fsr0h	equ	0xFEA
  9264                           fsr0l	equ	0xFE9
  9265                           wreg	equ	0xFE8
  9266                           postdec1	equ	0xFE5
  9267                           fsr1h	equ	0xFE2
  9268                           fsr1l	equ	0xFE1
  9269                           postinc2	equ	0xFDE
  9270                           postdec2	equ	0xFDD
  9271                           fsr2h	equ	0xFDA
  9272                           fsr2l	equ	0xFD9
  9273                           status	equ	0xFD8
  9274                           
  9275                           	psect	rparam
  9276  0000                     pclatu	equ	0xFFB
  9277                           pclath	equ	0xFFA
  9278                           tblptru	equ	0xFF8
  9279                           tblptrh	equ	0xFF7
  9280                           tblptrl	equ	0xFF6
  9281                           tablat	equ	0xFF5
  9282                           prodh	equ	0xFF4
  9283                           prodl	equ	0xFF3
  9284                           intcon	equ	0xFF2
  9285                           intcon3	equ	0xFF0
  9286                           postinc0	equ	0xFEE
  9287                           fsr0h	equ	0xFEA
  9288                           fsr0l	equ	0xFE9
  9289                           wreg	equ	0xFE8
  9290                           postdec1	equ	0xFE5
  9291                           fsr1h	equ	0xFE2
  9292                           fsr1l	equ	0xFE1
  9293                           postinc2	equ	0xFDE
  9294                           postdec2	equ	0xFDD
  9295                           fsr2h	equ	0xFDA
  9296                           fsr2l	equ	0xFD9
  9297                           status	equ	0xFD8
  9298                           
  9299                           	psect	temp
  9300  00007E                     btemp:
  9301                           	opt stack 0
  9302  00007E                     	ds	1
  9303  0000                     int$flags	set	btemp
  9304                           pclatu	equ	0xFFB
  9305                           pclath	equ	0xFFA
  9306                           tblptru	equ	0xFF8
  9307                           tblptrh	equ	0xFF7
  9308                           tblptrl	equ	0xFF6
  9309                           tablat	equ	0xFF5
  9310                           prodh	equ	0xFF4
  9311                           prodl	equ	0xFF3
  9312                           intcon	equ	0xFF2
  9313                           intcon3	equ	0xFF0
  9314                           postinc0	equ	0xFEE
  9315                           fsr0h	equ	0xFEA
  9316                           fsr0l	equ	0xFE9
  9317                           wreg	equ	0xFE8
  9318                           postdec1	equ	0xFE5
  9319                           fsr1h	equ	0xFE2
  9320                           fsr1l	equ	0xFE1
  9321                           postinc2	equ	0xFDE
  9322                           postdec2	equ	0xFDD
  9323                           fsr2h	equ	0xFDA
  9324                           fsr2l	equ	0xFD9
  9325                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    174
    Data        9
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     125
    BANK0           128     95     108
    BANK1           256     10      10
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _service in COMRAM

    _service->_printf
    i2_startT0->i2___fttol
    i2___ftdiv->i2___altoft
    i2___altoft->i2___ftpack
    _printf->i2___fttol
    i2___fttol->i2___ftadd
    i2___ftneg->i2___ftmul
    _scale->i2___ftmul
    _lcdNewline->i2_lcdInst
    _fround->i2___ftmul
    i2___ftmul->i2___ftdiv
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->i2___ftpack
    ___ftsub->i2___ftadd
    i2___ftadd->_fround
    _lcdClear->i2_lcdInst
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    _main->_startT0
    _startT0->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___altoft
    ___ftadd->___ftneg
    ___altoft->___ftpack
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_startT0

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24329
                       _digitalWrite
                            _initLCD
                             _initT0
                            _startT0
 ---------------------------------------------------------------------------------
 (1) _startT0                                             13    10      3   23442
                                             92 BANK0      3     0      3
                                              0 BANK1     10    10      0
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     964
                                             77 BANK0     15    11      4
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     329
                                             62 BANK0      3     0      3
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    6066
                                             47 BANK0     15     9      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    5190
                                             32 BANK0     15     9      6
                           ___altoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    6411
                                             65 BANK0     12     6      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    3968
                                             22 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    3360
                                             14 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _initT0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                             19 BANK0      1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              2     2      0     135
                                             17 BANK0      2     2      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            3     3      0     113
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _digitalWrite                                         9     3      6     752
                                             14 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                             18    18      0   72124
                                            121 COMRAM     4     4      0
                                              0 BANK0     14    14      0
                            ___ftsub
                           _lcdClear
                             _printf
                          i2___ftadd
                          i2___ftneg
                     i2_digitalWrite
                          i2_startT0
 ---------------------------------------------------------------------------------
 (5) i2_startT0                                           13    10      3   11414
                                             85 COMRAM    13    10      3
                         i2___altoft
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
                          i2___fttol
 ---------------------------------------------------------------------------------
 (6) i2___ftdiv                                           15     9      6    2052
                                             18 COMRAM    15     9      6
                         i2___altoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (6) i2___altoft                                          10     6      4    1510
                                              8 COMRAM    10     6      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (5) i2_digitalWrite                                       9     3      6     918
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) _printf                                              44    38      6   51838
                                             85 COMRAM    36    30      6
                            ___awdiv
                             ___ftge
                            ___ftsub
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
                          i2___ftadd
                          i2___ftmul
                          i2___ftneg
                          i2___fttol
 ---------------------------------------------------------------------------------
 (6) i2___fttol                                           15    11      4     706
                                             70 COMRAM    15    11      4
                              _scale (ARG)
                         i2___altoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (6) i2___ftneg                                            3     0      3     228
                                             48 COMRAM     3     0      3
                         i2___altoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _scale                                               10     7      3   12206
                                             48 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                             ___wmul
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0     582
                                              5 COMRAM     1     1      0
                         _lcdNewline
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) _lcdNewline                                           0     0      0     270
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (6) _fround                                              13    10      3   11828
                                             48 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                             ___wmul
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (6) i2___ftmul                                           15     9      6    3252
                                             33 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
                         i2___altoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3268
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    2262
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    2470
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         15     9      6     832
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          12     6      6    1150
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (6) ___lltoft                                             9     5      4    1412
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     876
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1078
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (6) ___ftsub                                              6     0      6    3972
                                             70 COMRAM     6     0      6
                           ___lltoft (ARG)
                          i2___ftadd
 ---------------------------------------------------------------------------------
 (6) i2___ftadd                                           12     6      6    3346
                                             58 COMRAM    12     6      6
                             _fround (ARG)
                         i2___altoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2___ftpack                                           8     3      5    1176
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     828
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) _lcdClear                                             0     0      0     270
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (8) i2_lcdInst                                            2     2      0     270
                                              3 COMRAM     2     2      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2_lcdNibble                                          3     3      0     228
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _digitalWrite
   _initLCD
     _lcdInst
       _lcdNibble
   _initT0
   _startT0
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)

 _service (ROOT)
   ___ftsub
     ___lltoft (ARG)
       i2___ftpack
     i2___ftadd (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftneg (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
       i2___ftpack (ARG)
   _lcdClear
     i2_lcdInst
       i2_lcdNibble
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftge
     ___ftsub
       ___lltoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftdiv (ARG)
               i2___altoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftneg (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftdiv (ARG)
               i2___altoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
         i2___ftpack (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       i2___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       i2___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
     _putch
       _lcdNewline
         i2_lcdInst
           i2_lcdNibble
       i2_lcdNibble
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       i2___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
     i2___ftadd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftneg (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftneg
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
     i2___fttol
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftdiv (ARG)
               i2___altoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftneg (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftdiv (ARG)
               i2___altoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftneg (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
   i2___ftadd
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       i2___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
     i2___altoft (ARG)
       i2___ftpack
     i2___ftdiv (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftneg (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
     i2___ftpack (ARG)
   i2___ftneg
     i2___altoft (ARG)
       i2___ftpack
     i2___ftdiv (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
   i2_digitalWrite
   i2_startT0
     i2___altoft
       i2___ftpack
     i2___ftadd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftneg (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftdiv
       i2___altoft (ARG)
         i2___ftpack
       i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftneg
       i2___altoft (ARG)
         i2___ftpack
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
     i2___fttol
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
       i2___altoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftdiv (ARG)
               i2___altoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftneg (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftdiv (ARG)
               i2___altoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftdiv (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftneg (ARG)
         i2___altoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           i2___altoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___altoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A       A       7        3.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5F      6C       5       84.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3      34        0.0%
DATA                 0      0      F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Mon Feb 27 11:52:42 2017

              ___altoft@exp 009E                           _i 00EA               ___altoft@sign 009F  
                        l60 3536                ___awdiv@sign 000C                  i2___altoft 3538  
       ___wmul@multiplicand 0011                 __CFG_BORV$3 000000                  i2___ftpack 30A0  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000                ___ftadd@exp1 00CC                ___ftadd@exp2 00CB  
              ___ftadd@sign 00CA                         l721 1C1E                         l723 1C46  
                       l732 1D1C                         l741 1D46                         l717 1BE4  
                       l752 2602                         l694 2BC2                         l791 3838  
              __CFG_CPB$OFF 000000                         _PEN 007E2A                __CFG_CPD$OFF 000000  
                       _SEN 007E28                ___awmod@sign 0006                         wreg 000FE8  
              __CFG_LVP$OFF 000000                ___ftdiv@cntr 00A9                ___ftdiv@sign 00AE  
              __CFG_WDT$OFF 000000                        l6060 2B26                        l6070 2BB4  
                      l6062 2B56                        l6054 2B04                        l6082 2BE8  
                      l6066 2B76                        l6058 2B18                        l6076 2BCC  
                      l6068 2BA6                        l3872 3000                        l6520 1CAC  
                      l6504 1C3C                        l3890 3054                        l3882 3030  
                      l6522 1CBA                        l6514 1C7E                        l3884 3038  
                      l3876 3014                        l6540 1D70                        l6532 1D02  
                      l6524 1CC8                        l6612 2402                        l3894 3068  
                      l3878 301C                        l6550 1DBE                        l6534 1D10  
                      l6526 1CD4                        l6630 246E                        l6606 23C8  
                      l6702 2704                        l3888 304C                        l3896 3070  
                      l6560 2526                        l6640 24AC                        l6720 276A  
                      l6712 2734                        l6626 2450                        l6714 2744  
                      l6706 2718                        l6476 3226                        l6492 1BF2  
                      l6636 248E                        l6716 274E                        l6478 3236  
                      l6566 2560                        l6498 1C2C                        l6586 25C0  
                      l6684 2672                        _EEIF 007D0C                        STR_1 10DC  
                      STR_2 10DA                        STR_3 10C9                        STR_4 10D2  
                      STR_5 10C0                        STR_6 10AF                        _LATA 000F89  
                      _LATB 000F8A                        _LATC 000F8B                        _LATD 000F8C  
                      _LATE 000F8D                printf@tmpval 0072                        u4084 2FDE  
                      u4085 2FD6                        _PEIE 007F96                        _RCEN 007E2B  
                      u8111 23A4                        u8131 23DE                        u8061 2502  
                      u8221 264E                        u8240 2698                        u8081 253C  
                      u9107 384E                        u9117 3864                        u8245 268E  
                      i2l78 21A6                        u9127 32BE                        u9137 32D2  
                      i2l99 38EE                        u9147 3308                        u9157 331C  
                      u9087 3760                        u9097 3794                        u7851 1B92  
                      u7861 1BB0                        _RSEN 007E29                        _flag 00E6  
                      _main 34BE                ___ftpack@arg 008E                i2___altoft@c 0009  
                      _keys 1097                ___ftpack@exp 0091                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr2h 000FDA                        fsr0l 000FE9  
                      fsr1l 000FE1                        fsr2l 000FD9                        btemp 007E  
              i2___ftadd@f1 003B                i2___ftadd@f2 003E                        prodh 000FF4  
                      prodl 000FF3                        start 000E               __CFG_IESO$OFF 000000  
              i2___ftdiv@f1 0013                i2___ftdiv@f2 0016                i2___ftdiv@f3 001E  
              i2___ftneg@f1 0031               __CFG_MCLRE$ON 000000                ___ftmul@cntr 00BC  
              i2___ftmul@f1 0022                i2___ftmul@f2 0025                ___param_bank 000000  
              ___ftmul@sign 00BD                i2___fttol@f1 0047                 i2_lcdNibble 35B0  
              ___fttol@exp1 00DB                ___fttol@lval 00D7                       ?_main 0001  
                     _ACKEN 007E2C                       _ACKDT 007E2D             __end_of___awdiv 343C  
                     _EEADR 000FA9             __end_of___ftadd 1DE4             __end_of___awmod 3696  
           __end_of___ftdiv 2638             __end_of___ftneg 3846             __end_of___lldiv 34BE  
           __end_of___ftmul 24EC                       _T0CON 000FD5             ___awdiv@divisor 0009  
           __end_of___llmod 36FC             __end_of___ftsub 37DE             __end_of___fttol 277C  
                     i2l435 150E                       i2l721 2250                       i2l732 2300  
                     i2l741 231C                       i2l717 2226                       i2l662 29C4  
                     i2l760 2836                       i2l752 2F8E                       i2l836 34AC  
                     i2l694 312E                       i2l846 36EA                       i2l766 289C  
                     i2l759 280E                       i2l791 38AC             ___awdiv@counter 000B  
                     _TMR0H 000FD7                       _TMR0L 000FD6                       _PORTA 000F80  
                     _PORTB 000F81                       _PORTC 000F82                       _PORTD 000F83  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96               __CFG_PWRT$OFF 000000  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000  
             __CFG_WRT3$OFF 000000                ___lltoft@exp 0011             __end_of_lcdInst 3870  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000             __end_of_initLCD 379E  
            __CFG_EBTRB$OFF 000000                       _angle 00E3             __end_of_dpowers 1029  
                     _count 00E8                       _scale 178C               ___ftpack@sign 0092  
                     _putch 38DE                       pclath 000FFA                       tablat 000FF5  
           __end_of_service 21E2             __end_of_startT0 2AEA                       status 000FD8  
             i2___ftdiv@exp 001D          __size_ofi2___ftadd 01AC              __CFG_PBADEN$ON 000000  
        __size_ofi2___ftdiv 00E6          __size_ofi2___ftneg 0024          __size_ofi2___ftmul 00F4  
        __size_ofi2___fttol 00F4        __end_of_digitalWrite 30A0             __initialization 37DE  
        __size_ofi2_lcdInst 0024                __end_of_main 3538                __end_of_keys 10A8  
             i2___ftmul@exp 002B                 ?i2___altoft 0009                 ?i2___ftpack 0001  
                    ??_main 00DF               ___fttol@sign1 00D6               __activetblptr 000002  
        __size_ofi2_startT0 00FC        __size_of__tdiv_to_l_ 0132               i2startT0@time 005F  
                    _ADCON0 000FC2                      _ADCON1 000FC1                      _ADCON2 000FC0  
          __end_of___altoft 3298            ___llmod@dividend 0001                      ?_scale 0031  
                    _ADRESH 000FC4                      _EEADRH 000FAA                      _ADRESL 000FC3  
                    _EEDATA 000FA8                      _EECON1 000FA6                      _EECON2 000FA7  
          ___awdiv@dividend 0007             i2lcdNibble@data 0003                      ?_putch 0001  
          __end_of___ftpack 2BF6             i2lcdNibble@temp 0002            __end_of___lltoft 3758  
                    _INT1IF 007F80                      i2l6010 30B0                      i2l6100 33DC  
                    i2l6022 30FC                      i2l6014 30BE                      i2l6110 33FE  
                    i2l6024 311A                      i2l6016 30C8                      i2l7000 14EA  
                    i2l6026 3124                      i2l6018 30E6                      i2l6202 22B0  
                    i2l6106 33F2                      i2l6122 3424                      i2l7002 14F8  
                    i2l6204 22BA                      i2l6108 33FA                      i2l7012 152A  
                    i2l7100 31BA                      i2l6222 2338                      i2l6214 22EE  
                    i2l6206 22C4                      i2l6126 3432                      i2l6118 341A  
                    i2l6150 3660                      i2l6142 3646                      i2l6310 1FEA  
                    i2l6302 1F2A                      i2l7022 164E                      i2l7006 1512  
                    i2l7030 166E                      i2l6232 2368                      i2l6216 22F8  
                    i2l6208 22CC                      i2l7024 1658                      i2l7016 157A  
                    i2l7104 31C8                      i2l6162 368C                      i2l6154 3674  
                    i2l6146 3654                      i2l6138 363A                      i2l6242 2E0E  
                    i2l6330 1964                      i2l7106 31CE                      i2l6180 225E  
                    i2l6420 28EA                      i2l6404 288A                      i2l6148 365C  
                    i2l6324 18C0                      i2l7060 1762                      i2l7052 16E8  
                    i2l7036 1696                      i2l7028 1664                      i2l6174 2234  
                    i2l6414 28CC                      i2l6406 2896                      i2l6094 33CC  
                    i2l6158 367E                      i2l6262 2E68                      i2l6342 1AB4  
                    i2l6334 1988                      i2l7054 16F4                      i2l7062 1772  
                    i2l6272 2E90                      i2l6248 2E36                      i2l7048 16CE  
                    i2l6442 295C                      i2l6434 292C                      i2l6266 2E78  
                    i2l7082 317E                      i2l6196 228E                      i2l6364 27D4  
                    i2l6276 2EA0                      i2l6348 1B58                      i2l7092 31A0  
                    i2l6454 298A                      i2l6358 27A8                      i2l7094 31A6  
                    i2l7086 318C                      i2l6464 29B2                      i2l7088 3192  
                    i2l6800 2F2A                      i2l7184 211C                      i2l6730 345E  
                    i2l6466 29BE                      i2l6458 299A                      i2l6394 2862  
                    i2l7098 31B4                      i2l7194 215C                      i2l7178 20E6  
                    i2l6660 3358                      i2l6652 37B4                      i2l6732 346A  
                    i2l6820 2F68                      i2l6670 33B4                      i2l6742 349E  
                    i2l6734 346E                      i2l6750 36A8                      i2l6398 2872  
                    i2l7198 218C                      i2l6664 3388                      i2l6752 36B4  
                    i2l6912 117E                      i2l6754 36B8                      i2l6764 3702  
                    i2l6844 2D1E                      i2l6940 1296                      i2l6780 355A  
                    i2l6758 36DC                      i2l6766 370E                      i2l6862 2D84  
                    i2l6942 12A6                      i2l6782 3566                      i2l6880 2DD4  
                    i2l6872 2DAC                      i2l6952 1318                      i2l6944 12D4  
                    i2l6936 1272                      i2l6928 120E                      i2l6874 2DB8  
                    i2l6866 2D94                      i2l6970 13F4                      i2l6946 12E4  
                    i2l6890 10FA                      i2l6794 2F02                      i2l6876 2DBE  
                    i2l6972 13F8                      i2l6956 133C                      i2l6892 1104  
                    i2l6966 1390                      i2l6886 10EA                      i2l6984 1430  
                    i2l6896 1108                      i2l6994 14D4                      i2l6898 112E  
                    i2l6996 14DE                      i2l6988 144C                      _OSCCON 000FD3  
                    u732_41 21F2                      u733_41 2206                      u753_41 2DF6  
                    u841_41 2F12                      u755_41 2E1E                      _TMR0IE 007F95  
                    _TMR0IF 007F92                      u845_41 2D02                      u767_41 278C  
                    u839_41 2EEA                      u769_41 27B8              i2_startT0$1210 005C  
            i2_startT0$1209 0059                      _SSPADD 000FC8                      _TRISC3 007CA3  
                    _TRISC4 007CA4                      _SSPBUF 000FC9            __end_of_lcdClear 3922  
            __CFG_XINST$OFF 000000            __end_of__powers_ 1077                      ___ftge 3328  
                    ___wmul 3870                   ??___awdiv 000B                   ??___ftadd 00C7  
            __CFG_STVREN$ON 000000                   ??___awmod 0005                   ??___ftdiv 00A6  
                 ??___ftneg 00C1                   ??___lldiv 0009                   ??___ftmul 00B5  
                 ??___llmod 0009                   ??___ftsub 004D                   ??___fttol 00D1  
                    _initT0 390A                      _fround 1DE4              i2___altoft@exp 0011  
          ___awdiv@quotient 000D             ___awmod@divisor 0003             ___awmod@counter 0005  
                 ??_lcdInst 0091                      _printf 10E0       ___ftmul@f3_as_product 00B9  
                 ??_initLCD 0093           __end_ofi2___ftadd 238E           __end_ofi2___ftdiv 2FC0  
            i2___ftadd@exp1 0046              i2___ftadd@exp2 0045           __end_ofi2___ftneg 38BA  
         __end_ofi2___ftmul 2EDA           __end_ofi2___fttol 2DE6              i2___ftadd@sign 0044  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ??_service 0080                   ??_startT0 00DF  
         __end_ofi2_lcdInst 38DE              i2___ftdiv@cntr 001C                  __accesstop 0080  
   __end_of__initialization 3808                  ___altoft@c 0096         __size_ofi2___altoft 0078  
            i2___ftdiv@sign 0021                  ___ftadd@f1 00C1                  ___ftadd@f2 00C4  
       __size_ofi2___ftpack 00AE                  ___ftge@ff1 0001                  ___ftge@ff2 0004  
             ___rparam_used 000001           __end_ofi2_startT0 2CF2                  ___ftdiv@f1 00A0  
                ___ftdiv@f2 00A3                  ___ftdiv@f3 00AB                  ___ftneg@f1 00BE  
            i2___ftpack@arg 0001              i2___ftpack@exp 0004                  ___ftmul@f1 00AF  
                ___ftmul@f2 00B2                  ___ftsub@f1 0047                  ___ftsub@f2 004A  
                ___fttol@f1 00CD              __pcstackCOMRAM 0001                __pidataBANK0 3900  
                ___lltoft@c 0009              i2___ftmul@cntr 002F               __end_of_scale 1B7C  
            i2___ftmul@sign 0030               __end_of_putch 3900              i2___fttol@exp1 0055  
            i2___fttol@lval 0051          __size_of_lcdNibble 0090                  __div_to_l_ 28AE  
           __div_to_l_@exp1 000C             __div_to_l_@cntr 000B                     ??_scale 0034  
           __div_to_l_@quot 0007          i2digitalWrite@port 0001                     ??_putch 0006  
                __pbssBANK0 00E8       __size_of_digitalWrite 00E0               __div_to_l_@f1 0001  
             __div_to_l_@f2 0004                     ?___ftge 0001                ?i2_lcdNibble 0001  
                   ?___wmul 000F                     ?_initT0 0001                   ?___altoft 0096  
                   ?_fround 0031                  _lcdNewline 3912                   ?___ftpack 008E  
                   ?_printf 0056                   ?___lltoft 0009                   ?_lcdClear 0001  
              _digitalWrite 2FC0                     _SSPCON1 000FC6                     _SSPCON2 000FC5  
                   _SSPSTAT 000FC7     __size_ofi2_digitalWrite 00AC           __end_of_lcdNibble 3328  
         __end_of__npowers_ 1050                     __Hparam 0000                  _scale$1207 0034  
                   __Lparam 0000             __size_of___ftge 0090                     ___awdiv 33B8  
                   ___ftadd 1B7C                     ___awmod 3626                     ___ftdiv 24EC  
                   ___ftneg 3816                     ___lldiv 343C             __size_of___wmul 0026  
                   ___ftmul 238E                     ___llmod 3696                     ___ftsub 379E  
                   ___fttol 2638                __psmallconst 1000                ??i2___altoft 000D  
                ??___altoft 009A             __size_of_initT0 0008                     __pcinit 37DE  
              ??i2___ftpack 0006                  ??___ftpack 0093             __size_of_fround 0246  
   i2___ftmul@f3_as_product 002C                     __ramtop 1000  __end_oftestFrequency@F2962 10AF  
                   _lcdInst 3846                  ??___lltoft 000D                     __ptext0 34BE  
                   __ptext1 29D6                     __ptext2 2638                     __ptext3 3816  
                   __ptext4 238E                     __ptext5 24EC                     __ptext6 1B7C  
                   __ptext7 31FA                     __ptext8 2AEA                     __ptext9 390A  
           __size_of_printf 06AC                     _initLCD 3758           __end_of_hexpowers 1097  
               ?__div_to_l_ 0001                     _dpowers 1001                     _extFreq 00DF  
          ___awmod@dividend 0001             i2___altoft@sign 0012                  ??_lcdClear 0006  
                   _service 0008                     _startT0 29D6              __pintcode_body 202A  
      end_of_initialization 3808               __Lmediumconst 0000                     int_func 202A  
        __end_ofi2___altoft 35B0          __end_ofi2___ftpack 314E             ___lldiv@divisor 0005  
           ___lldiv@counter 0009                     printf@c 0079                     printf@f 0056  
                   postdec1 000FE5                     postdec2 000FDD                     postinc0 000FEE  
                   postinc2 000FDE              __tdiv_to_l_@f1 0001              __tdiv_to_l_@f2 0004  
               ?_lcdNewline 0001               ??__tdiv_to_l_ 0007                   _PORTBbits 000F81  
                 i2___ftadd 21E2                   i2___ftdiv 2EDA                   i2___ftneg 3896  
                 i2___ftmul 2DE6                   i2___fttol 2CF2                   i2_lcdInst 38BA  
               ___ftdiv@exp 00AA             i2___ftpack@sign 0005         __size_of__div_to_l_ 0128  
               ___ftmul@exp 00B8                   i2_startT0 2BF6              __end_of___ftge 33B8  
            __end_of___wmul 3896        __size_ofi2_lcdNibble 0076               i2lcdInst@data 0005  
            __end_of_initT0 3912              __end_of_fround 202A              __end_of_printf 178C  
     i2startT0@milliseconds 0056         start_initialization 37DE                 startT0@time 0106  
       __end_of__tdiv_to_l_ 28AE             i2___fttol@sign1 0050                  ?i2___ftadd 003B  
                ?i2___ftdiv 0013                  ?i2___ftneg 0031                  ?i2___ftmul 0022  
                ?i2___fttol 0047              i2_digitalWrite 314E                  ?i2_lcdInst 0001  
       __size_of_lcdNewline 0008             ___llmod@divisor 0005            __CFG_OSC$INTIO67 000000  
           ___llmod@counter 0009                    ??___ftge 0007                  ?i2_startT0 0056  
                  ??___wmul 0013                 __pdataBANK0 00DF                    ??_initT0 008E  
          __CFG_LPT1OSC$OFF 000000                    ??_fround 0034                    ??_printf 005C  
         __size_of___altoft 009E                  fround@prec 003A           __size_of___ftpack 010C  
         __size_of___lltoft 005C               __pcstackBANK0 0080               __pcstackBANK1 0100  
    __end_ofi2_digitalWrite 31FA           __size_of_lcdClear 0008           i2digitalWrite@pin 0003  
         i2digitalWrite@val 0005           __CFG_CCP2MX$PORTC 000000                   __pintcode 0008  
                 _lcdNibble 3298                    ?___awdiv 0007                    ?___ftadd 00C1  
                  ?___awmod 0001                    ?___ftdiv 00A0                    ?___ftneg 00BE  
                  ?___lldiv 0001                    ?___ftmul 00AF                    ?___llmod 0001  
                  ?___ftsub 0047                   __npowers_ 1029                    ?___fttol 00CD  
                  ?_lcdInst 0001                 __tdiv_to_l_ 277C                ??__div_to_l_ 0007  
                  ?_initLCD 0001                 __smallconst 1000                    ?_service 0001  
                 _hexpowers 1077             ?i2_digitalWrite 0001                    ?_startT0 00DC  
               ??i2___ftadd 0041                 ??i2___ftdiv 0019                 ??i2___ftneg 0034  
               ??i2___ftmul 0028              __size_of_scale 03F0                 ??i2___fttol 004B  
        testFrequency@F2962 10A8              __size_of_putch 0022                 ??i2_lcdInst 0004  
            ___wmul@product 0013                    _LATDbits 000F8C          __end_of__div_to_l_ 29D6  
                  i2u920_47 35DE                    i2u921_47 3608                    i2u922_47 361A  
                  i2u916_47 38F2                    i2u917_47 38C0                    i2u918_47 38D2  
                  i2u847_40 2D3C                    i2u847_45 2D34                    i2u919_47 35CC  
                  i2u873_40 1508                    i2u857_40 11B6                    i2u857_45 11AC  
                  i2u883_44 3164                    i2u883_45 315E            __CFG_WDTPS$32768 000000  
               ??i2_startT0 0059                  ?_lcdNibble 0001                  service@key 007D  
              ??_lcdNewline 0006           ___wmul@multiplier 000F               lcdNibble@data 0090  
                printf@flag 0068               lcdNibble@temp 008F                  printf@fval 0076  
                printf@prec 006A         startT0@milliseconds 00DC                   copy_data0 37F2  
        __end_of_lcdNewline 391A                    __Hrparam 0000                    __Lrparam 0000  
        __CFG_BOREN$SBORDIS 000000            __size_of___awdiv 0084            __size_of___ftadd 0268  
          __size_of___awmod 0070            __size_of___ftdiv 014C            __size_of___ftneg 0030  
          __size_of___lldiv 0082                    ___altoft 31FA            __size_of___ftmul 015E  
          __size_of___llmod 0066            __size_of___ftsub 0040            __size_of___fttol 0144  
                  ___ftpack 2AEA                 _fround$1205 0037                 _fround$1206 0034  
                  ___lltoft 36FC            __size_of_lcdInst 002A            __size_of_initLCD 0046  
                  _lcdClear 391A                    __ptext10 3758                    __ptext11 3846  
                  __ptext20 2CF2                    __ptext12 3298                    __ptext21 3896  
                  __ptext13 2FC0                    __ptext30 277C                    __ptext22 178C  
                  __ptext31 28AE                    __ptext23 38DE                    __ptext15 2BF6  
                  __ptext40 38BA                    __ptext32 36FC                    __ptext24 3912  
                  __ptext16 2EDA                    __ptext41 35B0                    __ptext33 3696  
                  __ptext25 1DE4                    __ptext17 3538                    __ptext34 343C  
                  __ptext26 2DE6                    __ptext18 314E                    __ptext35 379E  
                  __ptext27 3870                    __ptext19 10E0                    __ptext36 21E2  
                  __ptext28 3626                    __ptext37 30A0                    __ptext29 33B8  
                  __ptext38 3328                    __ptext39 391A                    __powers_ 1050  
          __size_of_service 21DA            __size_of_startT0 0114               __size_of_main 007A  
             ??i2_lcdNibble 0001                 ??_lcdNibble 008E                    int$flags 007E  
                 printf@idx 0065                   printf@exp 0070                   printf@val 006C  
                 putch@data 0006                 _OSCTUNEbits 000F9B                  _INTCONbits 000FF2  
             ?_digitalWrite 008E                _service$1204 007A                    scale@scl 0037  
                  intlevel2 0000            __tdiv_to_l_@exp1 000F            __tdiv_to_l_@cntr 000E  
          __tdiv_to_l_@quot 000A            ___lldiv@dividend 0001                    printf@ap 0066  
               lcdInst@data 0092                ?__tdiv_to_l_ 0001                 _printf$1208 0062  
       __end_ofi2_lcdNibble 3626            ??i2_digitalWrite 0007            digitalWrite@port 008E  
          ___lldiv@quotient 000A              ??_digitalWrite 0094                _startT0$1116 0100  
              _startT0$1117 0103             digitalWrite@pin 0090             digitalWrite@val 0092  
